import{_ as n,c as s}from"./app.406a4cec.js";var a="/naive-dafou-ui-dist/assets/16372035028079.cce04812.jpg",p="/naive-dafou-ui-dist/assets/16372035995487.6656b631.jpg",t="/naive-dafou-ui-dist/assets/16372036136575.88d4bf2b.jpg",e="/naive-dafou-ui-dist/assets/16372063682798.9112e068.jpg",c="/naive-dafou-ui-dist/assets/16372108758501.ae665adc.jpg",o="/naive-dafou-ui-dist/assets/16372127257780.97632294.jpg",l="/naive-dafou-ui-dist/assets/16372130889540.f5a5ae66.jpg",i="/naive-dafou-ui-dist/assets/16372154529506.1fd7318a.jpg",u="/naive-dafou-ui-dist/assets/16372155952084.0dea975a.jpg",k="/naive-dafou-ui-dist/assets/16372390976893.43f7416d.jpg",r="/naive-dafou-ui-dist/assets/16372399963355.dd98d853.jpg",d="/naive-dafou-ui-dist/assets/16372404015828.61ee69c8.jpg",v="/naive-dafou-ui-dist/assets/16372414496870.f48b96e3.jpg",m="/naive-dafou-ui-dist/assets/16372415089590.3b224d75.jpg",b="/naive-dafou-ui-dist/assets/16372416749758.58c9e6f3.jpg",y="/naive-dafou-ui-dist/assets/16372489514677.8f98bdae.jpg",g="/naive-dafou-ui-dist/assets/16372506527452.54b682f4.jpg",w="/naive-dafou-ui-dist/assets/16372509115490.6a731be1.jpg",h="/naive-dafou-ui-dist/assets/16372510051559.63c0fceb.jpg",f="/naive-dafou-ui-dist/assets/16372550690136.879b32f0.jpg",S="/naive-dafou-ui-dist/assets/16372574639663.78b8a544.jpg",x="/naive-dafou-ui-dist/assets/16372579378578.91d76a8e.jpg",T="/naive-dafou-ui-dist/assets/16372580666019.5ab37b74.jpg",j="/naive-dafou-ui-dist/assets/16372581937084.146b4245.jpg",C="/naive-dafou-ui-dist/assets/16372627831315.23d073a1.jpg",q="/naive-dafou-ui-dist/assets/16372629417053.e29c514e.jpg",A="/naive-dafou-ui-dist/assets/16372633473523.f8ea0c1f.jpg",E="/naive-dafou-ui-dist/assets/16372638183224.35dd0e16.jpg",B="/naive-dafou-ui-dist/assets/16372640902972.8dcf303e.jpg",z="/naive-dafou-ui-dist/assets/16372650749167.55ab1bcf.jpg",L="/naive-dafou-ui-dist/assets/16372659344957.428b11ca.jpg",M="/naive-dafou-ui-dist/assets/16372660091344.ea28b7c3.jpg",I="/naive-dafou-ui-dist/assets/16372668164445.f26494dc.jpg",D="/naive-dafou-ui-dist/assets/16372669325310.3a326902.jpg",N="/naive-dafou-ui-dist/assets/16372803229993.b1955b8e.jpg",P="/naive-dafou-ui-dist/assets/16372820133979.7335a659.jpg",O="/naive-dafou-ui-dist/assets/16372823735135.2d9b52a6.jpg",_="/naive-dafou-ui-dist/assets/16372824713349.132fd6ad.jpg",U="/naive-dafou-ui-dist/assets/16372869029589.ec5fbe78.jpg",R="/naive-dafou-ui-dist/assets/16372867370493.94fcf431.jpg",F="/naive-dafou-ui-dist/assets/16372889588998.288fabaa.jpg",Q="/naive-dafou-ui-dist/assets/16372891097117.b48e1f1b.jpg",J="/naive-dafou-ui-dist/assets/16372904017598.886af819.jpg",W="/naive-dafou-ui-dist/assets/16372963484150.3ef957a2.jpg",K="/naive-dafou-ui-dist/assets/16372966524929.71e7a9c2.jpg",H="/naive-dafou-ui-dist/assets/16372970945125.c253d48d.jpg",V="/naive-dafou-ui-dist/assets/16373000021187.8a8c0300.jpg",$="/naive-dafou-ui-dist/assets/16373046577852.e4056058.jpg",G="/naive-dafou-ui-dist/assets/16373047866673.a8b93f67.jpg",X="/naive-dafou-ui-dist/assets/16373052855532.a3c71fb4.jpg",Y="/naive-dafou-ui-dist/assets/16373079404178.bae4a86d.jpg",Z="/naive-dafou-ui-dist/assets/16373104905025.1022c18d.jpg",nn="/naive-dafou-ui-dist/assets/16373110102941.f059f965.jpg",sn="/naive-dafou-ui-dist/assets/16373111459454.9ce9d530.jpg",an="/naive-dafou-ui-dist/assets/16373113114018.b87d45e5.jpg";const pn={},tn=s('<h2 id="\u4EC0\u4E48\u662Fjuc"><a class="header-anchor" href="#\u4EC0\u4E48\u662Fjuc" aria-hidden="true">#</a> \u4EC0\u4E48\u662FJUC</h2><p><img src="'+a+'" alt=""></p><p>java.util\u5DE5\u5177\u5305\uFF0C\u5305\u3001\u5206\u7C7B</p><p>\u4E1A\u52A1\uFF1A\u666E\u901A\u7684\u7EBF\u7A0B\u4EE3\u7801 Thread</p><p>Runnable \u6CA1\u6709\u8FD4\u56DE\u503C\uFF0C\u6548\u7387\u76F8\u6BD4\u4E8ECallable\u76F8\u5BF9\u8F83\u4F4E</p><p>Callable</p><p><img src="'+p+'" alt=""></p><p>Lock</p><p><img src="'+t+`" alt=""></p><h2 id="\u8FDB\u7A0B\u548C\u7EBF\u7A0B"><a class="header-anchor" href="#\u8FDB\u7A0B\u548C\u7EBF\u7A0B" aria-hidden="true">#</a> \u8FDB\u7A0B\u548C\u7EBF\u7A0B</h2><h3 id="\u8FDB\u7A0B\u548C\u7EBF\u7A0B-1"><a class="header-anchor" href="#\u8FDB\u7A0B\u548C\u7EBF\u7A0B-1" aria-hidden="true">#</a> \u8FDB\u7A0B\u548C\u7EBF\u7A0B</h3><blockquote><p>\u5982\u679C\u4E0D\u80FD\u4F7F\u7528\u4E00\u53E5\u8BDD\u8BF4\u51FA\u6765\u7684\u6280\u672F\uFF0C\u5C31\u662F\u4E0D\u624E\u5B9E</p></blockquote><p>\u8FDB\u7A0B\uFF1A\u4E00\u4E2A\u7A0B\u5E8F\uFF0CQQ.exe Music.exe \u7A0B\u5E8F\u7684\u96C6\u5408</p><p>\u4E00\u4E2A\u8FDB\u7A0B\u5F80\u5F80\u53EF\u4EE5\u5305\u542B\u591A\u4E2A\u7EBF\u7A0B\uFF0C\u81F3\u5C11\u5305\u542B\u4E00\u4E2A</p><p>java\u9ED8\u8BA4\u6709\u51E0\u4E2A\u7EBF\u7A0B--&gt;2\u4E2A main\u3001GC\uFF08\u5B88\u62A4\u7EBF\u7A0B\uFF09</p><p>\u7EBF\u7A0B\uFF1A\u5F00\u4E86\u4E00\u4E2A\u8FDB\u7A0Bidea\uFF0C\u7F16\u5199\u4EE3\u7801\uFF0C\u81EA\u52A8\u4FDD\u5B58\uFF08\u7EBF\u7A0B\u8D1F\u8D23\u7684\uFF09</p><p>\u5BF9\u4E8EJava\u800C\u8A00\uFF0C\u5F00\u59CB\u4E00\u4E2A\u7EBF\u7A0B\uFF1AThread Runnable Callable</p><p>Java\u771F\u7684\u53EF\u4EE5\u5F00\u59CB\u7EBF\u7A0B\u5417\uFF1F</p><p>\u4E0D\u884C\uFF0C\u5B83\u662F\u8C03\u7528\u672C\u5730\u65B9\u6CD5\uFF0C\u4E5F\u5C31\u662FC++\u7F16\u5199\u7684\u4EE3\u7801\uFF0CC++\u542F\u52A8\u7684\u7EBF\u7A0B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * This method is not invoked for the main method thread or &quot;system&quot;
     * group threads created/set up by the VM. Any new functionality added
     * to this method in the future may have to also be added to the VM.
     *
     * A zero status value corresponds to state &quot;NEW&quot;.
     */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>threadStatus <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalThreadStateException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">/* Notify the group that this thread is about to be started
     * so that it can be added to the group&#39;s list of threads
     * and the group&#39;s unstarted count can be decremented. */</span>
    group<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">boolean</span> started <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token function">start0</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        started <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>started<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                group<span class="token punctuation">.</span><span class="token function">threadStartFailed</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> ignore<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">/* do nothing. If start0 threw a Throwable then
              it will be passed up the call stack */</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">native</span> <span class="token keyword">void</span> <span class="token function">start0</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5E76\u53D1\u3001\u5E76\u884C"><a class="header-anchor" href="#\u5E76\u53D1\u3001\u5E76\u884C" aria-hidden="true">#</a> \u5E76\u53D1\u3001\u5E76\u884C</h3><p>\u5E76\u53D1\uFF08\u591A\u7EBF\u7A0B\u64CD\u4F5C\u540C\u4E00\u4E2A\u8D44\u6E90\uFF09</p><ul><li>CPU\u4E00\u6838\uFF0C\u6A21\u62DF\u51FA\u591A\u4E2A\u7EBF\u7A0B\uFF0C\u5929\u4E0B\u6B66\u529F\uFF0C\u552F\u5FEB\u4E0D\u7834\uFF0C\u5FEB\u901F\u4EA4\u66FF</li></ul><p>\u5E76\u884C\uFF08\u591A\u4E2A\u4EBA\u4E00\u8D77\u884C\u52A8\uFF09</p><ul><li>CPU\u591A\u6838\uFF0C\u591A\u4E2A\u7EBF\u7A0B\u53EF\u4EE5\u540C\u65F6\u6267\u884C</li></ul><p>\u83B7\u53D6CPU\u6838\u6570</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>juc</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test1</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u83B7\u53D6CPU\u7684\u6838\u6570</span>
        <span class="token comment">// CPU \u5BC6\u96C6\u578B\u3001IO\u5BC6\u96C6\u578B</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Runtime</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">availableProcessors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5E76\u53D1\u7F16\u7A0B\u7684\u672C\u8D28\uFF1A<strong>\u5145\u5206\u5229\u7528CPU\u7684\u8D44\u6E90</strong></p><h3 id="\u56DE\u987E\u591A\u7EBF\u7A0B"><a class="header-anchor" href="#\u56DE\u987E\u591A\u7EBF\u7A0B" aria-hidden="true">#</a> \u56DE\u987E\u591A\u7EBF\u7A0B</h3><h4 id="\u7EBF\u7A0B\u6709\u51E0\u4E2A\u72B6\u6001"><a class="header-anchor" href="#\u7EBF\u7A0B\u6709\u51E0\u4E2A\u72B6\u6001" aria-hidden="true">#</a> \u7EBF\u7A0B\u6709\u51E0\u4E2A\u72B6\u6001</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">State</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * \u65B0\u751F
     */</span>
    NEW<span class="token punctuation">,</span>

    <span class="token doc-comment comment">/**
     * \u8FD0\u884C
     */</span>
    RUNNABLE<span class="token punctuation">,</span>

    <span class="token doc-comment comment">/**
     * \u963B\u585E
     */</span>
    BLOCKED<span class="token punctuation">,</span>

    <span class="token doc-comment comment">/**
     * \u7B49\u5F85\uFF0C\u6B7B\u6B7B\u7684\u7B49\uFF0C\u4E0D\u653E\u5F03
     */</span>
    WAITING<span class="token punctuation">,</span>

    <span class="token doc-comment comment">/**
     * \u8D85\u65F6\u7B49\u5F85\uFF0C\u53EF\u4EE5\u653E\u5F03
     */</span>
    TIMED_WAITING<span class="token punctuation">,</span>

    <span class="token doc-comment comment">/**
     * \u7EC8\u6B62
     */</span>
    TERMINATED<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="wait-sheep\u533A\u522B"><a class="header-anchor" href="#wait-sheep\u533A\u522B" aria-hidden="true">#</a> wait/sheep\u533A\u522B</h4><ol><li>\u6765\u81EA\u4E0D\u540C\u7684\u7C7B</li></ol><ul><li>wait --Object</li><li>sleep --Thread</li></ul><p>\u4F01\u4E1A\u4E2D\uFF0C\u4E00\u822C\u4E0D\u7528sleep\uFF0C\u800C\u662F</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>DAYS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u5173\u4E8E\u9501\u7684\u91CA\u653E</li></ol><ul><li>wait \u4F1A\u91CA\u653E\u9501</li><li>sleep\u7761\u89C9\u4E86\uFF0C\u62B1\u7740\u9501\u7761\u89C9\uFF0C\u4E0D\u4F1A\u91CA\u653E</li></ul><ol start="3"><li>\u4F7F\u7528\u7684\u8303\u56F4</li></ol><ul><li>wait \u5FC5\u987B\u5728\u540C\u6B65\u4EE3\u7801\u5757\u4E2D\uFF0C\u5FC5\u987B\u8981\u7B49\u5F85</li><li>sleep \u53EF\u4EE5\u5728\u4EFB\u4F55\u5730\u65B9\u7761\u89C9</li></ul><ol start="4"><li>\u662F\u5426\u9700\u8981\u6355\u83B7\u5F02\u5E38</li></ol><ul><li>wait \u4E0D\u9700\u8981\u6355\u83B7\u5F02\u5E38</li><li>sleep \u5FC5\u987B\u8981\u6355\u83B7\u5F02\u5E38</li></ul><h2 id="lock\u9501"><a class="header-anchor" href="#lock\u9501" aria-hidden="true">#</a> Lock\u9501</h2><blockquote><p>\u4F20\u7EDF\u7684 Synchronzied</p></blockquote><h3 id="\u4E70\u7968\u7684\u4F8B\u5B50"><a class="header-anchor" href="#\u4E70\u7968\u7684\u4F8B\u5B50" aria-hidden="true">#</a> \u4E70\u7968\u7684\u4F8B\u5B50</h3><ol><li>\u4F20\u7EDF\u7684\u5F00\u53D1\u65B9\u5F0F</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SaleTicketDemo01</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">MyThread</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span><span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u540C\u4E00\u4E2A\u8D44\u6E90\u88AB\u591A\u4E2A\u7EBF\u7A0B\u5E76\u53D1\u8BBF\u95EE</li></ol><p>\u5728\u591A\u7EBF\u7A0B\u4E2D\uFF0C\u4E00\u822C\u90FD\u662F\u8D44\u6E90\u7C7B\u548C\u7EBF\u7A0B\u64CD\u4F5C\u89E3\u8026\uFF0C\u4E0D\u653E\u5728\u7528\u540C\u4E00\u4E2A\u7C7B\u4E2D\uFF0C\u53EA\u6709\u5728\u7EBF\u7A0B\u64CD\u4F5C\u8D44\u6E90\u7C7B\u65F6\uFF0C\u624D\u4F1A\u521B\u5EFA\u8D44\u6E90\u7C7B\u7684\u5BF9\u8C61</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u57FA\u672C\u7684\u4E70\u7968\u7684\u4F8B\u5B50
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
 * \u771F\u6B63\u7684\u591A\u7EBF\u7A0B\u5F00\u53D1\uFF0C\u516C\u53F8\u4E2D\u7684\u5F00\u53D1\uFF0C\u964D\u4F4E\u8026\u5408\u6027\uFF0C\u5982\u679C\u662F\u53BB\u5B9E\u73B0Runnable\uFF0C\u589E\u52A0\u4E86\u8026\u5408\u6027
 * \u7EBF\u7A0B\u5C31\u662F\u4E00\u4E2A\u5355\u72EC\u7684\u8D44\u6E90\u7C7B\uFF0C\u6CA1\u6709\u4EFB\u4F55\u9644\u5C5E\u64CD\u4F5C
 * 1\u3001\u5C5E\u6027\u3001\u65B9\u6CD5
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SaleTicketDemo01</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u591A\u7EBF\u7A0B\u64CD\u4F5C</span>
        <span class="token comment">// \u5E76\u53D1\uFF1A\u591A\u7EBF\u7A0B\u64CD\u4F5C\u540C\u4E00\u4E2A\u8D44\u6E90\u7C7B</span>
        <span class="token class-name">Ticket</span> ticket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Ticket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// @FunctionalInterface \u51FD\u6570\u5F0F\u63A5\u53E3\uFF0C\u53EF\u4EE5\u76F4\u63A5new \u51FA\u6765\uFF0Cjdk8\u4E4B\u540E\uFF0C\u53EF\u4EE5\u4F7F\u7528lambda\u8868\u8FBE\u5F0F\uFF1A(\u53C2\u6570)-&gt;{\u4EE3\u7801}</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">60</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                ticket<span class="token punctuation">.</span><span class="token function">sale</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">60</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                ticket<span class="token punctuation">.</span><span class="token function">sale</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">&quot;B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">60</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                ticket<span class="token punctuation">.</span><span class="token function">sale</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">&quot;C&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u8D44\u6E90\u7C7B OOP</span>
<span class="token keyword">class</span> <span class="token class-name">Ticket</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5C5E\u6027\u3001\u65B9\u6CD5</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> number <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">;</span>

    <span class="token comment">// \u4E70\u7968\u7684\u65B9\u5F0F</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sale</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>number <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\u5356\u51FA\u4E86&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>number<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A&quot;</span> <span class="token operator">+</span> number<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>A\u5356\u51FA\u4E8650\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A49
A\u5356\u51FA\u4E8649\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A48
A\u5356\u51FA\u4E8648\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A47
A\u5356\u51FA\u4E8647\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A46
A\u5356\u51FA\u4E8645\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A44
A\u5356\u51FA\u4E8644\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A43
B\u5356\u51FA\u4E8646\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A45
B\u5356\u51FA\u4E8642\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A41
B\u5356\u51FA\u4E8641\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A40
B\u5356\u51FA\u4E8640\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A39
A\u5356\u51FA\u4E8643\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A42
A\u5356\u51FA\u4E8638\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A37
A\u5356\u51FA\u4E8637\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A36
A\u5356\u51FA\u4E8636\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A35
A\u5356\u51FA\u4E8635\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A34
A\u5356\u51FA\u4E8634\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A33
A\u5356\u51FA\u4E8632\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A31
A\u5356\u51FA\u4E8631\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A30
A\u5356\u51FA\u4E8630\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A29
A\u5356\u51FA\u4E8629\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A28
A\u5356\u51FA\u4E8628\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A27
A\u5356\u51FA\u4E8627\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A26
A\u5356\u51FA\u4E8626\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A25
B\u5356\u51FA\u4E8639\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A38
A\u5356\u51FA\u4E8625\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A24
A\u5356\u51FA\u4E8623\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A22
A\u5356\u51FA\u4E8622\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A21
C\u5356\u51FA\u4E8633\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A32
C\u5356\u51FA\u4E8620\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A19
A\u5356\u51FA\u4E8621\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A20
B\u5356\u51FA\u4E8624\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A23
A\u5356\u51FA\u4E8618\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A17
C\u5356\u51FA\u4E8619\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A18
A\u5356\u51FA\u4E8616\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A15
A\u5356\u51FA\u4E8614\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A13
A\u5356\u51FA\u4E8613\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A12
A\u5356\u51FA\u4E8612\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A11
A\u5356\u51FA\u4E8611\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A10
A\u5356\u51FA\u4E8610\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A9
B\u5356\u51FA\u4E8617\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A16
B\u5356\u51FA\u4E868\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A7
B\u5356\u51FA\u4E867\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A6
B\u5356\u51FA\u4E866\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A5
B\u5356\u51FA\u4E865\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A4
B\u5356\u51FA\u4E864\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A3
B\u5356\u51FA\u4E863\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A2
B\u5356\u51FA\u4E862\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A1
B\u5356\u51FA\u4E861\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A0
A\u5356\u51FA\u4E869\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A8
C\u5356\u51FA\u4E8615\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A14
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u591A\u4E2A\u7EBF\u7A0B\u4E89\u62A2\u8D44\u6E90\uFF0C\u5BFC\u81F4\u5171\u4EAB\u7684\u8D44\u6E90\u51FA\u73B0\u9519\u8BEF</p><ol start="3"><li>\u7528\u4F20\u7EDF\u7684\u65B9\u5F0F\u53BB\u89E3\u51B3\u5E76\u53D1\u51FA\u73B0\u7684\u95EE\u9898</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u8D44\u6E90\u7C7B OOP</span>
<span class="token keyword">class</span> <span class="token class-name">Ticket</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5C5E\u6027\u3001\u65B9\u6CD5</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> number <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">;</span>

    <span class="token comment">// \u4E70\u7968\u7684\u65B9\u5F0F</span>
    <span class="token comment">// synchronized \u672C\u8D28\u5C31\u662F\u6392\u961F\uFF0C\u961F\u5217\uFF0C\u9501\uFF0C\u4ECE\u65E0\u5E8F\u53D8\u6210\u6709\u5E8F\uFF0C\u5355\u5165</span>
    <span class="token comment">// synchronized\u4E00\u5171\u53EF\u4EE5\u9501\u4E24\u4E2A\u4E1C\u897F\uFF1A\u5BF9\u8C61\u548CClass</span>
    <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">sale</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>number <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\u5356\u51FA\u4E86&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>number<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A&quot;</span> <span class="token operator">+</span> number<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>A\u5356\u51FA\u4E8650\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A49
A\u5356\u51FA\u4E8649\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A48
A\u5356\u51FA\u4E8648\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A47
A\u5356\u51FA\u4E8647\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A46
A\u5356\u51FA\u4E8646\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A45
B\u5356\u51FA\u4E8645\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A44
B\u5356\u51FA\u4E8644\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A43
B\u5356\u51FA\u4E8643\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A42
B\u5356\u51FA\u4E8642\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A41
B\u5356\u51FA\u4E8641\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A40
B\u5356\u51FA\u4E8640\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A39
B\u5356\u51FA\u4E8639\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A38
B\u5356\u51FA\u4E8638\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A37
B\u5356\u51FA\u4E8637\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A36
B\u5356\u51FA\u4E8636\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A35
B\u5356\u51FA\u4E8635\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A34
B\u5356\u51FA\u4E8634\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A33
B\u5356\u51FA\u4E8633\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A32
B\u5356\u51FA\u4E8632\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A31
B\u5356\u51FA\u4E8631\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A30
B\u5356\u51FA\u4E8630\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A29
B\u5356\u51FA\u4E8629\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A28
B\u5356\u51FA\u4E8628\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A27
B\u5356\u51FA\u4E8627\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A26
B\u5356\u51FA\u4E8626\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A25
B\u5356\u51FA\u4E8625\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A24
B\u5356\u51FA\u4E8624\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A23
B\u5356\u51FA\u4E8623\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A22
B\u5356\u51FA\u4E8622\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A21
B\u5356\u51FA\u4E8621\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A20
B\u5356\u51FA\u4E8620\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A19
B\u5356\u51FA\u4E8619\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A18
B\u5356\u51FA\u4E8618\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A17
B\u5356\u51FA\u4E8617\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A16
B\u5356\u51FA\u4E8616\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A15
B\u5356\u51FA\u4E8615\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A14
B\u5356\u51FA\u4E8614\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A13
B\u5356\u51FA\u4E8613\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A12
B\u5356\u51FA\u4E8612\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A11
B\u5356\u51FA\u4E8611\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A10
B\u5356\u51FA\u4E8610\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A9
B\u5356\u51FA\u4E869\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A8
B\u5356\u51FA\u4E868\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A7
A\u5356\u51FA\u4E867\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A6
A\u5356\u51FA\u4E866\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A5
A\u5356\u51FA\u4E865\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A4
A\u5356\u51FA\u4E864\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A3
A\u5356\u51FA\u4E863\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A2
A\u5356\u51FA\u4E862\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A1
A\u5356\u51FA\u4E861\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>synchronized \u672C\u8D28\u5C31\u662F\u6392\u961F\uFF0C\u961F\u5217\uFF0C\u9501\uFF0C\u4ECE\u65E0\u5E8F\u53D8\u6210\u6709\u5E8F\uFF0C\u5355\u5165</li><li>synchronized\u4E00\u5171\u53EF\u4EE5\u9501\u4E24\u4E2A\u4E1C\u897F\uFF1A\u5BF9\u8C61\u548CClass <ul><li>\u65B9\u6CD5\u4E0A\u7684synchronized\u53EA\u80FD\u662F\u9501Class</li><li>\u4EE3\u7801\u5757\u4E2D\u7684synchronized\u53EF\u4EE5\u9501\u5BF9\u8C61\uFF0C\u4E5F\u53EF\u4EE5\u9501Class</li></ul></li></ul><p>synchronized \u9501\u5BF9\u8C61\u548C\u9501Class</p><p>synchronized\u8981\u6309\u7167\u540C\u6B65\u4EE3\u7801\u5757\u6765\u4FDD\u8BC1\u7EBF\u7A0B\u5B89\u5168\uFF0C\u8FD9\u53EF\u5C31\u52A0\u5728\u65B9\u6CD5\u201C\u590D\u6742\u201D\u591A\u4E86\u3002\u6709\uFF1Asynchronized(this){}\u8FD9\u4E48\u5199\u7684\uFF0C\u4E5F\u6709synchronized(Count.class){}\u8FD9\u4E48\u5199\u7684\uFF0C\u8FD8\u6709\u5B9A\u4E49\u4E86\u4E00\u4E2Aprivate Object obj = new Object; \u2026.synchronized(obj){}\u8FD9\u4E48\u5199\u7684</p><p>synchronized\u4F60\u5230\u5E95\u9501\u4F4F\u7684\u662F\u8C01\uFF1F</p><p>synchronized\u4ECE\u8BED\u6CD5\u7684\u7EF4\u5EA6\u4E00\u5171\u67093\u4E2A\u7528\u6CD5\uFF1A</p><ul><li>\u9759\u6001\u65B9\u6CD5\u52A0\u4E0A\u5173\u952E\u5B57 <strong>\u9501\u7684\u662FClass</strong></li><li>\u5B9E\u4F8B\u65B9\u6CD5\uFF08\u4E5F\u5C31\u662F\u666E\u901A\u65B9\u6CD5\uFF09\u52A0\u4E0A\u5173\u952E\u5B57 <strong>\u9501\u7684\u662Fthis\uFF0C\u4E5F\u5C31\u662F\u5BF9\u8C61</strong></li><li>\u65B9\u6CD5\u4E2D\u4F7F\u7528\u540C\u6B65\u4EE3\u7801\u5757 <strong>\u770B\u62EC\u53F7\u4E2D\u7684\u5BF9\u8C61\uFF0C\u6BD4\u5982\uFF1A\u5982\u679C\u662FCount.class\u5C31\u662F\u9501Class\uFF0C\u5982\u679C\u662Fthis\u5C31\u662F\u9501\u5BF9\u8C61\uFF0C\u548Cpublic synchronized void demo(){}\u4E00\u6837</strong></li></ul><h3 id="lock\u6240\u5728\u5305-package-java-util-concurrent-locks"><a class="header-anchor" href="#lock\u6240\u5728\u5305-package-java-util-concurrent-locks" aria-hidden="true">#</a> Lock\u6240\u5728\u5305-Package java.util.concurrent.locks</h3><p><img src="`+e+`" alt=""></p><ul><li>Condition</li><li>Lock \u9501</li><li>ReadWriteLock \u8BFB\u5199\u9501</li></ul><h3 id="lock\u4F7F\u7528"><a class="header-anchor" href="#lock\u4F7F\u7528" aria-hidden="true">#</a> Lock\u4F7F\u7528</h3><p>Lock \u63A5\u53E3</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// A typical usage idiom for this method would be:</span>
<span class="token class-name">Lock</span> lock <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>lock<span class="token punctuation">.</span><span class="token function">tryLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// \u52A0\u9501</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
 <span class="token comment">// manipulate protected state</span>
<span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
 lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u89E3\u9501</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
<span class="token comment">// perform alternative actions</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E09\u4E2A\u5B9E\u73B0\u7C7B\uFF1A</p><blockquote><p>All Known Implementing Classes: ReentrantLock, ReentrantReadWriteLock.ReadLock, ReentrantReadWriteLock.WriteLock</p></blockquote><ul><li>ReentrantLock\uFF1A\u5E38\u7528\u7684\uFF0C\u666E\u901A\u7684\uFF0C\u53EF\u91CD\u5165\u9501</li><li>ReentrantReadWriteLock.ReadLock \u5199\u9501</li><li>ReentrantReadWriteLock.WriteLock \u8BFB\u9501</li></ul><h4 id="\u516C\u5E73\u9501\u4E0E\u975E\u516C\u5E73\u9501"><a class="header-anchor" href="#\u516C\u5E73\u9501\u4E0E\u975E\u516C\u5E73\u9501" aria-hidden="true">#</a> \u516C\u5E73\u9501\u4E0E\u975E\u516C\u5E73\u9501</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Creates an instance of <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token class-name">ReentrantLock</span></span></span><span class="token punctuation">}</span>.
 * This is equivalent to using <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span></span></span><span class="token punctuation">}</span>.
 */</span>
<span class="token keyword">public</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sync <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NonfairSync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u975E\u516C\u5E73\u9501</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * Creates an instance of <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token class-name">ReentrantLock</span></span></span><span class="token punctuation">}</span> with the
 * given fairness policy.
 *
 * <span class="token keyword">@param</span> <span class="token parameter">fair</span> <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token boolean">true</span></span></span><span class="token punctuation">}</span> if this lock should use a fair ordering policy
 */</span>
<span class="token keyword">public</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> fair<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// \u5982\u679C\u4F20\u5165\u7684\u662Ftrue\u7684\u8BDD\uFF0C\u5C31\u662F\u516C\u5E73\u9501\uFF08FairSync\uFF09</span>
    sync <span class="token operator">=</span> fair <span class="token operator">?</span> <span class="token keyword">new</span> <span class="token class-name">FairSync</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">NonfairSync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u516C\u5E73\u9501\uFF1A\u5341\u5206\u516C\u5E73\uFF0C\u9700\u8981\u5148\u6765\u540E\u5230</li><li>\u975E\u516C\u5E73\u9501\uFF1A\u5341\u5206\u4E0D\u516C\u5E73\uFF0C\u53EF\u4EE5\u63D2\u961F\uFF08\u9ED8\u8BA4\uFF09</li></ul><p>\u4E3A\u4EC0\u4E48\u975E\u516C\u5E73\u9501\u662F\u9ED8\u8BA4\u7684\uFF1F</p><ul><li>\u4E24\u4E2A\u8FDB\u7A0B\uFF1A\u4E00\u4E2A3h\u6267\u884C\u5B8C\uFF0C\u4E00\u4E2A3s\u6267\u884C\u5B8C\uFF0C3s\u6392\u53F7\u7684\u65F6\u5019\u57283h\u7684\u540E\u9762\uFF0C3s\u7684\u4E3A\u4E86\u62FF\u5230CPU\u76843s\u9700\u8981\u7B49\u5F853h\uFF0C\u8FD9\u6709\u5FC5\u8981\u5417\uFF1F</li><li>Lock \u548C Synchronzied\u90FD\u662F\u975E\u516C\u5E73\u9501</li></ul><h4 id="\u4E70\u7968lock\u5B9E\u73B0"><a class="header-anchor" href="#\u4E70\u7968lock\u5B9E\u73B0" aria-hidden="true">#</a> \u4E70\u7968Lock\u5B9E\u73B0</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u57FA\u672C\u7684\u4E70\u7968\u7684\u4F8B\u5B50
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
 * \u771F\u6B63\u7684\u591A\u7EBF\u7A0B\u5F00\u53D1\uFF0C\u516C\u53F8\u4E2D\u7684\u5F00\u53D1\uFF0C\u964D\u4F4E\u8026\u5408\u6027\uFF0C\u5982\u679C\u662F\u53BB\u5B9E\u73B0Runnable\uFF0C\u589E\u52A0\u4E86\u8026\u5408\u6027
 * \u7EBF\u7A0B\u5C31\u662F\u4E00\u4E2A\u5355\u72EC\u7684\u8D44\u6E90\u7C7B\uFF0C\u6CA1\u6709\u4EFB\u4F55\u9644\u5C5E\u64CD\u4F5C
 * 1\u3001\u5C5E\u6027\u3001\u65B9\u6CD5
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SaleTicketDemo02</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u591A\u7EBF\u7A0B\u64CD\u4F5C</span>
        <span class="token comment">// \u5E76\u53D1\uFF1A\u591A\u7EBF\u7A0B\u64CD\u4F5C\u540C\u4E00\u4E2A\u8D44\u6E90\u7C7B</span>
        <span class="token class-name">Ticket2</span> ticket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Ticket2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// @FunctionalInterface \u51FD\u6570\u5F0F\u63A5\u53E3\uFF0C\u53EF\u4EE5\u76F4\u63A5new \u51FA\u6765\uFF0Cjdk8\u4E4B\u540E\uFF0C\u53EF\u4EE5\u4F7F\u7528lambda\u8868\u8FBE\u5F0F\uFF1A(\u53C2\u6570)-&gt;{\u4EE3\u7801}</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span> <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">60</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> ticket<span class="token punctuation">.</span><span class="token function">sale</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span> <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">60</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> ticket<span class="token punctuation">.</span><span class="token function">sale</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span> <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">60</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> ticket<span class="token punctuation">.</span><span class="token function">sale</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;C&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u8D44\u6E90\u7C7B OOP</span>

<span class="token doc-comment comment">/**
 * Lock\u4F7F\u7528\u4E09\u90E8\u66F2\uFF1A
 * new ReentrantLock();
 * lock.tryLock()
 * lock.unlock();
 */</span>
<span class="token keyword">class</span> <span class="token class-name">Ticket2</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5C5E\u6027\u3001\u65B9\u6CD5</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> number <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">;</span>

    <span class="token class-name">Lock</span> lock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u4E70\u7968\u7684\u65B9\u5F0F</span>
    <span class="token comment">// Lock \u65B9\u5F0F</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sale</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>lock<span class="token punctuation">.</span><span class="token function">tryLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// \u52A0\u9501</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>number <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\u5356\u51FA\u4E86&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>number<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A&quot;</span> <span class="token operator">+</span> number<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u89E3\u9501</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// perform alternative actions</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>A\u5356\u51FA\u4E8650\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A49
A\u5356\u51FA\u4E8649\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A48
A\u5356\u51FA\u4E8648\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A47
A\u5356\u51FA\u4E8647\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A46
A\u5356\u51FA\u4E8646\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A45
A\u5356\u51FA\u4E8645\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A44
A\u5356\u51FA\u4E8644\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A43
A\u5356\u51FA\u4E8643\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A42
A\u5356\u51FA\u4E8642\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A41
A\u5356\u51FA\u4E8641\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A40
A\u5356\u51FA\u4E8640\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A39
A\u5356\u51FA\u4E8639\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A38
A\u5356\u51FA\u4E8638\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A37
A\u5356\u51FA\u4E8637\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A36
A\u5356\u51FA\u4E8636\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A35
A\u5356\u51FA\u4E8635\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A34
A\u5356\u51FA\u4E8634\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A33
A\u5356\u51FA\u4E8633\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A32
A\u5356\u51FA\u4E8632\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A31
A\u5356\u51FA\u4E8631\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A30
A\u5356\u51FA\u4E8630\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A29
C\u5356\u51FA\u4E8629\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A28
C\u5356\u51FA\u4E8628\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A27
C\u5356\u51FA\u4E8627\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A26
C\u5356\u51FA\u4E8626\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A25
C\u5356\u51FA\u4E8625\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A24
C\u5356\u51FA\u4E8624\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A23
C\u5356\u51FA\u4E8623\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A22
C\u5356\u51FA\u4E8622\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A21
C\u5356\u51FA\u4E8621\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A20
C\u5356\u51FA\u4E8620\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A19
C\u5356\u51FA\u4E8619\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A18
C\u5356\u51FA\u4E8618\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A17
C\u5356\u51FA\u4E8617\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A16
C\u5356\u51FA\u4E8616\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A15
C\u5356\u51FA\u4E8615\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A14
C\u5356\u51FA\u4E8614\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A13
C\u5356\u51FA\u4E8613\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A12
C\u5356\u51FA\u4E8612\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A11
C\u5356\u51FA\u4E8611\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A10
C\u5356\u51FA\u4E8610\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A9
C\u5356\u51FA\u4E869\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A8
C\u5356\u51FA\u4E868\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A7
C\u5356\u51FA\u4E867\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A6
C\u5356\u51FA\u4E866\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A5
C\u5356\u51FA\u4E865\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A4
C\u5356\u51FA\u4E864\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A3
C\u5356\u51FA\u4E863\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A2
C\u5356\u51FA\u4E862\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A1
C\u5356\u51FA\u4E861\u5F20\u7968\uFF0C\u5269\u4F59\uFF1A0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="synchronized-\u4E0E-lock-\u7684\u533A\u522B"><a class="header-anchor" href="#synchronized-\u4E0E-lock-\u7684\u533A\u522B" aria-hidden="true">#</a> synchronized \u4E0E Lock \u7684\u533A\u522B</h3><ol><li>synchronized \u5185\u7F6E\u7684Java\u5173\u952E\u5B57\uFF0CLock\u662F\u4E00\u4E2AJava\u7C7B</li><li>synchronized \u65E0\u6CD5\u5224\u65AD\u83B7\u53D6\u9501\u72B6\u6001\uFF0CLock\u53EF\u4EE5\u5224\u65AD\u662F\u5426\u83B7\u53D6\u5230\u4E86\u9501</li><li>synchronized \u4F1A\u81EA\u52A8\u91CA\u653E\u9501\uFF0CLock\u5FC5\u987B\u8981\u624B\u52A8\u91CA\u653E\u9501\uFF0C\u5982\u679C\u4E0D\u91CA\u653E\u9501\uFF0C\u5C31\u4F1A\u51FA\u73B0<strong>\u6B7B\u9501</strong>\uFF0C\u624B\u52A8\u7684\u96BE\u5EA6\u9AD8\u4F46\u662F\u66F4\u5B89\u5168\uFF0C\u4F60\u4EEC\u770B\u5F00\u8D5B\u8F66\u7684\u90A3\u4E2A\u5F00\u81EA\u52A8\u6321</li><li>synchronized \u7EBF\u7A0B1 \uFF08\u83B7\u5F97\u9501\uFF0C\u963B\u585E\uFF09\u3001\u7EBF\u7A0B2\uFF08\u50BB\u50BB\u7684\u7B49\u5F85\uFF09\uFF1BLock\u9501\u5C31\u4E0D\u4E00\u5B9A\u4F1A\u50BB\u50BB\u7684\u7B49\u5F85<code>lock.tryLock()</code>\uFF0C\u4E0D\u8BA9\u6211\u62FF\u5230\uFF0C\u6211\u624D\u61D2\u5F97\u7B49\u5F85\u5462</li><li>synchronized \u53EF\u91CD\u5165\u9501\uFF0C\u4E0D\u53EF\u4EE5\u4E2D\u65AD\u7684\uFF0C\u975E\u516C\u5E73\u7684\uFF1BLock \u53EF\u91CD\u5165\u9501\uFF0C\u53EF\u4EE5\u5224\u65AD\u9501\uFF0C\u53EF\u4EE5\u81EA\u5DF1\u8BBE\u7F6E\u516C\u5E73\u4E0D\u516C\u5E73</li><li>synchronized \u9002\u5408\u9501\u5C11\u91CF\u7684\u4EE3\u7801\u540C\u6B65\u95EE\u9898\uFF0CLock\u9002\u5408\u9501\u5927\u91CF\u7684\u540C\u6B65\u4EE3\u7801</li></ol><h4 id="\u9501\u662F\u4EC0\u4E48-\u5982\u4F55\u5224\u65AD\u9501\u7684\u662F\u8C01"><a class="header-anchor" href="#\u9501\u662F\u4EC0\u4E48-\u5982\u4F55\u5224\u65AD\u9501\u7684\u662F\u8C01" aria-hidden="true">#</a> \u9501\u662F\u4EC0\u4E48\uFF1F\u5982\u4F55\u5224\u65AD\u9501\u7684\u662F\u8C01\uFF1F</h4><h2 id="\u751F\u4EA7\u8005\u548C\u6D88\u8D39\u8005"><a class="header-anchor" href="#\u751F\u4EA7\u8005\u548C\u6D88\u8D39\u8005" aria-hidden="true">#</a> \u751F\u4EA7\u8005\u548C\u6D88\u8D39\u8005</h2><p>\u5927\u6709\u95E8\u9053</p><p>\u9762\u8BD5\u7684\u65F6\u5019\uFF0C\u5E38\u89C1\u7684\u624B\u5199\u4EE3\u7801\uFF1A\u5355\u4F8B\u6A21\u5F0F\u3001\u6392\u5E8F\u7B97\u6CD5\u3001\u751F\u4EA7\u8005\u548C\u6D88\u8D39\u8005\u95EE\u9898\u3001\u6B7B\u9501\u95EE\u9898</p><h3 id="\u8001\u7248\u7684-\u53EF\u4EE5\u4F7F\u7528synchronize-wait-notify\u5B9E\u73B0"><a class="header-anchor" href="#\u8001\u7248\u7684-\u53EF\u4EE5\u4F7F\u7528synchronize-wait-notify\u5B9E\u73B0" aria-hidden="true">#</a> \u8001\u7248\u7684\uFF1A\u53EF\u4EE5\u4F7F\u7528synchronize wait notify\u5B9E\u73B0</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u7EBF\u7A0B\u4E4B\u95F4\u7684\u901A\u4FE1\u95EE\u9898\uFF1A\u751F\u4EA7\u8005\u548C\u6D88\u8D39\u8005\u95EE\u9898\uFF0C \u7B49\u5F85\u5524\u9192\uFF0C\u901A\u77E5\u5524\u9192
 * \u7EBF\u7A0B\u4EA4\u66FF\u6267\u884C A B \u64CD\u4F5C\u540C\u4E00\u4E2A\u53D8\u91CF num = 0
 * A num + 1 \u7B49
 * B num - 1
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">A</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">Data</span> data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    data<span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    data<span class="token punctuation">.</span><span class="token function">decrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * \u6570\u5B57\uFF0C\u8D44\u6E90\u7C7B
 * \u8D44\u6E90\u7C7B\uFF0C\u5E94\u8BE5\u53BB\u89E3\u8026\u5408
 * \u53EA\u8981\u662F\u591A\u7EBF\u7A0B\uFF0C\u53EA\u8981\u662F\u5E76\u53D1\u7F16\u7A0B\u4E0D\u52A0\u9501\u5C31\u662F\u4E0D\u5B89\u5168
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
 * \u53E3\u8BC0\uFF1A\u5224\u65AD\u7B49\u5F85\uFF0C\u4E1A\u52A1\uFF0C\u901A\u77E5
 */</span>
<span class="token keyword">class</span> <span class="token class-name">Data</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> number <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token comment">// +1</span>
    <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>number <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u7B49\u5F85\u64CD\u4F5C</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        number<span class="token operator">++</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;=&gt;&quot;</span> <span class="token operator">+</span> number<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u901A\u77E5\u5176\u4ED6\u7EBF\u7A0B\uFF0C\u6211+1\u5B8C\u6BD5\u4E86</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">notifyAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// -1</span>
    <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">decrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>number <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u7B49\u5F85\u64CD\u4F5C</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        number<span class="token operator">--</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;=&gt;&quot;</span> <span class="token operator">+</span> number<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u901A\u77E5\u5176\u4ED6\u7EBF\u7A0B\uFF0C\u6211-1\u5B8C\u6BD5\u4E86</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">notifyAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u95EE\u9898\u6240\u5728"><a class="header-anchor" href="#\u95EE\u9898\u6240\u5728" aria-hidden="true">#</a> \u95EE\u9898\u6240\u5728</h4><p>\u5982\u679C\u6709\u56DB\u4E2A\u7EBF\u7A0B\uFF1AA B C D\u56DB\u4E2A\u7EBF\u7A0B\uFF0C\u4E24\u4E2A\u52A0\uFF0C\u4E24\u4E2A\u51CF\u7684\u8BDD\uFF0C\u4ED6\u8FD8\u5B89\u5168\u5417\uFF1F</p><p>\u4E0D\u5B89\u5168\uFF0C\u56E0\u4E3A\u662F\u5355\u4E2Aif\u5224\u65AD\uFF08\u53EA\u4F1A\u5224\u65AD\u4E00\u6B21\uFF09\uFF0C\u5982\u679C\u51FA\u73B0</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u7EBF\u7A0B\u4E4B\u95F4\u7684\u901A\u4FE1\u95EE\u9898\uFF1A\u751F\u4EA7\u8005\u548C\u6D88\u8D39\u8005\u95EE\u9898\uFF0C \u7B49\u5F85\u5524\u9192\uFF0C\u901A\u77E5\u5524\u9192
 * \u7EBF\u7A0B\u4EA4\u66FF\u6267\u884C A B \u64CD\u4F5C\u540C\u4E00\u4E2A\u53D8\u91CF num = 0
 * A num + 1 \u7B49
 * B num - 1
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">A</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">Data</span> data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    data<span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    data<span class="token punctuation">.</span><span class="token function">decrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    data<span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;C&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    data<span class="token punctuation">.</span><span class="token function">decrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;D&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * \u6570\u5B57\uFF0C\u8D44\u6E90\u7C7B
 * \u8D44\u6E90\u7C7B\uFF0C\u5E94\u8BE5\u53BB\u89E3\u8026\u5408
 * \u53EA\u8981\u662F\u591A\u7EBF\u7A0B\uFF0C\u53EA\u8981\u662F\u5E76\u53D1\u7F16\u7A0B\u4E0D\u52A0\u9501\u5C31\u662F\u4E0D\u5B89\u5168
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
 * \u53E3\u8BC0\uFF1A\u5224\u65AD\u7B49\u5F85\uFF0C\u4E1A\u52A1\uFF0C\u901A\u77E5
 */</span>
<span class="token keyword">class</span> <span class="token class-name">Data</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> number <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token comment">// +1</span>
    <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>number <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u7B49\u5F85\u64CD\u4F5C</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        number<span class="token operator">++</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;=&gt;&quot;</span> <span class="token operator">+</span> number<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u901A\u77E5\u5176\u4ED6\u7EBF\u7A0B\uFF0C\u6211+1\u5B8C\u6BD5\u4E86</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">notifyAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// -1</span>
    <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">decrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>number <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u7B49\u5F85\u64CD\u4F5C</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        number<span class="token operator">--</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;=&gt;&quot;</span> <span class="token operator">+</span> number<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u901A\u77E5\u5176\u4ED6\u7EBF\u7A0B\uFF0C\u6211-1\u5B8C\u6BD5\u4E86</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">notifyAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\u5E76\u4E0D\u662F\u6211\u4EEC\u6240\u9700\u8981\u7684\uFF1A\u51FA\u73B02 \u548C 3 \u5C31\u662F\u9519\u8BEF\u7684</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">C</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">C</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">C</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">D</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">C</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">C</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">2</span>
<span class="token assign-left variable">D</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">D</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">C</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">2</span>
<span class="token assign-left variable">C</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">3</span>
<span class="token assign-left variable">D</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">2</span>
<span class="token assign-left variable">D</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">D</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">C</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">2</span>
<span class="token assign-left variable">C</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">3</span>
<span class="token assign-left variable">D</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">2</span>
<span class="token assign-left variable">D</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">D</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">C</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">D</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>

Process finished with <span class="token builtin class-name">exit</span> code <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>As in the one argument version, interrupts and spurious wakeups are possible, and this method should always be used in a loop: \u7FFB\u8BD1 \u4E0E\u5355\u53C2\u6570\u7248\u672C\u4E00\u6837\uFF0C\u4E2D\u65AD\u548C<strong>\u865A\u5047\u5524\u9192</strong>\u662F\u53EF\u80FD\u7684\uFF0C\u5E76\u4E14\u5E94\u59CB\u7EC8\u5728\u5FAA\u73AF\u4E2D\u4F7F\u7528\u6B64\u65B9\u6CD5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">synchronized</span> <span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token generics"><span class="token punctuation">&lt;</span>condition does not hold<span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>
     obj<span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token comment">// Perform action appropriate to condition</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><p><img src="`+c+'" alt=""></p><p>\u4E5F\u5C31\u662F\u8BF4\uFF0C\u5728+1\u4E4B\u540E\u5524\u9192\u7684\u4E24\u4E2A-1\u7684\u64CD\u4F5C\uFF0C\u5176\u4E2D\u4E00\u4E2A\u83B7\u5F97\u5230-1\u7684\u6743\u9650\u4E4B\u540E-1\uFF0C\u7136\u540E\u4E0D\u7B49\u4E8E1\u4E86\uFF0Cif\u4E0D\u7B26\u5224\u65AD\uFF0C\u5C31\u53BB\u4F11\u7720\u4E86\uFF0C\u653E\u51FA\u4E86CPU\u7684\u64CD\u4F5C\u6743\uFF0C\u6B64\u65F6\u53E6\u4E00\u4E2A-1\u7684\u64CD\u4F5C\u83B7\u5F97\u4E86CPU\u7684\u64CD\u4F5C\u6743\uFF0C\u5E76\u8FDB\u884C-1\u64CD\u4F5C</p><p><strong>\u865A\u5047\u5524\u9192</strong></p><ol><li>\u4E24\u4E2A+1\u64CD\u4F5C\u865A\u5047\u5524\u9192\uFF08\u4E24\u4E2A-1\u64CD\u4F5C\u540C\u7406\uFF09</li></ol><p><img src="'+o+'" alt=""></p><ol start="2"><li>+1 \u548C -1 \u64CD\u4F5C\u865A\u5047\u5524\u9192</li></ol><p><img src="'+l+`" alt=""></p><p>\u90A3\u4E48\uFF0C\u6B64\u65F6\u6539\u7528<code>while</code>\u7684\u8BDD\uFF0C\u5C31\u53EF\u4EE5\u4FDD\u8BC1\u5728\u88AB\u5524\u9192\u4E4B\u540E\u63A5\u7740\u5224\u65AD\u5F53\u524D\u7684<code>number</code>\u662F\u5426\u7B26\u5408\u6211\u4EEC\u7684\u6761\u4EF6</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u6570\u5B57\uFF0C\u8D44\u6E90\u7C7B
 * \u8D44\u6E90\u7C7B\uFF0C\u5E94\u8BE5\u53BB\u89E3\u8026\u5408
 * \u53EA\u8981\u662F\u591A\u7EBF\u7A0B\uFF0C\u53EA\u8981\u662F\u5E76\u53D1\u7F16\u7A0B\u4E0D\u52A0\u9501\u5C31\u662F\u4E0D\u5B89\u5168
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
 * \u53E3\u8BC0\uFF1A\u5224\u65AD\u7B49\u5F85\uFF0C\u4E1A\u52A1\uFF0C\u901A\u77E5
 */</span>
<span class="token keyword">class</span> <span class="token class-name">Data</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> number <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token comment">// +1</span>
    <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>number <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u7B49\u5F85\u64CD\u4F5C</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        number<span class="token operator">++</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;=&gt;&quot;</span> <span class="token operator">+</span> number<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u901A\u77E5\u5176\u4ED6\u7EBF\u7A0B\uFF0C\u6211+1\u5B8C\u6BD5\u4E86</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">notifyAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// -1</span>
    <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">decrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>number <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u7B49\u5F85\u64CD\u4F5C</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        number<span class="token operator">--</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;=&gt;&quot;</span> <span class="token operator">+</span> number<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u901A\u77E5\u5176\u4ED6\u7EBF\u7A0B\uFF0C\u6211-1\u5B8C\u6BD5\u4E86</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">notifyAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">C</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">C</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">D</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">C</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">D</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">C</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">D</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">C</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">D</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">D</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">C</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">D</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">C</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">D</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">C</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">D</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">C</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">D</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token assign-left variable">C</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">D</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="juc\u7248\u7684-lock"><a class="header-anchor" href="#juc\u7248\u7684-lock" aria-hidden="true">#</a> juc\u7248\u7684\uFF1ALock</h3><p>\u901A\u8FC7Lock\u627E\u5230Condition</p><p><img src="`+i+`" alt=""></p><h4 id="condition"><a class="header-anchor" href="#condition" aria-hidden="true">#</a> Condition</h4><blockquote><p>Condition factors out the Object monitor methods (wait, notify and notifyAll) into distinct objects to give the effect of having multiple wait-sets per object, by combining them with the use of arbitrary Lock implementations. Where a Lock replaces the use of synchronized methods and statements, a Condition replaces the use of the Object monitor methods. Condition\u5C06\u5BF9\u8C61\u76D1\u89C6\u5668\u65B9\u6CD5\uFF08wait\u3001notify \u548C notifyAll\uFF09\u5206\u89E3\u4E3A\u4E0D\u540C\u7684\u5BF9\u8C61\uFF0C\u901A\u8FC7\u5C06\u5B83\u4EEC\u4E0E\u4EFB\u610F Lock \u5B9E\u73B0\u7684\u4F7F\u7528\u76F8\u7ED3\u5408\uFF0C\u4ECE\u800C\u4EA7\u751F\u6BCF\u4E2A\u5BF9\u8C61\u5177\u6709\u591A\u4E2A\u7B49\u5F85\u96C6\u7684\u6548\u679C\u3002 Lock \u4EE3\u66FF\u4E86\u540C\u6B65\u65B9\u6CD5\u548C\u8BED\u53E5\u7684\u4F7F\u7528\uFF0C\u800C Condition \u4EE3\u66FF\u4E86\u5BF9\u8C61\u76D1\u89C6\u5668\u65B9\u6CD5\u7684\u4F7F\u7528\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">BoundedBuffer</span> <span class="token punctuation">{</span>
  <span class="token keyword">final</span> <span class="token class-name">Lock</span> lock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">final</span> <span class="token class-name">Condition</span> notFull  <span class="token operator">=</span> lock<span class="token punctuation">.</span><span class="token function">newCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u76D1\u89C6\u5668\u5BF9\u8C61</span>
  <span class="token keyword">final</span> <span class="token class-name">Condition</span> notEmpty <span class="token operator">=</span> lock<span class="token punctuation">.</span><span class="token function">newCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 

   <span class="token keyword">final</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> items <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
   <span class="token keyword">int</span> putptr<span class="token punctuation">,</span> takeptr<span class="token punctuation">,</span> count<span class="token punctuation">;</span>

   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">Object</span> x<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
     lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token keyword">try</span> <span class="token punctuation">{</span>
       <span class="token keyword">while</span> <span class="token punctuation">(</span>count <span class="token operator">==</span> items<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
         notFull<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7B49\u5F85</span>
       items<span class="token punctuation">[</span>putptr<span class="token punctuation">]</span> <span class="token operator">=</span> x<span class="token punctuation">;</span>
       <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>putptr <span class="token operator">==</span> items<span class="token punctuation">.</span>length<span class="token punctuation">)</span> putptr <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
       <span class="token operator">++</span>count<span class="token punctuation">;</span>
       notEmpty<span class="token punctuation">.</span><span class="token function">signal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u901A\u77E5</span>
     <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
       lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>

   <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">take</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
     lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token keyword">try</span> <span class="token punctuation">{</span>
       <span class="token keyword">while</span> <span class="token punctuation">(</span>count <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
         notEmpty<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token class-name">Object</span> x <span class="token operator">=</span> items<span class="token punctuation">[</span>takeptr<span class="token punctuation">]</span><span class="token punctuation">;</span>
       <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>takeptr <span class="token operator">==</span> items<span class="token punctuation">.</span>length<span class="token punctuation">)</span> takeptr <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
       <span class="token operator">--</span>count<span class="token punctuation">;</span>
       notFull<span class="token punctuation">.</span><span class="token function">signal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">return</span> x<span class="token punctuation">;</span>
     <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
       lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><h4 id="\u4EE3\u7801\u5B9E\u73B0juc\u7248\u751F\u4EA7\u8005\u548C\u6D88\u8D39\u8005"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0juc\u7248\u751F\u4EA7\u8005\u548C\u6D88\u8D39\u8005" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0JUC\u7248\u751F\u4EA7\u8005\u548C\u6D88\u8D39\u8005</h4><p><img src="`+u+`" alt=""></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u7EBF\u7A0B\u4E4B\u95F4\u7684\u901A\u4FE1\u95EE\u9898\uFF1A\u751F\u4EA7\u8005\u548C\u6D88\u8D39\u8005\u95EE\u9898\uFF0C \u7B49\u5F85\u5524\u9192\uFF0C\u901A\u77E5\u5524\u9192
 * \u7EBF\u7A0B\u4EA4\u66FF\u6267\u884C A B \u64CD\u4F5C\u540C\u4E00\u4E2A\u53D8\u91CF num = 0
 * A num + 1 \u7B49
 * B num - 1
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">B</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">Data2</span> data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Data2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    data<span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    data<span class="token punctuation">.</span><span class="token function">decrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    data<span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;C&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    data<span class="token punctuation">.</span><span class="token function">decrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;D&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * \u6570\u5B57\uFF0C\u8D44\u6E90\u7C7B
 * \u8D44\u6E90\u7C7B\uFF0C\u5E94\u8BE5\u53BB\u89E3\u8026\u5408
 * \u53EA\u8981\u662F\u591A\u7EBF\u7A0B\uFF0C\u53EA\u8981\u662F\u5E76\u53D1\u7F16\u7A0B\u4E0D\u52A0\u9501\u5C31\u662F\u4E0D\u5B89\u5168
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
 * \u53E3\u8BC0\uFF1A\u5224\u65AD\u7B49\u5F85\uFF0C\u4E1A\u52A1\uFF0C\u901A\u77E5
 */</span>
<span class="token keyword">class</span> <span class="token class-name">Data2</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> number <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token class-name">Lock</span> lock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Condition</span> condition <span class="token operator">=</span> lock<span class="token punctuation">.</span><span class="token function">newCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// +1</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>number <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//\u7B49\u5F85\u64CD\u4F5C</span>
                condition<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            number<span class="token operator">++</span><span class="token punctuation">;</span>

            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;=&gt;&quot;</span> <span class="token operator">+</span> number<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">//\u901A\u77E5\u5176\u4ED6\u7EBF\u7A0B\uFF0C\u6211+1\u5B8C\u6BD5\u4E86</span>
            condition<span class="token punctuation">.</span><span class="token function">signalAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> exception<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            exception<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// -1</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">decrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>number <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//\u7B49\u5F85\u64CD\u4F5C</span>
                condition<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            number<span class="token operator">--</span><span class="token punctuation">;</span>

            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;=&gt;&quot;</span> <span class="token operator">+</span> number<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">//\u901A\u77E5\u5176\u4ED6\u7EBF\u7A0B\uFF0C\u6211-1\u5B8C\u6BD5\u4E86</span>
            condition<span class="token punctuation">.</span><span class="token function">signalAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> exception<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            exception<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u4EFB\u4F55\u4E00\u4E2A\u65B0\u7684\u6280\u672F\uFF0C\u7EDD\u5BF9\u4E0D\u662F\u4EC5\u4EC5\u8986\u76D6\u4E86\u539F\u6765\u7684\u6280\u672F\uFF0C\u4E00\u5B9A\u662F\u4F1A\u6709\u4F18\u52BF\u548C\u8865\u5145</p></blockquote><p>\u95EE\u9898\uFF1A\u73B0\u5728\u7684\u7EBF\u7A0B\u662F\u968F\u673A\u7684\u72B6\u6001\uFF0C\u5982\u4F55\u80FD\u8BA9\u5B83\u6309\u7167\u6211\u4EEC\u60F3\u8981\u7684\u987A\u5E8F\u6267\u884C\u5462\uFF1F</p><p><strong>Condition \u7CBE\u51C6\u7684\u901A\u77E5\u548C\u5524\u9192\u7EBF\u7A0B</strong></p><p>\u8BA9\u4E09\u4E2A\u7EBF\u7A0B\u987A\u5E8F\u6267\u884C\uFF1AA\u6267\u884C\u5B8C\u901A\u77E5B\u6267\u884C B\u6267\u884C\u5B8C\u901A\u77E5C\u6267\u884C\uFF0CC\u6267\u884C\u5B8C\u901A\u77E5A\u6267\u884C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u8BA9\u4E09\u4E2A\u7EBF\u7A0B\u987A\u5E8F\u6267\u884C
 * A\u6267\u884C\u5B8C\u901A\u77E5B\u6267\u884C  B\u6267\u884C\u5B8C\u901A\u77E5C\u6267\u884C\uFF0CC\u6267\u884C\u5B8C\u901A\u77E5A\u6267\u884C
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">C</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Data3</span> data3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Data3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                data3<span class="token punctuation">.</span><span class="token function">printA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                data3<span class="token punctuation">.</span><span class="token function">printB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                data3<span class="token punctuation">.</span><span class="token function">printC</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;C&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * \u8D44\u6E90\u7C7B
 */</span>
<span class="token keyword">class</span> <span class="token class-name">Data3</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Lock</span> lock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Condition</span> condition1 <span class="token operator">=</span> lock<span class="token punctuation">.</span><span class="token function">newCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Condition</span> condition2 <span class="token operator">=</span> lock<span class="token punctuation">.</span><span class="token function">newCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Condition</span> condition3 <span class="token operator">=</span> lock<span class="token punctuation">.</span><span class="token function">newCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span> number <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">// 1 \u7684\u65F6\u5019 A\u6267\u884C 2 \u7684\u65F6\u5019 B\u6267\u884C 3 \u7684\u65F6\u5019 C\u6267\u884C</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">printA</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u4E1A\u52A1\u4EE3\u7801 \u5224\u65AD-&gt;\u6267\u884C\u4E1A\u52A1-&gt;\u901A\u77E5</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>number <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u7B49\u5F85</span>
                condition1<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;=&gt;AAAAAA&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// \u5524\u9192\uFF0C\u5524\u9192\u6307\u5B9A\u7684\u4EBA B</span>
            number <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
            condition2<span class="token punctuation">.</span><span class="token function">signal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">printB</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u4E1A\u52A1\u4EE3\u7801 \u5224\u65AD-&gt;\u6267\u884C\u4E1A\u52A1-&gt;\u901A\u77E5</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>number <span class="token operator">!=</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                condition2<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;=&gt;BBBBBB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// \u5524\u9192\uFF0C\u5524\u9192\u6307\u5B9A\u7684\u4EBA C</span>
            number <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
            condition3<span class="token punctuation">.</span><span class="token function">signal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">printC</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u4E1A\u52A1\u4EE3\u7801 \u5224\u65AD-&gt;\u6267\u884C\u4E1A\u52A1-&gt;\u901A\u77E5</span>

            <span class="token keyword">while</span> <span class="token punctuation">(</span>number <span class="token operator">!=</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                condition3<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;=&gt;CCCCCC&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// \u5524\u9192\uFF0C\u5524\u9192\u6307\u5B9A\u7684\u4EBA A</span>
            number <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            condition1<span class="token punctuation">.</span><span class="token function">signal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token operator">&gt;</span>AAAAAA
<span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token operator">&gt;</span>BBBBBB
<span class="token assign-left variable">C</span><span class="token operator">=</span><span class="token operator">&gt;</span>CCCCCC
<span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token operator">&gt;</span>AAAAAA
<span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token operator">&gt;</span>BBBBBB
<span class="token assign-left variable">C</span><span class="token operator">=</span><span class="token operator">&gt;</span>CCCCCC
<span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token operator">&gt;</span>AAAAAA
<span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token operator">&gt;</span>BBBBBB
<span class="token assign-left variable">C</span><span class="token operator">=</span><span class="token operator">&gt;</span>CCCCCC
<span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token operator">&gt;</span>AAAAAA
<span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token operator">&gt;</span>BBBBBB
<span class="token assign-left variable">C</span><span class="token operator">=</span><span class="token operator">&gt;</span>CCCCCC
<span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token operator">&gt;</span>AAAAAA
<span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token operator">&gt;</span>BBBBBB
<span class="token assign-left variable">C</span><span class="token operator">=</span><span class="token operator">&gt;</span>CCCCCC
<span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token operator">&gt;</span>AAAAAA
<span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token operator">&gt;</span>BBBBBB
<span class="token assign-left variable">C</span><span class="token operator">=</span><span class="token operator">&gt;</span>CCCCCC
<span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token operator">&gt;</span>AAAAAA
<span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token operator">&gt;</span>BBBBBB
<span class="token assign-left variable">C</span><span class="token operator">=</span><span class="token operator">&gt;</span>CCCCCC
<span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token operator">&gt;</span>AAAAAA
<span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token operator">&gt;</span>BBBBBB
<span class="token assign-left variable">C</span><span class="token operator">=</span><span class="token operator">&gt;</span>CCCCCC
<span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token operator">&gt;</span>AAAAAA
<span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token operator">&gt;</span>BBBBBB
<span class="token assign-left variable">C</span><span class="token operator">=</span><span class="token operator">&gt;</span>CCCCCC
<span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token operator">&gt;</span>AAAAAA
<span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token operator">&gt;</span>BBBBBB
<span class="token assign-left variable">C</span><span class="token operator">=</span><span class="token operator">&gt;</span>CCCCCC
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u516B\u9501\u7684\u73B0\u8C61-\u5173\u4E8E\u9501\u7684\u516B\u4E2A\u95EE\u9898"><a class="header-anchor" href="#\u516B\u9501\u7684\u73B0\u8C61-\u5173\u4E8E\u9501\u7684\u516B\u4E2A\u95EE\u9898" aria-hidden="true">#</a> \u516B\u9501\u7684\u73B0\u8C61\uFF1A\u5173\u4E8E\u9501\u7684\u516B\u4E2A\u95EE\u9898</h2><p>\u5982\u4F55\u5224\u65AD\u9501\u7684\u662F\u8C01\uFF1F\u6C38\u8FDC\u7684\u77E5\u9053\u4EC0\u4E48\u9501\uFF0C\u9501\u5230\u5E95\u9501\u7684\u662F\u8C01</p><p>\u5BF9\u8C61\u3001Class</p><p>\u6DF1\u523B\u7406\u89E3\u6211\u4EEC\u7684\u9501</p><ol><li>\u6807\u51C6\u60C5\u51B5\u4E0B\uFF0C\u4E24\u4E2A\u7EBF\u7A0B\u662F\u5148\u6253\u5370sendSms\u8FD8\u662Fcall\u7684\u5462\uFF1F</li></ol><p>\u5148sendSms\u4E4B\u540E\u5728\u662Fcall</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test1</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">Phone</span> phone <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u9501\u7684\u5B58\u5728</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            phone<span class="token punctuation">.</span><span class="token function">sendSms</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            phone<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Phone</span> <span class="token punctuation">{</span>
    <span class="token comment">// synchronized \u9501\u7684\u5BF9\u8C61\u662F\u65B9\u6CD5\u7684\u8C03\u7528\u8005 this</span>
    <span class="token comment">// \u4E24\u4E2A\u65B9\u6CD5\u7528\u7684\u662F\u540C\u4E00\u4E2A\u9501\uFF0C\u8C01\u5148\u62FF\u5230\u8C01\u5148\u6267\u884C</span>
    <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">sendSms</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;sendSms&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;call&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u5EF6\u8FDF4\u79D2\u4E4B\u540E\uFF0C\u4E24\u4E2A\u7EBF\u7A0B\u662F\u5148\u6253\u5370sendSms\u8FD8\u662Fcall\u7684\u5462\uFF1F</li></ol><p>\u5148 sendSms \u4E4B\u540E\u5728call</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test1</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">Phone</span> phone <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u9501\u7684\u5B58\u5728</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            phone<span class="token punctuation">.</span><span class="token function">sendSms</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//TimeUnit.SECONDS.sleep(1);</span>

        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            phone<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Phone</span> <span class="token punctuation">{</span>
    <span class="token comment">// synchronized \u9501\u7684\u5BF9\u8C61\u662F\u65B9\u6CD5\u7684\u8C03\u7528\u8005 this</span>
    <span class="token comment">// \u4E24\u4E2A\u65B9\u6CD5\u7528\u7684\u662F\u540C\u4E00\u4E2A\u9501\uFF0C\u8C01\u5148\u62FF\u5230\u8C01\u5148\u6267\u884C</span>
    <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">sendSms</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;sendSms&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;call&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>\u589E\u52A0\u4E00\u4E2A\u666E\u901A\u65B9\u6CD5\uFF0C\u4E24\u4E2A\u7EBF\u7A0B\u662F\u5148\u6253\u5370sendSms\u8FD8\u662Fhello\u7684\u5462\uFF1F</li></ol><p>hello sendSms</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test2</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4E24\u4E2A\u5BF9\u8C61</span>
        <span class="token keyword">final</span> <span class="token class-name">Phone2</span> phone1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phone2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u9501\u7684\u5B58\u5728</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            phone1<span class="token punctuation">.</span><span class="token function">sendSms</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            phone2<span class="token punctuation">.</span><span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Phone2</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">sendSms</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;sendSms&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;call&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>\u4E24\u4E2A\u5BF9\u8C61\uFF0C\u4E24\u4E2A\u7EBF\u7A0B\u662F\u5148\u6253\u5370sendSms\u8FD8\u662Fcall\u7684\u5462\uFF1F</li></ol><p>call sendSms</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test2</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4E24\u4E2A\u5BF9\u8C61</span>
        <span class="token keyword">final</span> <span class="token class-name">Phone2</span> phone1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phone2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">Phone2</span> phone2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phone2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u9501\u7684\u5B58\u5728</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            phone1<span class="token punctuation">.</span><span class="token function">sendSms</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            phone2<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Phone2</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">sendSms</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;sendSms&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;call&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>\u589E\u52A0\u4E24\u4E2A\u9759\u6001\u7684\u540C\u6B65\u65B9\u6CD5\uFF0C\u4E24\u4E2A\u7EBF\u7A0B\u662F\u5148\u6253\u5370sendSms\u8FD8\u662Fcall\u7684\u5462\uFF1F</li></ol><p>sendSms call</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test3</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4E24\u4E2A\u5BF9\u8C61</span>
        <span class="token keyword">final</span> <span class="token class-name">Phone3</span> phone1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phone3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u9501\u7684\u5B58\u5728</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            phone1<span class="token punctuation">.</span><span class="token function">sendSms</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            phone1<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Phone3</span> <span class="token punctuation">{</span>
    <span class="token comment">// static \u7C7B\u4E00\u52A0\u8F7D\u5C31\u521D\u59CB\u5316\uFF0C\u6240\u6709\u53EA\u80FD\u6709Class\u9501</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">sendSms</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;sendSms&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;call&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="6"><li>\u4E24\u4E2A\u9759\u6001\u7684\u65B9\u6CD5\uFF0C\u4E00\u4E2A\u540C\u6B65\uFF0C\u4E00\u4E2A\u666E\u901A\u65B9\u6CD5\uFF0C\u4E24\u4E2A\u7EBF\u7A0B\u662F\u5148\u6253\u5370sendSms\u8FD8\u662Fhello\u7684\u5462\uFF1F</li></ol><p>hello sendSms</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test4</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4E24\u4E2A\u5BF9\u8C61</span>
        <span class="token keyword">final</span> <span class="token class-name">Phone4</span> phone1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phone4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u9501\u7684\u5B58\u5728</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            phone1<span class="token punctuation">.</span><span class="token function">sendSms</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            phone1<span class="token punctuation">.</span><span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Phone4</span> <span class="token punctuation">{</span>
    <span class="token comment">// static \u7C7B\u4E00\u52A0\u8F7D\u5C31\u521D\u59CB\u5316\uFF0C\u6240\u6709\u53EA\u80FD\u6709Class\u9501</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">sendSms</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;sendSms&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;call&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="7"><li>\u4E24\u4E2A\u7684\u65B9\u6CD5\uFF0C\u4E00\u4E2A\u9759\u6001\u540C\u6B65\uFF0C\u4E00\u4E2A\u666E\u901A\u540C\u6B65\u65B9\u6CD5\uFF0C\u4E24\u4E2A\u7EBF\u7A0B\u662F\u5148\u6253\u5370sendSms\u8FD8\u662Fcall\u7684\u5462\uFF1F</li></ol><p>call sendSms</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test4</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4E24\u4E2A\u5BF9\u8C61</span>
        <span class="token keyword">final</span> <span class="token class-name">Phone4</span> phone1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phone4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u9501\u7684\u5B58\u5728</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            phone1<span class="token punctuation">.</span><span class="token function">sendSms</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            phone1<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Phone4</span> <span class="token punctuation">{</span>
    <span class="token comment">// static \u7C7B\u4E00\u52A0\u8F7D\u5C31\u521D\u59CB\u5316\uFF0C\u6240\u6709\u53EA\u80FD\u6709Class\u9501</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">sendSms</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;sendSms&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;call&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="8"><li>\u4E24\u4E2A\u5BF9\u8C61\uFF0C\u4E24\u4E2A\u7EBF\u7A0B\u662F\u5148\u6253\u5370sendSms\u8FD8\u662Fcall\u7684\u5462\uFF1F</li></ol><p>call sendSms</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test4</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4E24\u4E2A\u5BF9\u8C61</span>
        <span class="token keyword">final</span> <span class="token class-name">Phone4</span> phone1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phone4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">Phone4</span> phone2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phone4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u9501\u7684\u5B58\u5728</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            phone1<span class="token punctuation">.</span><span class="token function">sendSms</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            phone2<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Phone4</span> <span class="token punctuation">{</span>
    <span class="token comment">// static \u7C7B\u4E00\u52A0\u8F7D\u5C31\u521D\u59CB\u5316\uFF0C\u6240\u6709\u53EA\u80FD\u6709Class\u9501</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">sendSms</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;sendSms&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;call&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u96C6\u5408\u7C7B\u4E0D\u5B89\u5168"><a class="header-anchor" href="#\u96C6\u5408\u7C7B\u4E0D\u5B89\u5168" aria-hidden="true">#</a> \u96C6\u5408\u7C7B\u4E0D\u5B89\u5168</h2><p>\u5E76\u53D1\u60C5\u51B5\u4E0B\uFF0C\u96C6\u5408\u7C7B\u5728\u64CD\u4F5C\u4E0A\u662F\u4E0D\u5B89\u5168\u7684</p><h3 id="list-\u4E0D\u5B89\u5168"><a class="header-anchor" href="#list-\u4E0D\u5B89\u5168" aria-hidden="true">#</a> List \u4E0D\u5B89\u5168</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ListTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u62A5\u51FA\u9519\u8BEF\uFF1A<code>java.util.ConcurrentModificationException</code>\u5E76\u53D1\u4FEE\u6539\u5F02\u5E38</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">[</span><span class="token number">84562</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token number">84562</span>, b4e72, <span class="token number">62594</span>, f8148, 1d951, 37a3a<span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token number">84562</span>, b4e72, <span class="token number">62594</span>, f8148, 1d951<span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token number">84562</span>, b4e72, <span class="token number">62594</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token number">84562</span>, b4e72, <span class="token number">62594</span>, f8148, 1d951, 37a3a, e3939, 55bbf, 3681f<span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token number">84562</span>, b4e72, <span class="token number">62594</span>, f8148, 1d951, 37a3a, e3939, 55bbf, 3681f, cd94e<span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token number">84562</span>, b4e72<span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token number">84562</span>, b4e72, <span class="token number">62594</span>, f8148, 1d951, 37a3a, e3939, 55bbf<span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token number">84562</span>, b4e72, <span class="token number">62594</span>, f8148, 1d951, 37a3a, e3939<span class="token punctuation">]</span>
Exception <span class="token keyword">in</span> thread <span class="token string">&quot;7&quot;</span> java.util.ConcurrentModificationException
	at java.util.ArrayList<span class="token variable">$Itr</span>.checkForComodification<span class="token punctuation">(</span>ArrayList.java:909<span class="token punctuation">)</span>
	at java.util.ArrayList<span class="token variable">$Itr</span>.next<span class="token punctuation">(</span>ArrayList.java:859<span class="token punctuation">)</span>
	at java.util.AbstractCollection.toString<span class="token punctuation">(</span>AbstractCollection.java:461<span class="token punctuation">)</span>
	at java.lang.String.valueOf<span class="token punctuation">(</span>String.java:2994<span class="token punctuation">)</span>
	at java.io.PrintStream.println<span class="token punctuation">(</span>PrintStream.java:821<span class="token punctuation">)</span>
	at com.example.juc.unsafe.ListTest.lambda<span class="token variable">$main</span><span class="token variable">$0</span><span class="token punctuation">(</span>ListTest.java:14<span class="token punctuation">)</span>
	at java.lang.Thread.run<span class="token punctuation">(</span>Thread.java:748<span class="token punctuation">)</span>

Process finished with <span class="token builtin class-name">exit</span> code <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u600E\u4E48\u6837\u624D\u80FD\u5B89\u5168\u5462"><a class="header-anchor" href="#\u600E\u4E48\u6837\u624D\u80FD\u5B89\u5168\u5462" aria-hidden="true">#</a> \u600E\u4E48\u6837\u624D\u80FD\u5B89\u5168\u5462\uFF1F</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ListTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token doc-comment comment">/**
         * Vector \u9ED8\u8BA4\u60C5\u51B5\u4E0B\u5C31\u662F\u7EBF\u7A0B\u5B89\u5168\u7684\uFF0CArrayList\u662Fjdk1.2\u624D\u51FA\u6765\u7684\uFF0C\u4F46\u662F Vector \u662FJDK1.0\u5C31\u51FA\u6765\u4E86
         * \u4F60\u60F3\u5230\u7684\u4F7F\u7528synchronized\u4EBA\u5BB6\u65E9\u5C31\u60F3\u5230\u4E86
         */</span>
        <span class="token comment">// List&lt;String&gt; list = new Vector&lt;&gt;();</span>
        <span class="token comment">// Collections.synchronizedList \u521B\u5EFA\u4E00\u4E2A\u7EBF\u7A0B\u5B89\u5168\u7684\u96C6\u5408</span>
        <span class="token comment">//List&lt;String&gt; list = Collections.synchronizedList(new ArrayList&lt;&gt;());</span>

        <span class="token comment">// CopyOnWrite \u5199\u5165\u65F6\u590D\u5236 COW \u8BA1\u7B97\u673A\u9886\u57DF\u7684\u4E00\u79CD\u4F18\u5316\u7B56\u7565</span>
        <span class="token comment">// \u5199\u5165\u7684\u65F6\u5019\u590D\u5236\u4E00\u4EFD\uFF0C\u7136\u540E\u5199\u5165\u5230\u590D\u5236\u7684\u90A3\u4E00\u4EFD\uFF0C\u7136\u540E\u5728\u5408\u5E76\u5230\u539F\u6765\u7684\u90A3\u4E00\u4EFD</span>
        <span class="token comment">// \u591A\u4E2A\u7EBF\u7A0B\u8C03\u7528\u7684\u65F6\u5019\uFF0Clist \u8BFB\u53D6\u7684\u65F6\u5019\u662F\u56FA\u5B9A\u7684\uFF1B\u5199\u5165\u7684\u65F6\u5019\uFF08\u8986\u76D6\uFF09</span>
        <span class="token comment">// \u5728\u5199\u5165\u7684\u65F6\u5019\u907F\u514D\u8986\u76D6\uFF0C\u9020\u6210\u6570\u636E\u95EE\u9898</span>

        <span class="token comment">// \u8BFB\u5199\u5206\u79BB</span>

        <span class="token doc-comment comment">/**
         * CopyOnWriteArrayList \u6BD4 Vector\u5389\u5BB3\u5728\u54EA\u91CC\uFF1F
         * 
         */</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CopyOnWriteArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token doc-comment comment">/**
         * \u5E76\u53D1\u60C5\u51B5\u4E0B\uFF0CArrayList\u662F\u4E0D\u5B89\u5168\u7684
         * \u89E3\u51B3\u65B9\u6848\uFF1A
         * 1 List<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>String</span><span class="token punctuation">&gt;</span></span> list = new Vector&lt;&gt;();
         * 2 List<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>String</span><span class="token punctuation">&gt;</span></span> list = Collections.synchronizedList(new ArrayList&lt;&gt;());
         * 3 List<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>String</span><span class="token punctuation">&gt;</span></span> list = new CopyOnWriteArrayList&lt;&gt;();
         */</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>CopyOnWriteArrayList \u6BD4 Vector \u5389\u5BB3\u5728\u54EA\u91CC\uFF1F</p><p>\u67E5\u770B\u6E90\u7801\uFF0C\u6211\u4EEC\u53EF\u4EE5\u53D1\u73B0 Vector \u4F7F\u7528 sychronzied\uFF0CCopyOnWriteArrayList \u4F7F\u7528\u7684Lock\u9501</p><p>Synchronized \u7684\u6548\u7387\u76F8\u5BF9\u8F83\u4F4E\uFF0CLock \u7C92\u5EA6\u66F4\u7EC6</p><p>Vector</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">boolean</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    modCount<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token function">ensureCapacityHelper</span><span class="token punctuation">(</span>elementCount <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    elementData<span class="token punctuation">[</span>elementCount<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> e<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>CopyOnWriteArrayList</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">;</span>

<span class="token comment">// \u6DFB\u52A0\u64CD\u4F5C</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> lock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lock<span class="token punctuation">;</span>
    lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> elements <span class="token operator">=</span> <span class="token function">getArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> len <span class="token operator">=</span> elements<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token comment">// \u5199\u5165\u7684\u65F6\u5019\uFF0C\u590D\u5236</span>
        <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> newElements <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOf</span><span class="token punctuation">(</span>elements<span class="token punctuation">,</span> len <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        newElements<span class="token punctuation">[</span>len<span class="token punctuation">]</span> <span class="token operator">=</span> e<span class="token punctuation">;</span>
        <span class="token function">setArray</span><span class="token punctuation">(</span>newElements<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="set\u4E0D\u5B89\u5168"><a class="header-anchor" href="#set\u4E0D\u5B89\u5168" aria-hidden="true">#</a> Set\u4E0D\u5B89\u5168</h3><p>Set \u548C List \u672C\u8D28\u4E0A\u662F\u4E00\u6837\u7684\uFF0C\u90FD\u662FCollection\u7684\u4E0D\u540C\u5B9E\u73B0</p><p><img src="`+k+`" alt=""></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u540C\u7406\u53EF\u8BC1
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SetTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//Set&lt;String&gt; set = new HashSet&lt;&gt;();</span>
        <span class="token comment">//Set&lt;String&gt; set = Collections.synchronizedSet(new HashSet&lt;&gt;());</span>
        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CopyOnWriteArraySet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="hashset\u7684\u5E95\u5C42\u539F\u7406\u662F\u4EC0\u4E48"><a class="header-anchor" href="#hashset\u7684\u5E95\u5C42\u539F\u7406\u662F\u4EC0\u4E48" aria-hidden="true">#</a> HashSet\u7684\u5E95\u5C42\u539F\u7406\u662F\u4EC0\u4E48\uFF1F</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * hashset \u7684\u5E95\u5C42\u5C31\u662F hashmap
 * Constructs a new, empty set; the backing <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token class-name">HashMap</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span> instance has
 * default initial capacity (16) and load factor (0.75).
 */</span>
<span class="token keyword">public</span> <span class="token class-name">HashSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// add set \u672C\u8D28\u5C31\u662Fmap key \u662F\u65E0\u6CD5\u91CD\u590D\u7684</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> PRESENT<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="map\u4E0D\u5B89\u5168"><a class="header-anchor" href="#map\u4E0D\u5B89\u5168" aria-hidden="true">#</a> Map\u4E0D\u5B89\u5168</h3><p>\u56DE\u987E HashMap \u7684\u57FA\u672C\u539F\u7406</p><p><img src="`+r+'" alt=""></p><p><img src="'+d+`" alt=""></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u5E76\u53D1\u4FEE\u6539\u5F02\u5E38
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MapTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token doc-comment comment">/**
         * map \u662F\u8FD9\u6837\u7528\u7684\u5417\uFF1F \u9ED8\u8BA4\u7B49\u4EF7\u4E8E\u4EC0\u4E48\uFF1F
         * \u4E0D\u662F \u5DE5\u4F5C\u4E2D\u4E0D\u662F\u8FD9\u6837\u5B50\u7528\u7684
         * \u7B49\u4EF7\u4E8E\uFF1Anew HashMap&lt;&gt;(16,0.75)
         *
         * \u521D\u59CB\u5316\u53C2\u6570 \u9ED8\u8BA4\u503C
         * \u52A0\u8F7D\u56E0\u5B50
         * \u521D\u59CB\u5316\u5BB9\u91CF
         */</span>
        <span class="token comment">//Map&lt;String, String&gt; map = new HashMap&lt;&gt;();</span>
        <span class="token comment">//Map&lt;String, String&gt; map = Collections.synchronizedMap(new HashMap&lt;&gt;());</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">30</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="callable-\u771F\u7684\u5F88\u7B80\u5355"><a class="header-anchor" href="#callable-\u771F\u7684\u5F88\u7B80\u5355" aria-hidden="true">#</a> Callable\uFF08\u771F\u7684\u5F88\u7B80\u5355\uFF09</h2><blockquote><p>The Callable interface is similar to Runnable, in that both are designed for classes whose instances are potentially executed by another thread. A Runnable, however, does not return a result and cannot throw a checked exception.</p><p>Callable \u63A5\u53E3\u7C7B\u4F3C\u4E8E Runnable\uFF0C\u56E0\u4E3A\u4E24\u8005\u90FD\u662F\u4E3A\u90A3\u4E9B\u5B9E\u4F8B\u53EF\u80FD\u7531\u53E6\u4E00\u4E2A\u7EBF\u7A0B\u6267\u884C\u7684\u7C7B\u800C\u8BBE\u8BA1\u7684\u3002\u4F46\u662F\uFF0CRunnable \u4E0D\u8FD4\u56DE\u7ED3\u679C\uFF0C\u4E5F\u4E0D\u80FD\u629B\u51FA\u5DF2\u68C0\u67E5\u7684\u5F02\u5E38\u3002</p></blockquote><ul><li>\u53EF\u4EE5\u6709\u8FD4\u56DE\u503C</li><li>\u53EF\u4EE5\u629B\u51FA\u5F02\u5E38</li><li>\u65B9\u6CD5\u4E0D\u540C\uFF0Crun \\ call</li></ul><h3 id="\u4EE3\u7801\u6D4B\u8BD5"><a class="header-anchor" href="#\u4EE3\u7801\u6D4B\u8BD5" aria-hidden="true">#</a> \u4EE3\u7801\u6D4B\u8BD5</h3><p>\u6CDB\u578B\u7684\u53C2\u6570\u7B49\u4E8E\u65B9\u6CD5\u7684\u8FD4\u56DE\u503C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@FunctionalInterface</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Callable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * Computes a result, or throws an exception if unable to do so.
     *
     * <span class="token keyword">@return</span> computed result
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">Exception</span></span> if unable to compute a result
     */</span>
    <span class="token class-name">V</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u60F3\u8981\u81EA\u5DF1\u521B\u5EFA\u7EBF\u7A0B\uFF0C\u53EA\u80FD\u4F7F\u7528Thread\uFF08\u8FD8\u6709\u7EBF\u7A0B\u6C60\uFF09\uFF0CThread\u53EA\u63A5\u53D7Runnable</p><p><img src="`+v+'" alt=""></p><p>\u6211\u4EEC\u4F20\u5B83\u7684\u5B9E\u73B0\u7C7B\u8FDB\u53BB<code>FutureTask</code></p><p><img src="'+m+'" alt=""></p><p><img src="'+b+`" alt=""></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CallableTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ExecutionException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token comment">//new Thread(new MyThread()).start();</span>
        <span class="token class-name">MyThread</span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">FutureTask</span> futureTask <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FutureTask</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>futureTask<span class="token punctuation">,</span><span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">final</span> <span class="token class-name">String</span> o <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>futureTask<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//class MyThread implements Runnable{</span>
<span class="token comment">//</span>
<span class="token comment">//    @Override</span>
<span class="token comment">//    public void run() {</span>
<span class="token comment">//</span>
<span class="token comment">//    }</span>
<span class="token comment">//}</span>

<span class="token keyword">class</span> <span class="token class-name">MyThread</span> <span class="token keyword">implements</span> <span class="token class-name">Callable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;123456789&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CallableTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ExecutionException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token comment">//new Thread(new MyThread()).start();</span>
        <span class="token class-name">MyThread</span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">FutureTask</span> futureTask <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FutureTask</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>futureTask<span class="token punctuation">,</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>futureTask<span class="token punctuation">,</span> <span class="token string">&quot;B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// call\u53EA\u4F1A\u88AB\u8C03\u7528\u4E00\u6B21\uFF0C\u7ED3\u679C\u4F1A\u88AB\u7F13\u5B58\uFF0C\u63D0\u9AD8\u6548\u7387</span>

        <span class="token keyword">final</span> <span class="token class-name">String</span> o <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> futureTask<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u8FD9\u4E2Aget\u65B9\u6CD5\u53EF\u80FD\u4F1A\u4EA7\u751F\u963B\u585E\uFF0C\u628A\u5B83\u653E\u5230\u6700\u540E\uFF0C\u6216\u8005\u4F7F\u7528\u5F02\u6B65\u901A\u4FE1\u6765\u5904\u7406</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//class MyThread implements Runnable{</span>
<span class="token comment">//</span>
<span class="token comment">//    @Override</span>
<span class="token comment">//    public void run() {</span>
<span class="token comment">//</span>
<span class="token comment">//    }</span>
<span class="token comment">//}</span>

<span class="token keyword">class</span> <span class="token class-name">MyThread</span> <span class="token keyword">implements</span> <span class="token class-name">Callable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;call&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token string">&quot;123456789&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u7EC6\u8282</strong></p><ul><li>\u6709\u7F13\u5B58</li><li>\u7ED3\u679C\u53EF\u80FD\u9700\u8981\u7B49\u5F85\uFF0C\u4F1A\u963B\u585E</li></ul><h2 id="countdownlatch\u3001cyclicbarrier\u3001semaphore"><a class="header-anchor" href="#countdownlatch\u3001cyclicbarrier\u3001semaphore" aria-hidden="true">#</a> CountDownLatch\u3001CyclicBarrier\u3001Semaphore</h2><h3 id="countdownlatch"><a class="header-anchor" href="#countdownlatch" aria-hidden="true">#</a> CountDownLatch</h3><blockquote><p>A synchronization aid that allows one or more threads to wait until a set of operations being performed in other threads completes.</p><p>\u4E00\u79CD\u540C\u6B65\u8F85\u52A9\uFF0C\u5141\u8BB8\u4E00\u4E2A\u6216\u591A\u4E2A\u7EBF\u7A0B\u7B49\u5F85\uFF0C\u76F4\u5230\u5728\u5176\u4ED6\u7EBF\u7A0B\u4E2D\u6267\u884C\u7684\u4E00\u7EC4\u64CD\u4F5C\u5B8C\u6210\u3002</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * countDownLatch \u8BA1\u6570\u5668
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
 * \u4FDD\u5B89\u8981\u7B49\u5F856\u4E2A\u5B66\u751F\u5168\u90E8\u51FA\u53BB\u7684\u4E4B\u540E\u518D\u5173\u95E8
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CountDownLatchDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u603B\u6570\u662F6</span>
        <span class="token keyword">final</span> <span class="token class-name">CountDownLatch</span> countDownLatch <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CountDownLatch</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\u8D70\u4E86&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                countDownLatch<span class="token punctuation">.</span><span class="token function">countDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        countDownLatch<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u7B49\u5F85\u8BA1\u6570\u5668\u5F52\u96F6\uFF0C\u7136\u540E\u5728\u5411\u4E0B\u6267\u884C\uFF0C\u4E5F\u5C31\u662F\u7B49\u5F85\u5B66\u751F\u90FD\u8D70\u5149\u4E86</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4FDD\u5B89\u5173\u95E8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token number">0</span>\u8D70\u4E86
<span class="token number">3</span>\u8D70\u4E86
<span class="token number">2</span>\u8D70\u4E86
<span class="token number">5</span>\u8D70\u4E86
<span class="token number">1</span>\u8D70\u4E86
<span class="token number">4</span>\u8D70\u4E86
\u4FDD\u5B89\u5173\u95E8
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cyclicbarrier"><a class="header-anchor" href="#cyclicbarrier" aria-hidden="true">#</a> CyclicBarrier</h3><blockquote><p>A synchronization aid that allows a set of threads to all wait for each other to reach a common barrier point. CyclicBarriers are useful in programs involving a fixed sized party of threads that must occasionally wait for each other. The barrier is called cyclic because it can be re-used after the waiting threads are released.</p><p>\u4E00\u79CD\u540C\u6B65\u8F85\u52A9\u5DE5\u5177\uFF0C\u5B83\u5141\u8BB8\u4E00\u7EC4\u7EBF\u7A0B\u5168\u90E8\u7B49\u5F85\u5F7C\u6B64\u5230\u8FBE\u516C\u5171\u5C4F\u969C\u70B9\u3002 CyclicBarriers \u5728\u6D89\u53CA\u56FA\u5B9A\u5927\u5C0F\u7684\u7EBF\u7A0B\u7EC4\u7684\u7A0B\u5E8F\u4E2D\u5F88\u6709\u7528\uFF0C\u8FD9\u4E9B\u7EBF\u7A0B\u5FC5\u987B\u5076\u5C14\u76F8\u4E92\u7B49\u5F85\u3002\u5C4F\u969C\u88AB\u79F0\u4E3A\u5FAA\u73AF\u7684\uFF0C\u56E0\u4E3A\u5B83\u53EF\u4EE5\u5728\u7B49\u5F85\u7EBF\u7A0B\u88AB\u91CA\u653E\u540E\u91CD\u65B0\u4F7F\u7528\u3002</p><p>\u52A0\u6CD5\u8BA1\u6570\u5668</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u96C6\u9F507\u9897\u9F99\u73E0\u53EC\u5524\u795E\u9F99
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CyclicBarrierTest</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token comment">//\u53EC\u5524\u9F99\u73E0\u7684\u7EBF\u7A0B</span>
        <span class="token class-name">CyclicBarrier</span> cyclicBarrier <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CyclicBarrier</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u53EC\u5524\u795E\u9F99\u6210\u529F&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">7</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">/*
                lambda \u80FD\u62FF\u5230\u5E76\u64CD\u4F5C i \u5417\uFF1F\u4E0D\u80FD
                \u518D\u600E\u4E48\u8BF4\uFF0Clambda\u4E5F\u662F\u4E00\u4E2A\u7C7B\u7684\u7B80\u5199\uFF0C\u600E\u4E48\u53EF\u4EE5\u62FF\u5230\u5C40\u90E8\u53D8\u91CF\u5462
                \u9664\u975E\u662F\u4F7F\u7528final\u4FEE\u9970\uFF0C\u8BA9\u5C40\u90E8\u5185\u90E8\u7C7B\u4F7F\u7528
             */</span>

            <span class="token keyword">final</span> <span class="token keyword">int</span> temp <span class="token operator">=</span> i<span class="token punctuation">;</span>
            <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\u6536\u96C6&quot;</span> <span class="token operator">+</span> temp <span class="token operator">+</span> <span class="token string">&quot;\u4E2A\u9F99\u73E0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    cyclicBarrier<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u5176\u5B9E\u5C31\u662F\u76F8\u5F53\u4E8E\u8C03\u7528 cyclicBarrier +1</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">BrokenBarrierException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token number">0</span>\u6536\u96C60\u4E2A\u9F99\u73E0
<span class="token number">2</span>\u6536\u96C62\u4E2A\u9F99\u73E0
<span class="token number">1</span>\u6536\u96C61\u4E2A\u9F99\u73E0
<span class="token number">4</span>\u6536\u96C64\u4E2A\u9F99\u73E0
<span class="token number">3</span>\u6536\u96C63\u4E2A\u9F99\u73E0
<span class="token number">5</span>\u6536\u96C65\u4E2A\u9F99\u73E0
<span class="token number">6</span>\u6536\u96C66\u4E2A\u9F99\u73E0
\u53EC\u5524\u795E\u9F99\u6210\u529F
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u628A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">CyclicBarrier</span> cyclicBarrier <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CyclicBarrier</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u53EC\u5524\u795E\u9F99\u6210\u529F&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B64\u65F6\u53EC\u5524\u795E\u9F99\u662F\u4E0D\u6210\u529F\u7684\uFF0C\u4F1A\u4E00\u76F4\u505C\u5728\u7B2C8\u9897\uFF0C\u4E5F\u5C31\u662F\u4E00\u76F4\u7B49\u5F85\u53EC\u5524\u7B2C8\u9897\u4E0D\u6210\u529F</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token number">0</span>\u6536\u96C60\u4E2A\u9F99\u73E0
<span class="token number">2</span>\u6536\u96C62\u4E2A\u9F99\u73E0
<span class="token number">1</span>\u6536\u96C61\u4E2A\u9F99\u73E0
<span class="token number">3</span>\u6536\u96C63\u4E2A\u9F99\u73E0
<span class="token number">4</span>\u6536\u96C64\u4E2A\u9F99\u73E0
<span class="token number">5</span>\u6536\u96C65\u4E2A\u9F99\u73E0
<span class="token number">6</span>\u6536\u96C66\u4E2A\u9F99\u73E0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="semaphore"><a class="header-anchor" href="#semaphore" aria-hidden="true">#</a> Semaphore</h3><p>Semaphore\uFF1A\u4FE1\u53F7\u91CF</p><blockquote><p>A counting semaphore. Conceptually, a semaphore maintains a set of permits. Each acquire() blocks if necessary until a permit is available, and then takes it. Each release() adds a permit, potentially releasing a blocking acquirer. However, no actual permit objects are used; the Semaphore just keeps a count of the number available and acts accordingly.</p><p>\u8BA1\u6570\u4FE1\u53F7\u91CF\u3002\u4ECE\u6982\u5FF5\u4E0A\u8BB2\uFF0C\u4FE1\u53F7\u91CF\u7EF4\u62A4<strong>\u4E00\u7EC4</strong>\u8BB8\u53EF\u3002\u5982\u6709\u5FC5\u8981\uFF0C\u6BCF\u4E2Aacquire() \u90FD\u4F1A\u963B\u585E\uFF0C\u76F4\u5230\u83B7\u5F97\u8BB8\u53EF\u4E3A\u6B62\uFF0C\u7136\u540E\u83B7\u53D6\u5B83\u3002\u6BCF\u4E2A release() \u6DFB\u52A0\u4E00\u4E2A\u8BB8\u53EF\uFF0C\u53EF\u80FD\u4F1A\u91CA\u653E\u4E00\u4E2A\u963B\u585E\u7684\u83B7\u53D6\u8005\u3002\u4F46\u662F\uFF0C\u6CA1\u6709\u4F7F\u7528\u5B9E\u9645\u7684\u8BB8\u53EF\u5BF9\u8C61\uFF1B\u4FE1\u53F7\u91CF\u53EA\u662F\u8BA1\u7B97\u53EF\u7528\u7684\u6570\u91CF\u5E76\u76F8\u5E94\u5730\u91C7\u53D6\u884C\u52A8\u3002</p></blockquote><p>\u62A2\u8F66\u4F4D</p><p>6\u8F86\u8F66 \u62A2 3\u4E2A\u8F66\u4F4D</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u62A2\u8F66\u4F4D
 * 6\u8F86\u8F66 \u62A2 3\u4E2A\u8F66\u4F4D
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SemaphoreDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u7EBF\u7A0B\u6570\u91CF\uFF0C\u505C\u8F66\u4F4D</span>
        <span class="token class-name">Semaphore</span> semaphore <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Semaphore</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token comment">// acquire()  \u5F97\u5230</span>
                    semaphore<span class="token punctuation">.</span><span class="token function">acquire</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;\u62A2\u5230\u8F66\u4F4D&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">// \u505C\u8F662\u79D2</span>
                    <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;\u79BB\u5F00\u8F66\u4F4D&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{</span>
                    <span class="token comment">// release()  \u91CA\u653E</span>
                    semaphore<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token number">0</span>\u62A2\u5230\u8F66\u4F4D
<span class="token number">2</span>\u62A2\u5230\u8F66\u4F4D
<span class="token number">1</span>\u62A2\u5230\u8F66\u4F4D
<span class="token number">2</span>\u79BB\u5F00\u8F66\u4F4D
<span class="token number">0</span>\u79BB\u5F00\u8F66\u4F4D
<span class="token number">3</span>\u62A2\u5230\u8F66\u4F4D
<span class="token number">1</span>\u79BB\u5F00\u8F66\u4F4D
<span class="token number">4</span>\u62A2\u5230\u8F66\u4F4D
<span class="token number">5</span>\u62A2\u5230\u8F66\u4F4D
<span class="token number">4</span>\u79BB\u5F00\u8F66\u4F4D
<span class="token number">3</span>\u79BB\u5F00\u8F66\u4F4D
<span class="token number">5</span>\u79BB\u5F00\u8F66\u4F4D
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u539F\u7406"><a class="header-anchor" href="#\u539F\u7406" aria-hidden="true">#</a> \u539F\u7406</h4><p><code>semaphore.acquire();</code> \u62A2\u5360\u8D44\u6E90\uFF0C\u5047\u8BBE\u5DF2\u7ECF\u6CA1\u6709\u8D44\u6E90\u4E86\uFF0C\u7B49\u5F85\uFF0C\u7B49\u5F85\u5230\u88AB\u91CA\u653E\u4E3A\u6B62</p><p><code>semaphore.release();</code>\u91CA\u653E\u8D44\u6E90\uFF0C\u4F1A\u5C06\u5F53\u524D\u7684\u4FE1\u53F7\u91CF\u91CA\u653E+1\uFF0C\u7136\u540E\u5524\u9192\u7B49\u5F85\u7684\u7EBF\u7A0B</p><p><strong>\u4F5C\u7528</strong></p><p>\u591A\u4E2A\u5171\u4EAB\u8D44\u6E90\u7684\u4F5C\u7528\uFF0C\u5E76\u53D1\u9650\u6D41\uFF0C\u63A7\u5236\u6700\u5927\u7684\u7EBF\u7A0B\u6570</p><h2 id="\u8BFB\u5199\u9501"><a class="header-anchor" href="#\u8BFB\u5199\u9501" aria-hidden="true">#</a> \u8BFB\u5199\u9501</h2><ul><li>\u8BFB-\u8BFB \u53EF\u4EE5\u5171\u5B58</li><li>\u8BFB-\u5199 \u53EF\u4EE5\u5171\u5B58</li><li>\u5199-\u5199 \u4E0D\u53EF\u4EE5\u5171\u5B58</li></ul><p>\u540C\u4E00\u4E2A\u6982\u5FF5\u7684\u4E0D\u540C\u8BF4\u6CD5</p><ul><li>\u72EC\u5360\u9501\uFF08\u5199\u9501\uFF09</li><li>\u5171\u4EAB\u9501\uFF08\u8BFB\u9501\uFF09</li></ul><blockquote><p>Interface ReadWriteLock \u5B9E\u73B0\u7C7B ReentrantReadWriteLock</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReadWriteLockDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">MyCache</span> myCache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u5199\u5165</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">final</span> <span class="token keyword">int</span> temp <span class="token operator">=</span> i<span class="token punctuation">;</span>
            <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                myCache<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>temp <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> temp<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// \u8BFB\u53D6</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">final</span> <span class="token keyword">int</span> temp <span class="token operator">=</span> i<span class="token punctuation">;</span>
            <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                myCache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>temp <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * \u7F13\u5B58
 * \u8BFB\u7684\u65F6\u5019\u53EF\u4EE5\u88AB\u591A\u4E2A\u7EBF\u7A0B\u8BFB\uFF0C\u5199\u7684\u65F6\u5019\u53EA\u80FD\u88AB\u5355\u4E2A\u7EBF\u7A0B\u5199
 */</span>
<span class="token keyword">class</span> <span class="token class-name">MyCache</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5B58 \u5199</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">,</span> <span class="token class-name">Object</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\u5199\u5165&quot;</span> <span class="token operator">+</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\u5199\u5165OK&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u53D6 \u8BFB</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\u8BFB\u53D6&quot;</span> <span class="token operator">+</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">Object</span> o <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\u8BFB\u53D6OK&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C</p><p>\u7EBF\u7A0B\u88AB\u63D2\u961F\u4E86\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token number">0</span>\u5199\u51650
<span class="token number">2</span>\u5199\u51652
<span class="token number">1</span>\u5199\u51651
<span class="token number">1</span>\u5199\u5165OK
<span class="token number">4</span>\u5199\u51654
<span class="token number">4</span>\u5199\u5165OK
<span class="token number">2</span>\u5199\u5165OK
<span class="token number">3</span>\u5199\u51653
<span class="token number">3</span>\u5199\u5165OK
<span class="token number">0</span>\u5199\u5165OK
<span class="token number">0</span>\u8BFB\u53D60
<span class="token number">0</span>\u8BFB\u53D6OK
<span class="token number">1</span>\u8BFB\u53D61
<span class="token number">1</span>\u8BFB\u53D6OK
<span class="token number">2</span>\u8BFB\u53D62
<span class="token number">2</span>\u8BFB\u53D6OK
<span class="token number">3</span>\u8BFB\u53D63
<span class="token number">3</span>\u8BFB\u53D6OK
<span class="token number">4</span>\u8BFB\u53D64
<span class="token number">4</span>\u8BFB\u53D6OK
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4F7F\u7528\u8BFB\u5199\u9501"><a class="header-anchor" href="#\u4F7F\u7528\u8BFB\u5199\u9501" aria-hidden="true">#</a> \u4F7F\u7528\u8BFB\u5199\u9501</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReadWriteLockDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">MyCacheLock</span> myCache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyCacheLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u5199\u5165</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">final</span> <span class="token keyword">int</span> temp <span class="token operator">=</span> i<span class="token punctuation">;</span>
            <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                myCache<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>temp <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> temp<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// \u8BFB\u53D6</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">final</span> <span class="token keyword">int</span> temp <span class="token operator">=</span> i<span class="token punctuation">;</span>
            <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                myCache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>temp <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * \u7F13\u5B58
 * \u8BFB\u7684\u65F6\u5019\u53EF\u4EE5\u88AB\u591A\u4E2A\u7EBF\u7A0B\u8BFB\uFF0C\u5199\u7684\u65F6\u5019\u53EA\u80FD\u88AB\u5355\u4E2A\u7EBF\u7A0B\u5199
 */</span>
<span class="token keyword">class</span> <span class="token class-name">MyCacheLock</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u8BFB\u5199\u9501\uFF0C\u66F4\u52A0\u7EC6\u7C92\u5EA6\u7684\u63A7\u5236</span>
    <span class="token keyword">private</span> <span class="token class-name">ReadWriteLock</span> readWriteLock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantReadWriteLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5B58 \u5199 \u7684\u65F6\u5019\uFF0C\u53EA\u5E0C\u671B\uFF0C\u540C\u65F6\u53EA\u6709\u4E00\u4E2A\u7EBF\u7A0B\u5199</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">,</span> <span class="token class-name">Object</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//readWriteLock.writeLock() \u83B7\u53D6\u5199\u9501</span>
        readWriteLock<span class="token punctuation">.</span><span class="token function">writeLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\u5199\u5165&quot;</span> <span class="token operator">+</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\u5199\u5165OK&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            readWriteLock<span class="token punctuation">.</span><span class="token function">writeLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u53D6 \u8BFB \u6240\u6709\u4EBA\u90FD\u53EF\u4EE5\u8BFB</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        readWriteLock<span class="token punctuation">.</span><span class="token function">readLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\u8BFB\u53D6&quot;</span> <span class="token operator">+</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">final</span> <span class="token class-name">Object</span> o <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\u8BFB\u53D6OK&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            readWriteLock<span class="token punctuation">.</span><span class="token function">readLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token number">0</span>\u5199\u51650
<span class="token number">0</span>\u5199\u5165OK
<span class="token number">1</span>\u5199\u51651
<span class="token number">1</span>\u5199\u5165OK
<span class="token number">2</span>\u5199\u51652
<span class="token number">2</span>\u5199\u5165OK
<span class="token number">3</span>\u5199\u51653
<span class="token number">3</span>\u5199\u5165OK
<span class="token number">4</span>\u5199\u51654
<span class="token number">4</span>\u5199\u5165OK
<span class="token number">0</span>\u8BFB\u53D60
<span class="token number">0</span>\u8BFB\u53D6OK
<span class="token number">1</span>\u8BFB\u53D61
<span class="token number">1</span>\u8BFB\u53D6OK
<span class="token number">2</span>\u8BFB\u53D62
<span class="token number">2</span>\u8BFB\u53D6OK
<span class="token number">3</span>\u8BFB\u53D63
<span class="token number">3</span>\u8BFB\u53D6OK
<span class="token number">4</span>\u8BFB\u53D64
<span class="token number">4</span>\u8BFB\u53D6OK
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u963B\u585E\u961F\u5217"><a class="header-anchor" href="#\u963B\u585E\u961F\u5217" aria-hidden="true">#</a> \u963B\u585E\u961F\u5217</h2><h3 id="\u963B\u585E\u3001\u961F\u5217"><a class="header-anchor" href="#\u963B\u585E\u3001\u961F\u5217" aria-hidden="true">#</a> \u963B\u585E\u3001\u961F\u5217</h3><ul><li>\u5199\u5165\uFF1A\u5982\u679C\u961F\u5217\u6EE1\u4E86\uFF0C\u5C31\u5FC5\u987B\u963B\u585E</li><li>\u8BFB\u53D6\uFF1A\u5982\u679C\u961F\u5217\u662F\u7A7A\u7684\uFF0C\u5C31\u5FC5\u987B\u7B49\u5F85</li></ul><h3 id="blockingqueue"><a class="header-anchor" href="#blockingqueue" aria-hidden="true">#</a> BlockingQueue</h3><p><img src="`+y+'" alt=""></p><ul><li>SynchronousQueue \u540C\u6B65\u961F\u5217</li><li>ArrayBlockingQueue \u6570\u7EC4\u5B9E\u73B0\u7684\u961F\u5217</li><li>LinkedBlockingDeque \u94FE\u8868\u5B9E\u73B0\u7684\u961F\u5217</li><li>DelayQueue \u5EF6\u65F6\u961F\u5217</li></ul><p><img src="'+g+'" alt=""></p><p>\u4EC0\u4E48\u60C5\u51B5\u4E0B\u4F1A\u7528\u5230\u963B\u585E\u961F\u5217</p><p>\u591A\u7EBF\u7A0B\uFF08a-b\u7EBF\u7A0B\u6267\u884C\u987A\u5E8F\uFF09\uFF0C\u7EBF\u7A0B\u6C60\uFF08\u4F7F\u7528\u4E00\u4E2A\u961F\u5217\u5B58\u50A8\u7EBF\u7A0B\uFF09</p><p><img src="'+w+'" alt=""></p><p><img src="'+h+`" alt=""></p><h3 id="\u5B66\u4F1A\u4F7F\u7528\u961F\u5217"><a class="header-anchor" href="#\u5B66\u4F1A\u4F7F\u7528\u961F\u5217" aria-hidden="true">#</a> \u5B66\u4F1A\u4F7F\u7528\u961F\u5217</h3><p>\u6DFB\u52A0\u3001\u79FB\u9664</p><h4 id="\u56DB\u7EC4api"><a class="header-anchor" href="#\u56DB\u7EC4api" aria-hidden="true">#</a> \u56DB\u7EC4API</h4><ol><li>\u629B\u51FA\u5F02\u5E38</li><li>\u4E0D\u4F1A\u629B\u51FA\u5F02\u5E38</li><li>\u963B\u585E\u7B49\u5F85</li><li>\u8D85\u65F6\u7B49\u5F85</li></ol><table><thead><tr><th>\u65B9\u5F0F</th><th>\u629B\u51FA\u5F02\u5E38</th><th>\u6709\u8FD4\u56DE\u503C,\u4E0D\u629B\u51FA\u5F02\u5E38</th><th style="text-align:left;">\u963B\u585E\u7B49\u5F85</th><th style="text-align:left;">\u8D85\u65F6\u7B49\u5F85</th></tr></thead><tbody><tr><td>\u6DFB\u52A0</td><td>add(&quot;a&quot;)</td><td>offer(&quot;a&quot;)</td><td style="text-align:left;">put(&quot;a&quot;)</td><td style="text-align:left;">offer(&quot;d&quot;,2, TimeUnit.SECONDS)</td></tr><tr><td>\u79FB\u9664</td><td>remove()</td><td>poll()</td><td style="text-align:left;">take()</td><td style="text-align:left;">poll(2, TimeUnit.SECONDS)</td></tr><tr><td>\u5224\u65AD\u961F\u5217\u9996</td><td>element()</td><td>peek()</td><td style="text-align:left;">-</td><td style="text-align:left;">-</td></tr></tbody></table><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u629B\u51FA\u5F02\u5E38
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u961F\u5217\u7684\u5927\u5C0F 3 \u8868\u793A\u53EA\u80FD\u65B9\u4E09\u4E2A\u53C2\u6570</span>
        <span class="token keyword">final</span> <span class="token class-name">ArrayBlockingQueue</span> arrayBlockingQueue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        arrayBlockingQueue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        arrayBlockingQueue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        arrayBlockingQueue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u5982\u679C\u6DFB\u52A0\u7684\u6570\u91CF\u8D85\u8FC7\u961F\u5217\u7684\u5927\u5C0F\uFF0C\u4F1A\u629B\u51FA\u5F02\u5E38</span>
        <span class="token comment">// Exception in thread &quot;main&quot; java.lang.IllegalStateException: Queue full</span>
        <span class="token comment">//arrayBlockingQueue.add(&quot;d&quot;);</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arrayBlockingQueue<span class="token punctuation">.</span><span class="token function">element</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u67E5\u770B\u961F\u9996\u7684\u5143\u7D20\u503C</span>


        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arrayBlockingQueue<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arrayBlockingQueue<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arrayBlockingQueue<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u5982\u679C\u5F39\u51FA\u5143\u7D20\u7684\u65F6\u5019\u662F\u7A7A\u7684\uFF0C\u4F1A\u629B\u51FA\u5F02\u5E38</span>
        <span class="token comment">// java.util.NoSuchElementException</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arrayBlockingQueue<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u6709\u8FD4\u56DE\u503C\uFF0C\u4E0D\u4F1A\u629B\u51FA\u5F02\u5E38
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u961F\u5217\u7684\u5927\u5C0F 3 \u8868\u793A\u53EA\u80FD\u65B9\u4E09\u4E2A\u53C2\u6570</span>
        <span class="token keyword">final</span> <span class="token class-name">ArrayBlockingQueue</span> arrayBlockingQueue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        arrayBlockingQueue<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        arrayBlockingQueue<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        arrayBlockingQueue<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u5982\u679C\u6DFB\u52A0\u5931\u8D25\u8FD4\u56DEfalse\uFF0C\u4E0D\u629B\u51FA\u5F02\u5E38</span>
        <span class="token comment">//arrayBlockingQueue.offer(&quot;d&quot;);</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arrayBlockingQueue<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u67E5\u770B\u961F\u9996\u5143\u7D20</span>

        arrayBlockingQueue<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        arrayBlockingQueue<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        arrayBlockingQueue<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u53D6\u503C\u7684\u65F6\u5019\uFF0C\u5982\u679C\u662F\u961F\u5217\u7A7A\u7684\uFF0C\u5C31\u8FD4\u56DEnull</span>
        <span class="token comment">//arrayBlockingQueue.poll();</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u7B49\u5F85 \u963B\u585E\uFF08\u4E00\u76F4\u963B\u585E\uFF09
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u961F\u5217\u7684\u5927\u5C0F 3 \u8868\u793A\u53EA\u80FD\u65B9\u4E09\u4E2A\u53C2\u6570</span>
        <span class="token keyword">final</span> <span class="token class-name">ArrayBlockingQueue</span> arrayBlockingQueue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        arrayBlockingQueue<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        arrayBlockingQueue<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        arrayBlockingQueue<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u4E00\u76F4\u963B\u585E \u961F\u5217\u6CA1\u6709\u4F4D\u7F6E\u4E86</span>
        arrayBlockingQueue<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;d&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        arrayBlockingQueue<span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        arrayBlockingQueue<span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        arrayBlockingQueue<span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u4E00\u76F4\u963B\u585E \u961F\u5217\u662F\u7A7A\u7684</span>
        arrayBlockingQueue<span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u7B49\u5F85\uFF0C\u963B\u585E\uFF08\u7B49\u5F85\u8D85\u65F6\uFF09
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u961F\u5217\u7684\u5927\u5C0F 3 \u8868\u793A\u53EA\u80FD\u65B9\u4E09\u4E2A\u53C2\u6570</span>
        <span class="token keyword">final</span> <span class="token class-name">ArrayBlockingQueue</span> arrayBlockingQueue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        arrayBlockingQueue<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        arrayBlockingQueue<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        arrayBlockingQueue<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        arrayBlockingQueue<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span><span class="token string">&quot;d&quot;</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u8868\u793A\u5982\u679C\u5F53\u524D\u961F\u5217\u963B\u585E\u4E86\uFF0C\u6211\u5C31\u7B49\u5F852\u79D2\uFF0C2\u79D2\u4E4B\u540E\u8FD8\u4E0D\u80FD\u63D2\u5165\uFF0C\u6211\u5C31\u4E0D\u63D2\u4E86</span>


        arrayBlockingQueue<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        arrayBlockingQueue<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        arrayBlockingQueue<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        arrayBlockingQueue<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u8868\u793A\u5982\u679C\u8D85\u8FC72\u79D2\u6CA1\u6709\u62FF\u5230\uFF0C\u6211\u5C31\u4E0D\u62FF\u4E86</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="synchronousqueue-\u540C\u6B65\u961F\u5217"><a class="header-anchor" href="#synchronousqueue-\u540C\u6B65\u961F\u5217" aria-hidden="true">#</a> SynchronousQueue \u540C\u6B65\u961F\u5217</h2><p>\u6CA1\u6709\u5BB9\u91CF</p><p>\u8FDB\u53BB\u4E00\u4E2A\u5143\u7D20\uFF0C\u5FC5\u987B\u7B49\u5F85\u53D6\u51FA\u6765\u4E4B\u540E\uFF0C\u624D\u80FD\u518D\u5F80\u91CC\u9762\u653E\u4E00\u4E2A\u5143\u7D20</p><p>put(\u5B58)\u3001take(\u53D6)</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u540C\u6B65\u961F\u5217
 * \u548C\u5176\u4ED6\u7684BlockingQueue\u4E0D\u4E00\u6837\uFF0CSynchronousQueue\u4E0D\u5B58\u50A8\u5143\u7D20\uFF0Cput\u4E86\u4E00\u4E2A\u5143\u7D20\uFF0C
 * \u5FC5\u987B\u5148take\u53D6\u51FA\u6765\u624D\u80FD\u63A5\u7740\u5F80\u91CC\u653E
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SynchronousQueueDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">BlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> synchronousQueue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SynchronousQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; put 1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                synchronousQueue<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; put 2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                synchronousQueue<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; put 3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                synchronousQueue<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;T1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; take &quot;</span> <span class="token operator">+</span> synchronousQueue<span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; take &quot;</span> <span class="token operator">+</span> synchronousQueue<span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; take &quot;</span> <span class="token operator">+</span> synchronousQueue<span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;T2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>T1 put <span class="token number">1</span>
T2 take <span class="token number">1</span>
T1 put <span class="token number">2</span>
T2 take <span class="token number">2</span>
T1 put <span class="token number">3</span>
T2 take <span class="token number">3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7EBF\u7A0B\u6C60"><a class="header-anchor" href="#\u7EBF\u7A0B\u6C60" aria-hidden="true">#</a> \u7EBF\u7A0B\u6C60</h2><p><strong>\u4E09\u5927\u65B9\u6CD5\u3001\u4E03\u5927\u53C2\u6570\u3001\u56DB\u79CD\u62D2\u7EDD\u7B56\u7565</strong></p><blockquote><p>\u6C60\u5316\u6280\u672F</p></blockquote><p>\u7A0B\u5E8F\u7684\u8FD0\u884C\uFF0C\u672C\u8D28\uFF1A\u5360\u7528\u7CFB\u7EDF\u8D44\u6E90\uFF0C\u6240\u4EE5\u6211\u4EEC\u5C31\u8981\u4F18\u5316\u7CFB\u7EDF\u8D44\u6E90\u7684\u4F7F\u7528\uFF0C\u4E8E\u662F\u5C31\u6F14\u53D8\u51FA\u6765\u4E00\u79CD\u6280\u672F--\u6C60\u5316\u6280\u672F</p><p>\u6BD4\u5982\uFF0C\u7EBF\u7A0B\u6C60\u3001\u6570\u636E\u5E93\u8FDE\u63A5\u6C60\u3001\u5BF9\u8C61\u6C60\uFF08spring ioc\uFF09</p><p>\u6C60\u5316\u6280\u672F\uFF1A\u4E8B\u5148\u51C6\u5907\u597D\u4E00\u4E9B\u8D44\u6E90\uFF0C\u6709\u4EBA\u8981\u7528\uFF0C\u5C31\u6765\u6211\u8FD9\u91CC\u62FF\uFF0C\u7528\u5B8C\u4E4B\u540E\u8FD8\u7ED9\u6211\uFF0C\u56E0\u4E3A\u5728\u521B\u5EFA\u548C\u9500\u6BC1\u7684\u65F6\u5019\u90FD\u4F1A\u5360\u7528\u7CFB\u7EDF\u7684\u8D44\u6E90</p><p>\u9ED8\u8BA4\u5927\u5C0F\uFF1A2</p><p>max\uFF1Axx</p><p>\u7EBF\u7A0B\u6C60\u7684\u597D\u5904\uFF1A</p><ul><li>\u964D\u4F4E\u8D44\u6E90\u7684\u6D88\u8017</li><li>\u63D0\u9AD8\u54CD\u5E94\u7684\u901F\u5EA6</li><li>\u65B9\u4FBF\u7BA1\u7406</li></ul><p><strong>\u7EBF\u7A0B\u590D\u7528\u3001\u53EF\u4EE5\u63A7\u5236\u6700\u5927\u5E76\u53D1\u6570\u3001\u7BA1\u7406\u7EBF\u7A0B</strong></p><h3 id="\u7EBF\u7A0B\u6C60\u7684\u4E09\u5927\u65B9\u6CD5"><a class="header-anchor" href="#\u7EBF\u7A0B\u6C60\u7684\u4E09\u5927\u65B9\u6CD5" aria-hidden="true">#</a> \u7EBF\u7A0B\u6C60\u7684\u4E09\u5927\u65B9\u6CD5</h3><p><img src="`+f+`" alt=""></p><ul><li>Executors.newSingleThreadExecutor(); \u5355\u4E2A\u7EBF\u7A0B\u7684\u7EBF\u7A0B\u6C60</li><li>Executors.newFixedThreadPool(5); \u521B\u5EFA\u4E00\u4E2A\u56FA\u5B9A\u7684\u7EBF\u7A0B\u6C60\u7684\u5927\u5C0F</li><li>Executors.newCachedThreadPool(); \u53EF\u4F38\u7F29\u7684\uFF0C\u9047\u5F3A\u5219\u5F3A\uFF0C\u9047\u5F31\u5219\u5F31</li></ul><p><strong>Executors.newSingleThreadExecutor</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Collection \u6709 Collections
 * Array \u6709 Arrays
 * Executor \u6709 Executors
 * \u5DE5\u5177\u7C7B
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
 * 3\u5927\u65B9\u6CD5
 * Executors.newSingleThreadExecutor();
 * Executors.newFixedThreadPool(5);
 * Executors.newCachedThreadPool();
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo01</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u5355\u4E2A\u7EBF\u7A0B\u7684\u7EBF\u7A0B\u6C60</span>
        <span class="token keyword">final</span> <span class="token class-name">ExecutorService</span> executorService <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newSingleThreadExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                executorService<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; ok&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u7EBF\u7A0B\u6C60\u7528\u5B8C\uFF0C\u8981\u5173\u95ED\u7684</span>
            executorService<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>pool-1-thread-1 ok
pool-1-thread-1 ok
pool-1-thread-1 ok
pool-1-thread-1 ok
pool-1-thread-1 ok
pool-1-thread-1 ok
pool-1-thread-1 ok
pool-1-thread-1 ok
pool-1-thread-1 ok
pool-1-thread-1 ok
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Executors.newFixedThreadPool</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Collection \u6709 Collections
 * Array \u6709 Arrays
 * Executor \u6709 Executors
 * \u5DE5\u5177\u7C7B
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
 * 3\u5927\u65B9\u6CD5
 * Executors.newSingleThreadExecutor();
 * Executors.newFixedThreadPool(5);
 * Executors.newCachedThreadPool();
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo01</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u5355\u4E2A\u7EBF\u7A0B\u7684\u7EBF\u7A0B\u6C60</span>
        <span class="token comment">//final ExecutorService executorService = Executors.newSingleThreadExecutor();</span>
        <span class="token keyword">final</span> <span class="token class-name">ExecutorService</span> executorService <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newFixedThreadPool</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                executorService<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; ok&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u7EBF\u7A0B\u6C60\u7528\u5B8C\uFF0C\u8981\u5173\u95ED\u7684</span>
            executorService<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//// \u521B\u5EFA\u4E00\u4E2A\u56FA\u5B9A\u7684\u7EBF\u7A0B\u6C60\u7684\u5927\u5C0F</span>
        <span class="token comment">//Executors.newFixedThreadPool(5);</span>
        <span class="token comment">//</span>
        <span class="token comment">//// \u53EF\u4F38\u7F29\u7684\uFF0C\u9047\u5F3A\u5219\u5F3A\uFF0C\u9047\u5F31\u5219\u5F31</span>
        <span class="token comment">//Executors.newCachedThreadPool();</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>pool-1-thread-1 ok
pool-1-thread-3 ok
pool-1-thread-2 ok
pool-1-thread-5 ok
pool-1-thread-4 ok
pool-1-thread-5 ok
pool-1-thread-2 ok
pool-1-thread-1 ok
pool-1-thread-5 ok
pool-1-thread-4 ok
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Executors.newCachedThreadPool</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Collection \u6709 Collections
 * Array \u6709 Arrays
 * Executor \u6709 Executors
 * \u5DE5\u5177\u7C7B
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
 * 3\u5927\u65B9\u6CD5
 * Executors.newSingleThreadExecutor();
 * Executors.newFixedThreadPool(5);
 * Executors.newCachedThreadPool();
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo01</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u5355\u4E2A\u7EBF\u7A0B\u7684\u7EBF\u7A0B\u6C60</span>
        <span class="token comment">//final ExecutorService executorService = Executors.newSingleThreadExecutor();</span>
        <span class="token comment">//final ExecutorService executorService = Executors.newFixedThreadPool(5);</span>
        <span class="token keyword">final</span> <span class="token class-name">ExecutorService</span> executorService <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newCachedThreadPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                executorService<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; ok&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u7EBF\u7A0B\u6C60\u7528\u5B8C\uFF0C\u8981\u5173\u95ED\u7684</span>
            executorService<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//// \u521B\u5EFA\u4E00\u4E2A\u56FA\u5B9A\u7684\u7EBF\u7A0B\u6C60\u7684\u5927\u5C0F</span>
        <span class="token comment">//Executors.newFixedThreadPool(5);</span>
        <span class="token comment">//</span>
        <span class="token comment">//// \u53EF\u4F38\u7F29\u7684\uFF0C\u9047\u5F3A\u5219\u5F3A\uFF0C\u9047\u5F31\u5219\u5F31</span>
        <span class="token comment">//Executors.newCachedThreadPool();</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>pool-1-thread-1 ok
pool-1-thread-2 ok
pool-1-thread-3 ok
pool-1-thread-4 ok
pool-1-thread-4 ok
pool-1-thread-5 ok
pool-1-thread-3 ok
pool-1-thread-2 ok
pool-1-thread-3 ok
pool-1-thread-5 ok
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7EBF\u7A0B\u6C60\u7684\u4E03\u5927\u53C2\u6570"><a class="header-anchor" href="#\u7EBF\u7A0B\u6C60\u7684\u4E03\u5927\u53C2\u6570" aria-hidden="true">#</a> \u7EBF\u7A0B\u6C60\u7684\u4E03\u5927\u53C2\u6570</h3><p>\u6E90\u7801\u5206\u6790\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//newSingleThreadExecutor</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ExecutorService</span> <span class="token function">newSingleThreadExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">FinalizableDelegatedExecutorService</span>
        <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span>
                                <span class="token number">0L</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">,</span>
                                <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//newFixedThreadPool</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ExecutorService</span> <span class="token function">newFixedThreadPool</span><span class="token punctuation">(</span><span class="token keyword">int</span> nThreads<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span>nThreads<span class="token punctuation">,</span> nThreads<span class="token punctuation">,</span>
                                  <span class="token number">0L</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">,</span>
                                  <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//newCachedThreadPool</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ExecutorService</span> <span class="token function">newCachedThreadPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">,</span><span class="token comment">// \u7EA6\u7B49\u4E8E21\u4EBF</span>
                                  <span class="token number">60L</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">,</span>
                                  <span class="token keyword">new</span> <span class="token class-name">SynchronousQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u672C\u8D28\uFF1AThreadPoolExecutor</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token keyword">int</span> corePoolSize<span class="token punctuation">,</span> <span class="token comment">// \u6838\u5FC3\u7EBF\u7A0B\u6C60\u5927\u5C0F</span>
                          <span class="token keyword">int</span> maximumPoolSize<span class="token punctuation">,</span> <span class="token comment">// \u6700\u5927\u6838\u5FC3\u7EBF\u7A0B\u6C60\u5927\u5C0F</span>
                          <span class="token keyword">long</span> keepAliveTime<span class="token punctuation">,</span> <span class="token comment">// \u8D85\u65F6\u4E86\u6CA1\u6709\u8C03\u7528\u5C31\u4F1A\u88AB\u91CA\u653E</span>
                          <span class="token class-name">TimeUnit</span> unit<span class="token punctuation">,</span>  <span class="token comment">// \u8D85\u65F6\u7684\u5355\u4F4D</span>
                          <span class="token class-name">BlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span> workQueue<span class="token punctuation">,</span> <span class="token comment">// \u963B\u585E\u961F\u5217</span>
                          <span class="token class-name">ThreadFactory</span> threadFactory<span class="token punctuation">,</span> <span class="token comment">// \u7EBF\u7A0B\u5DE5\u5382\uFF0C\u521B\u5EFA\u7EBF\u7A0B</span>
                          <span class="token class-name">RejectedExecutionHandler</span> handler<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u62D2\u7EDD\u7B56\u7565</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>corePoolSize <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span>
        maximumPoolSize <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">||</span>
        maximumPoolSize <span class="token operator">&lt;</span> corePoolSize <span class="token operator">||</span>
        keepAliveTime <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>workQueue <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> threadFactory <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> handler <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>acc <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span>
            <span class="token keyword">null</span> <span class="token operator">:</span>
            <span class="token class-name">AccessController</span><span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>corePoolSize <span class="token operator">=</span> corePoolSize<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>maximumPoolSize <span class="token operator">=</span> maximumPoolSize<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>workQueue <span class="token operator">=</span> workQueue<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>keepAliveTime <span class="token operator">=</span> unit<span class="token punctuation">.</span><span class="token function">toNanos</span><span class="token punctuation">(</span>keepAliveTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>threadFactory <span class="token operator">=</span> threadFactory<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>handler <span class="token operator">=</span> handler<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+S+'" alt=""></p><p><img src="'+x+'" alt=""></p><p><img src="'+T+'" alt=""></p><h3 id="\u56DB\u79CD\u62D2\u7EDD\u7B56\u7565"><a class="header-anchor" href="#\u56DB\u79CD\u62D2\u7EDD\u7B56\u7565" aria-hidden="true">#</a> \u56DB\u79CD\u62D2\u7EDD\u7B56\u7565</h3><p><img src="'+j+`" alt=""></p><ol><li>ThreadPoolExecutor.AbortPolicy</li></ol><p>\u9ED8\u8BA4\u7684\u62D2\u7EDD\u7B56\u7565 \u94F6\u884C\u6EE1\u4E86\uFF0C\u4F46\u662F\u8FD8\u6709\u4EBA\u8FDB\u6765\uFF0C\u4E0D\u5904\u7406\u8FD9\u4E2A\u4EBA\u7684\u4E1A\u52A1\uFF0C\u629B\u51FA\u5F02\u5E38</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo01</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u5355\u4E2A\u7EBF\u7A0B\u7684\u7EBF\u7A0B\u6C60</span>
        <span class="token comment">//final ExecutorService executorService = Executors.newSingleThreadExecutor();</span>
        <span class="token comment">//final ExecutorService executorService = Executors.newFixedThreadPool(5);</span>
        <span class="token comment">//final ExecutorService executorService = Executors.newCachedThreadPool();</span>

        <span class="token comment">// \u81EA\u5B9A\u4E49\u7EBF\u7A0B\u6C60</span>
        <span class="token comment">// \u5DE5\u4F5C\u4E2D\u53EA\u4F1A\u7528 ThreadPoolExecutor \u4E0A\u9762\u4E09\u4E2A\u4E0D\u5B89\u5168</span>
        <span class="token keyword">final</span> <span class="token class-name">ExecutorService</span> executorService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span>
                <span class="token number">2</span><span class="token punctuation">,</span>
                <span class="token number">5</span><span class="token punctuation">,</span>
                <span class="token number">3</span><span class="token punctuation">,</span>
                <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">// \u5019\u5BA2\u533A\u7B49\u5F85\u7684\u961F\u5217</span>
                <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">defaultThreadFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// \u9ED8\u8BA4\u7684\u7EBF\u7A0B\u5DE5\u5382</span>
                <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor<span class="token punctuation">.</span>AbortPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u9ED8\u8BA4\u7684\u62D2\u7EDD\u7B56\u7565 \u94F6\u884C\u6EE1\u4E86\uFF0C\u4F46\u662F\u8FD8\u6709\u4EBA\u8FDB\u6765\uFF0C\u4E0D\u5904\u7406\u8FD9\u4E2A\u4EBA\u7684\u4E1A\u52A1\uFF0C\u629B\u51FA\u5F02\u5E38</span>
                <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token doc-comment comment">/**
             * \u5982\u679C\u662F2\u4E2A\u4EE5\u4E0B\uFF0C\u5C31\u662F\u542F\u52A8\u6838\u5FC3\u7684\u4E24\u4E2A\u7EBF\u7A0B
             * \u5982\u679C\u662F5\u4E2A\u4EE5\u4E0B\uFF0C\u5C31\u4F1A\u542F\u52A8\u6700\u5927\u7EBF\u7A0B
             * \u5982\u679C\u662F5\u4E2A\u4EE5\u4E0A\uFF0C8\u4E2A\u4EE5\u4E0B\uFF0C\u8D85\u8FC75\u4E2A\u7684\u5C31\u4F1A\u8FDB\u5165\u963B\u585E\u961F\u5217
             * \u4F7F\u7528\u4E86ThreadPoolExecutor.AbortPolicy\u8FD9\u4E2A\u7B56\u7565\uFF0C\u5982\u679C\u8D85\u8FC78\u4E2A\uFF0C\u5C31\u4F1A\u629B\u51FA\u5F02\u5E38
             */</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">9</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                executorService<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; ok&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u7EBF\u7A0B\u6C60\u7528\u5B8C\uFF0C\u8981\u5173\u95ED\u7684</span>
            executorService<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//// \u521B\u5EFA\u4E00\u4E2A\u56FA\u5B9A\u7684\u7EBF\u7A0B\u6C60\u7684\u5927\u5C0F</span>
        <span class="token comment">//Executors.newFixedThreadPool(5);</span>
        <span class="token comment">//</span>
        <span class="token comment">//// \u53EF\u4F38\u7F29\u7684\uFF0C\u9047\u5F3A\u5219\u5F3A\uFF0C\u9047\u5F31\u5219\u5F31</span>
        <span class="token comment">//Executors.newCachedThreadPool();</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>pool-1-thread-2 ok
pool-1-thread-4 ok
pool-1-thread-3 ok
pool-1-thread-1 ok
pool-1-thread-3 ok
pool-1-thread-4 ok
pool-1-thread-2 ok
pool-1-thread-5 ok
java.util.concurrent.RejectedExecutionException: Task com.example.juc.pool.Demo01<span class="token variable">$$</span>Lambda<span class="token variable">$1</span>/381259350@3feba861 rejected from java.util.concurrent.ThreadPoolExecutor@5b480cf9<span class="token punctuation">[</span>Running, pool size <span class="token operator">=</span> <span class="token number">5</span>, active threads <span class="token operator">=</span> <span class="token number">1</span>, queued tasks <span class="token operator">=</span> <span class="token number">0</span>, completed tasks <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">]</span>
	at java.util.concurrent.ThreadPoolExecutor<span class="token variable">$AbortPolicy</span>.rejectedExecution<span class="token punctuation">(</span>ThreadPoolExecutor.java:2063<span class="token punctuation">)</span>
	at java.util.concurrent.ThreadPoolExecutor.reject<span class="token punctuation">(</span>ThreadPoolExecutor.java:830<span class="token punctuation">)</span>
	at java.util.concurrent.ThreadPoolExecutor.execute<span class="token punctuation">(</span>ThreadPoolExecutor.java:1379<span class="token punctuation">)</span>
	at com.example.juc.pool.Demo01.main<span class="token punctuation">(</span>Demo01.java:43<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>ThreadPoolExecutor.CallerRunsPolicy</li></ol><p>\u54EA\u6765\u7684\u53BB\u54EA\u91CC main\u6765\u5230\u53EA\u80FD\u4F1A\u5230main\u7EBF\u7A0B\u6267\u884C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo02</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u5355\u4E2A\u7EBF\u7A0B\u7684\u7EBF\u7A0B\u6C60</span>
        <span class="token comment">//final ExecutorService executorService = Executors.newSingleThreadExecutor();</span>
        <span class="token comment">//final ExecutorService executorService = Executors.newFixedThreadPool(5);</span>
        <span class="token comment">//final ExecutorService executorService = Executors.newCachedThreadPool();</span>

        <span class="token comment">// \u81EA\u5B9A\u4E49\u7EBF\u7A0B\u6C60</span>
        <span class="token comment">// \u5DE5\u4F5C\u4E2D\u53EA\u4F1A\u7528 ThreadPoolExecutor \u4E0A\u9762\u4E09\u4E2A\u4E0D\u5B89\u5168</span>
        <span class="token keyword">final</span> <span class="token class-name">ExecutorService</span> executorService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span>
                <span class="token number">2</span><span class="token punctuation">,</span>
                <span class="token number">5</span><span class="token punctuation">,</span>
                <span class="token number">3</span><span class="token punctuation">,</span>
                <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">// \u5019\u5BA2\u533A\u7B49\u5F85\u7684\u961F\u5217</span>
                <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">defaultThreadFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// \u9ED8\u8BA4\u7684\u7EBF\u7A0B\u5DE5\u5382</span>
                <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor<span class="token punctuation">.</span>CallerRunsPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u94F6\u884C\u6EE1\u4E86\uFF0C\u4F46\u662F\u8FD8\u6709\u4EBA\u8FDB\u6765\uFF0C\u54EA\u6765\u7684\u53BB\u54EA\u91CC main\u6765\u5230\u53EA\u80FD\u4F1A\u5230main\u7EBF\u7A0B\u6267\u884C</span>
                <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token doc-comment comment">/**
             * \u5982\u679C\u662F2\u4E2A\u4EE5\u4E0B\uFF0C\u5C31\u662F\u542F\u52A8\u6838\u5FC3\u7684\u4E24\u4E2A\u7EBF\u7A0B
             * \u5982\u679C\u662F5\u4E2A\u4EE5\u4E0B\uFF0C\u5C31\u4F1A\u542F\u52A8\u6700\u5927\u7EBF\u7A0B
             * \u5982\u679C\u662F5\u4E2A\u4EE5\u4E0A\uFF0C8\u4E2A\u4EE5\u4E0B\uFF0C\u8D85\u8FC75\u4E2A\u7684\u5C31\u4F1A\u8FDB\u5165\u963B\u585E\u961F\u5217
             * \u5982\u679C\u8D85\u8FC78\u4E2A\uFF0C\u5C31\u4F1A\u629B\u51FA\u5F02\u5E38
             */</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">9</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                executorService<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; ok&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u7EBF\u7A0B\u6C60\u7528\u5B8C\uFF0C\u8981\u5173\u95ED\u7684</span>
            executorService<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>pool-1-thread-1 ok
pool-1-thread-3 ok
main ok <span class="token comment">## main\u7EBF\u7A0B\u8C03\u7528\u7684\u7EBF\u7A0B\u6C60\u7EBF\u7A0B\uFF0C\u53EA\u80FD\u4F1A\u5230mian\u7EBF\u7A0B\u6267\u884C</span>
pool-1-thread-2 ok
pool-1-thread-5 ok
pool-1-thread-3 ok
pool-1-thread-1 ok
pool-1-thread-4 ok
pool-1-thread-5 ok
pool-1-thread-2 ok
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>ThreadPoolExecutor.DiscardPolicy</li></ol><p>\u4E0D\u4F1A\u629B\u51FA\u5F02\u5E38\uFF0C\u4E22\u6389\u4EFB\u52A1\uFF0C\u4EFB\u52A1\u4E0D\u4F1A\u6267\u884C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo03</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u5355\u4E2A\u7EBF\u7A0B\u7684\u7EBF\u7A0B\u6C60</span>
        <span class="token comment">//final ExecutorService executorService = Executors.newSingleThreadExecutor();</span>
        <span class="token comment">//final ExecutorService executorService = Executors.newFixedThreadPool(5);</span>
        <span class="token comment">//final ExecutorService executorService = Executors.newCachedThreadPool();</span>

        <span class="token comment">// \u81EA\u5B9A\u4E49\u7EBF\u7A0B\u6C60</span>
        <span class="token comment">// \u5DE5\u4F5C\u4E2D\u53EA\u4F1A\u7528 ThreadPoolExecutor \u4E0A\u9762\u4E09\u4E2A\u4E0D\u5B89\u5168</span>
        <span class="token keyword">final</span> <span class="token class-name">ExecutorService</span> executorService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span>
                <span class="token number">2</span><span class="token punctuation">,</span>
                <span class="token number">5</span><span class="token punctuation">,</span>
                <span class="token number">3</span><span class="token punctuation">,</span>
                <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">// \u5019\u5BA2\u533A\u7B49\u5F85\u7684\u961F\u5217</span>
                <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">defaultThreadFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// \u9ED8\u8BA4\u7684\u7EBF\u7A0B\u5DE5\u5382</span>
                <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor<span class="token punctuation">.</span>DiscardPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u94F6\u884C\u6EE1\u4E86\uFF0C\u4F46\u662F\u8FD8\u6709\u4EBA\u8FDB\u6765\uFF0C\u4E0D\u4F1A\u629B\u51FA\u5F02\u5E38\uFF0C\u4E22\u6389\u4EFB\u52A1\uFF0C\u4EFB\u52A1\u4E0D\u4F1A\u6267\u884C</span>
                <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token doc-comment comment">/**
             * \u5982\u679C\u662F2\u4E2A\u4EE5\u4E0B\uFF0C\u5C31\u662F\u542F\u52A8\u6838\u5FC3\u7684\u4E24\u4E2A\u7EBF\u7A0B
             * \u5982\u679C\u662F5\u4E2A\u4EE5\u4E0B\uFF0C\u5C31\u4F1A\u542F\u52A8\u6700\u5927\u7EBF\u7A0B
             * \u5982\u679C\u662F5\u4E2A\u4EE5\u4E0A\uFF0C8\u4E2A\u4EE5\u4E0B\uFF0C\u8D85\u8FC75\u4E2A\u7684\u5C31\u4F1A\u8FDB\u5165\u963B\u585E\u961F\u5217
             * \u5982\u679C\u8D85\u8FC78\u4E2A\uFF0C\u5C31\u4F1A\u629B\u51FA\u5F02\u5E38
             */</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">9</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                executorService<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; ok&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u7EBF\u7A0B\u6C60\u7528\u5B8C\uFF0C\u8981\u5173\u95ED\u7684</span>
            executorService<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>ThreadPoolExecutor.CallerRunsPolicy</li></ol><p>\u961F\u5217\u6EE1\u4E86\uFF0C\u5C1D\u8BD5\u548C\u6700\u65E9\u7684\u7ADE\u4E89\uFF0C\u5982\u679C\u7ADE\u4E89\u5931\u8D25\u4E86\u5C31\u4E22\u6389\uFF0C\u7ADE\u4E89\u6210\u529F\u4E86\u5C31\u6267\u884C\uFF0C\u4E0D\u4F1A\u629B\u51FA\u5F02\u5E38</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo02</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u5355\u4E2A\u7EBF\u7A0B\u7684\u7EBF\u7A0B\u6C60</span>
        <span class="token comment">//final ExecutorService executorService = Executors.newSingleThreadExecutor();</span>
        <span class="token comment">//final ExecutorService executorService = Executors.newFixedThreadPool(5);</span>
        <span class="token comment">//final ExecutorService executorService = Executors.newCachedThreadPool();</span>

        <span class="token comment">// \u81EA\u5B9A\u4E49\u7EBF\u7A0B\u6C60</span>
        <span class="token comment">// \u5DE5\u4F5C\u4E2D\u53EA\u4F1A\u7528 ThreadPoolExecutor \u4E0A\u9762\u4E09\u4E2A\u4E0D\u5B89\u5168</span>
        <span class="token keyword">final</span> <span class="token class-name">ExecutorService</span> executorService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span>
                <span class="token number">2</span><span class="token punctuation">,</span>
                <span class="token number">5</span><span class="token punctuation">,</span>
                <span class="token number">3</span><span class="token punctuation">,</span>
                <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">// \u5019\u5BA2\u533A\u7B49\u5F85\u7684\u961F\u5217</span>
                <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">defaultThreadFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// \u9ED8\u8BA4\u7684\u7EBF\u7A0B\u5DE5\u5382</span>
                <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor<span class="token punctuation">.</span>CallerRunsPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u961F\u5217\u6EE1\u4E86\uFF0C\u5C1D\u8BD5\u548C\u6700\u65E9\u7684\u7ADE\u4E89\uFF0C\u5982\u679C\u7ADE\u4E89\u5931\u8D25\u4E86\u5C31\u4E22\u6389\uFF0C\u7ADE\u4E89\u6210\u529F\u4E86\u5C31\u6267\u884C\uFF0C\u4E0D\u4F1A\u629B\u51FA\u5F02\u5E38</span>
                <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token doc-comment comment">/**
             * \u5982\u679C\u662F2\u4E2A\u4EE5\u4E0B\uFF0C\u5C31\u662F\u542F\u52A8\u6838\u5FC3\u7684\u4E24\u4E2A\u7EBF\u7A0B
             * \u5982\u679C\u662F5\u4E2A\u4EE5\u4E0B\uFF0C\u5C31\u4F1A\u542F\u52A8\u6700\u5927\u7EBF\u7A0B
             * \u5982\u679C\u662F5\u4E2A\u4EE5\u4E0A\uFF0C8\u4E2A\u4EE5\u4E0B\uFF0C\u8D85\u8FC75\u4E2A\u7684\u5C31\u4F1A\u8FDB\u5165\u963B\u585E\u961F\u5217
             * \u5982\u679C\u8D85\u8FC78\u4E2A\uFF0C\u5C31\u4F1A\u629B\u51FA\u5F02\u5E38
             */</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">9</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                executorService<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; ok&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u7EBF\u7A0B\u6C60\u7528\u5B8C\uFF0C\u8981\u5173\u95ED\u7684</span>
            executorService<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6700\u5927\u7EBF\u7A0B\u5E94\u8BE5\u5982\u4F55\u5B9A\u4E49"><a class="header-anchor" href="#\u6700\u5927\u7EBF\u7A0B\u5E94\u8BE5\u5982\u4F55\u5B9A\u4E49" aria-hidden="true">#</a> \u6700\u5927\u7EBF\u7A0B\u5E94\u8BE5\u5982\u4F55\u5B9A\u4E49</h3><ol><li>CPU \u5BC6\u96C6\u578B</li></ol><p>\u770B\u7535\u8111\u53EF\u4EE5\u5E76\u884C\u591A\u5C11\u6761\u7EBF\u7A0B \u51E0\u6838CPU\u5C31\u662F\u51E0\u4E2A\u7EBF\u7A0B</p><p><code>Runtime.getRuntime().availableProcessors()</code>\u53EF\u4EE5\u83B7\u53D6\u5230\u662F\u51E0\u6838CPU</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token class-name">ExecutorService</span> executorService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span>
            <span class="token number">2</span><span class="token punctuation">,</span>
            <span class="token class-name">Runtime</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">availableProcessors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token number">3</span><span class="token punctuation">,</span>
            <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">// \u5019\u5BA2\u533A\u7B49\u5F85\u7684\u961F\u5217</span>
            <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">defaultThreadFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// \u9ED8\u8BA4\u7684\u7EBF\u7A0B\u5DE5\u5382</span>
            <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor<span class="token punctuation">.</span>DiscardOldestPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u9ED8\u8BA4\u7684\u62D2\u7EDD\u7B56\u7565 \u94F6\u884C\u6EE1\u4E86\uFF0C\u4F46\u662F\u8FD8\u6709\u4EBA\u8FDB\u6765\uFF0C\u4E0D\u4F1A\u629B\u51FA\u5F02\u5E38\uFF0C\u4E22\u6389\u4EFB\u52A1\uFF0C\u4EFB\u52A1\u4E0D\u4F1A\u6267\u884C</span>
            <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>IO \u5BC6\u96C6\u578B</li></ol><p>\u5224\u65AD\u4F60\u7A0B\u5E8F\u4E2D\u5341\u5206\u8017IO\u7684\u7EBF\u7A0B\u6709\u591A\u5C11\u4E2A\uFF0C\u5728\u8FD9\u4E2A\u57FA\u7840\u4E0A\u8BBE\u7F6E\uFF0C\u4E00\u822C\u662F2\u500D</p><p>\u7A0B\u5E8F\u670915\u4E2A\u5927\u578B\u4EFB\u52A1\uFF0CIO\u5341\u5206\u5360\u7528\u8D44\u6E90\uFF0C\u6240\u4EE5\u81F3\u5C11\u9700\u898115\u4E2A\u7EBF\u7A0B\u53BB\u5904\u7406</p><h2 id="\u56DB\u5927\u51FD\u6570\u5F0F\u63A5\u53E3-\u91CD\u70B9\u3001\u7B80\u5355\u3001\u5FC5\u987B\u638C\u63E1"><a class="header-anchor" href="#\u56DB\u5927\u51FD\u6570\u5F0F\u63A5\u53E3-\u91CD\u70B9\u3001\u7B80\u5355\u3001\u5FC5\u987B\u638C\u63E1" aria-hidden="true">#</a> \u56DB\u5927\u51FD\u6570\u5F0F\u63A5\u53E3\uFF08\u91CD\u70B9\u3001\u7B80\u5355\u3001\u5FC5\u987B\u638C\u63E1\uFF09</h2><p>\u65B0\u65F6\u4EE3\u7684\u7A0B\u5E8F\u5458\uFF1Alambda\u8868\u8FBE\u5F0F\u3001\u94FE\u5F0F\u7F16\u7A0B\u3001\u51FD\u6570\u5F0F\u63A5\u53E3\u3001Stream\u6D41\u5F0F\u8BA1\u7B97</p><h3 id="\u51FD\u6570\u5F0F\u63A5\u53E3"><a class="header-anchor" href="#\u51FD\u6570\u5F0F\u63A5\u53E3" aria-hidden="true">#</a> \u51FD\u6570\u5F0F\u63A5\u53E3</h3><p>\u53EA\u6709\u4E00\u4E2A\u65B9\u6CD5\u7684\u63A5\u53E3</p><p>\u6700\u7ECF\u5178\u7684\u5C31\u662F\uFF1ARunnable\uFF0C\u8D85\u7EA7\u591A\uFF0C</p><p>\u7B80\u5316\u7F16\u7A0B\u6A21\u578B\uFF0C\u5728\u65B0\u7248\u672C\u7684\u6846\u67B6\u5E95\u5C42\u5927\u91CF\u5E94\u7528</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@FunctionalInterface</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * When an object implementing interface <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token class-name">Runnable</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span> is used
     * to create a thread, starting the thread causes the object&#39;s
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java">run</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span> method to be called in that separately executing
     * thread.
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
     * The general contract of the method <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java">run</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span> is that it may
     * take any action whatsoever.
     *
     * <span class="token keyword">@see</span>     <span class="token reference"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span><span class="token class-name">Thread</span><span class="token punctuation">#</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>forEach(\u6D88\u8D39\u8005\u7C7B\u7684\u51FD\u6570\u5F0F\u63A5\u53E3)</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> action<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span>action<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token keyword">int</span> expectedModCount <span class="token operator">=</span> modCount<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">final</span> <span class="token class-name">E</span><span class="token punctuation">[</span><span class="token punctuation">]</span> elementData <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">E</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span>elementData<span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token keyword">int</span> size <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> modCount <span class="token operator">==</span> expectedModCount <span class="token operator">&amp;&amp;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        action<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span>elementData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>modCount <span class="token operator">!=</span> expectedModCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentModificationException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@FunctionalInterface</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56DB\u5927\u539F\u751F\u7684\u51FD\u6570\u5F0F\u63A5\u53E3</p><p><img src="`+C+'" alt=""></p><h3 id="function"><a class="header-anchor" href="#function" aria-hidden="true">#</a> Function</h3><p><img src="'+q+`" alt=""></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Function\u51FD\u6570\u578B\u63A5\u53E3
 * \u6709\u4E00\u4E2A\u8F93\u5165\u53C2\u6570\uFF0C\u6709\u4E00\u4E2A\u8F93\u51FA\u53C2\u6570
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo01</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token doc-comment comment">/**
         * \u5DE5\u5177\u7C7B\uFF1A\u8F93\u51FA\u8F93\u5165\u7684\u503C
         */</span>
        <span class="token keyword">final</span> <span class="token class-name">Function</span> function1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> s<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>function1<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token string">&quot;dadfaf&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token doc-comment comment">/**
         * \u5DE5\u5177\u7C7B\uFF1A\u8F93\u51FA\u8F93\u5165\u7684\u503C
         * \u6539\u6210lambda\u8868\u8FBE\u5F0F
         */</span>
        <span class="token keyword">final</span> <span class="token class-name">Function</span> function2 <span class="token operator">=</span> <span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> str<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>function2<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token string">&quot;aadsfs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="predicate"><a class="header-anchor" href="#predicate" aria-hidden="true">#</a> Predicate</h3><p><img src="`+A+`" alt=""></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u65AD\u5B9A\u578B\u63A5\u53E3\uFF1A\u6709\u4E00\u4E2A\u8F93\u5165\u53C2\u6570\uFF0C\u8FD4\u56DE\u503C\u53EA\u80FD\u662F\u5E03\u5C14\u503C
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo02</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token doc-comment comment">/**
         * \u5224\u65AD\u5B57\u7B26\u4E32\u662F\u5426\u4E3A\u7A7A
         */</span>
        <span class="token keyword">final</span> <span class="token class-name">Predicate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> predicate1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Predicate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>predicate1<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;12323&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token doc-comment comment">/**
         * \u5224\u65AD\u5B57\u7B26\u4E32\u662F\u5426\u4E3A\u7A7A
         * lambda\u8868\u8FBE\u5F0F
         */</span>
        <span class="token keyword">final</span> <span class="token class-name">Predicate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> predicate2 <span class="token operator">=</span> <span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>predicate2<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;12323&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="consumer"><a class="header-anchor" href="#consumer" aria-hidden="true">#</a> Consumer</h3><p>\u6D88\u8D39\u578B\u63A5\u53E3</p><p><img src="`+E+`" alt=""></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u6D88\u8D39\u578B\u63A5\u53E3\uFF0C\u53EA\u6709\u8F93\u5165\uFF0C\u6CA1\u6709\u8FD4\u56DE\u503C
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo03</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token doc-comment comment">/**
         * \u6253\u5370\u5B57\u7B26\u4E32
         */</span>
        <span class="token keyword">final</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> stringConsumer1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        stringConsumer1<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token string">&quot;safafafa&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token doc-comment comment">/**
         * lambda\u8868\u8FBE\u5F0F\u65B9\u5F0F
         */</span>
        <span class="token keyword">final</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> stringConsumer2 <span class="token operator">=</span> <span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        stringConsumer2<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token string">&quot;safafafa&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="supplier"><a class="header-anchor" href="#supplier" aria-hidden="true">#</a> Supplier</h3><p>\u4F9B\u7ED9\u578B\u63A5\u53E3\uFF1A\u6CA1\u6709\u53C2\u6570\u53EA\u6709\u8FD4\u56DE\u503C</p><p><img src="`+B+`" alt=""></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u4F9B\u7ED9\u578B\u63A5\u53E3\uFF1A\u6CA1\u6709\u53C2\u6570\u53EA\u6709\u8FD4\u56DE\u503C
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo04</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">Supplier</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> stringSupplier1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Supplier</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;get()&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token number">1024</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>stringSupplier1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token doc-comment comment">/**
         * lambda\u8868\u8FBE\u5F0F
         */</span>
        <span class="token keyword">final</span> <span class="token class-name">Supplier</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> stringSupplier2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;get()&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token number">1024</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>stringSupplier2<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u603B\u7ED3\u56DB\u4E2A\u51FD\u6570\u7F16\u7A0B\u63A5\u53E3"><a class="header-anchor" href="#\u603B\u7ED3\u56DB\u4E2A\u51FD\u6570\u7F16\u7A0B\u63A5\u53E3" aria-hidden="true">#</a> \u603B\u7ED3\u56DB\u4E2A\u51FD\u6570\u7F16\u7A0B\u63A5\u53E3</h3><p>\u5728\u4F20\u7EDF\u7684<strong>\u6CDB\u578B\u3001\u679A\u4E3E\u3001\u53CD\u5C04</strong>\u7684\u57FA\u7840\u4E0A\uFF0C\u589E\u52A0<strong>lambda\u8868\u8FBE\u5F0F\u3001\u94FE\u5F0F\u7F16\u7A0B\u3001\u51FD\u6570\u5F0F\u7F16\u7A0B\u3001Stream\u6D41\u5F0F\u8BA1\u7B97</strong></p><p>\u7B80\u5316\u7F16\u7A0B\u6A21\u578B</p><h2 id="stream\u6D41\u5F0F\u8BA1\u7B97"><a class="header-anchor" href="#stream\u6D41\u5F0F\u8BA1\u7B97" aria-hidden="true">#</a> Stream\u6D41\u5F0F\u8BA1\u7B97</h2><h3 id="\u4EC0\u4E48\u662Fstream\u6D41\u5F0F\u8BA1\u7B97"><a class="header-anchor" href="#\u4EC0\u4E48\u662Fstream\u6D41\u5F0F\u8BA1\u7B97" aria-hidden="true">#</a> \u4EC0\u4E48\u662FStream\u6D41\u5F0F\u8BA1\u7B97</h3><p>\u5927\u6570\u636E\u65F6\u4EE3\uFF1A\u5B58\u50A8+\u8BA1\u7B97</p><p>\u5B58\u50A8\uFF1A\u96C6\u5408\u6846\u67B6\u3001mysql\u672C\u8D28\u5C31\u662F\u5B58\u50A8\u4E1C\u897F\u7684</p><p>\u8BA1\u7B97\u90FD\u5E94\u8BE5\u4EA4\u7ED9\u6D41\u6765\u64CD\u4F5C</p><h3 id="package-java-util-stream"><a class="header-anchor" href="#package-java-util-stream" aria-hidden="true">#</a> Package java.util.stream</h3><p><img src="`+z+`" alt=""></p><h3 id="\u4F7F\u7528"><a class="header-anchor" href="#\u4F7F\u7528" aria-hidden="true">#</a> \u4F7F\u7528</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u9898\u76EE\u8981\u6C42\uFF1A\u4E00\u5206\u4E4B\u5185\u5B8C\u6210\u6B64\u9898\uFF0C\u53EA\u80FD\u7528\u4E00\u884C\u4EE3\u7801\u5B9E\u73B0
 * \u73B0\u5728\u67095\u4E2A\u7528\u6237\uFF0C\u7B5B\u9009\uFF1A
 * 1 ID\u5FC5\u987B\u662F\u5076\u6570
 * 2 \u5E74\u9F84\u5FC5\u987B\u662F\u5927\u4E8E23\u5C81
 * 3 \u7528\u6237\u540D\u8F6C\u4E3A\u5927\u5199\u5B57\u6BCD
 * 4 \u7528\u6237\u540D\u5B57\u5012\u7740\u6392\u5E8F
 * 5 \u53EA\u8F93\u51FA\u4E00\u4E2A\u7528\u6237
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">User</span> user1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">User</span> user2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">User</span> user3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">User</span> user4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&quot;d&quot;</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">User</span> user5 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&quot;e&quot;</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">User</span> user6 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token string">&quot;f&quot;</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u96C6\u5408\u5C31\u662F\u5B58\u50A8\u7684</span>
        <span class="token keyword">final</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>user1<span class="token punctuation">,</span> user2<span class="token punctuation">,</span> user3<span class="token punctuation">,</span> user4<span class="token punctuation">,</span> user5<span class="token punctuation">,</span> user6<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u8BA1\u7B97\u4EA4\u7ED9Stream\u6D41</span>
        list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token comment">// ID\u5FC5\u987B\u662F\u5076\u6570</span>
                <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>u <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> u<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token comment">// \u5E74\u9F84\u5FC5\u987B\u662F\u5927\u4E8E23\u5C81</span>
                <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>u <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> u<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">23</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token comment">// \u7528\u6237\u540D\u8F6C\u4E3A\u5927\u5199\u5B57\u6BCD</span>
                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>u <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> u<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token comment">// \u7528\u6237\u540D\u5B57\u5012\u7740\u6392\u5E8F</span>
                <span class="token punctuation">.</span><span class="token function">sorted</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> b<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token comment">// \u53EA\u8F93\u51FA\u4E00\u4E2A\u7528\u6237</span>
                <span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5206\u652F\u5408\u5E76-forkjoin"><a class="header-anchor" href="#\u5206\u652F\u5408\u5E76-forkjoin" aria-hidden="true">#</a> \u5206\u652F\u5408\u5E76 ForkJoin</h2><h3 id="\u4EC0\u4E48\u662Fforkjoin"><a class="header-anchor" href="#\u4EC0\u4E48\u662Fforkjoin" aria-hidden="true">#</a> \u4EC0\u4E48\u662FForkJoin</h3><p>ForkJoin\u5728JDK1.7\u4E4B\u540E\u51FA\u73B0\u7684\uFF0C\u5E76\u884C\u6267\u884C\u4EFB\u52A1\uFF0C\u63D0\u9AD8\u6548\u7387\u3002\u5927\u6570\u636E\u91CF</p><p>\u5927\u6570\u636E\uFF1AMap Reduce\uFF08\u628A\u5927\u4EFB\u52A1\u62C6\u5206\u6210\u5C0F\u4EFB\u52A1\uFF09</p><p><img src="`+L+'" alt=""></p><h3 id="forkjoin\u7279\u70B9"><a class="header-anchor" href="#forkjoin\u7279\u70B9" aria-hidden="true">#</a> ForkJoin\u7279\u70B9</h3><p>\u5DE5\u4F5C\u7A83\u53D6</p><p><img src="'+M+'" alt=""></p><p>A\u3001B\u4E24\u4E2A\u7EBF\u7A0B\u6267\u884C\u4EFB\u52A1\uFF0CB\u4EFB\u52A1\u6267\u884C\u5B8C\u4E86\uFF0C\u5C31\u4F1A\u7A83\u53D6A\u4F4D\u5B8C\u6210\u7684\u4EFB\u52A1\u8FC7\u6765\u6267\u884C\uFF0C\u4E0D\u8BA9B\u7EBF\u7A0B\u7B49\u5F85\u3002</p><p>\u8FD9\u4E2A\u91CC\u9762\u7EF4\u62A4\u7684\u90FD\u662F\u53CC\u7AEF\u961F\u5217\uFF08\u53EF\u4EE5\u4ECE\u4E0A\u9762\u53D6\uFF0C\u4E5F\u53EF\u4EE5\u4ECE\u4E0B\u9762\u53D6\uFF09</p><h3 id="forkjoin\u4F7F\u7528"><a class="header-anchor" href="#forkjoin\u4F7F\u7528" aria-hidden="true">#</a> ForkJoin\u4F7F\u7528</h3><p>java.util.concurrent.ForkJoinPool \u7684\u4E24\u4E2A\u63A5\u53E3</p><ul><li>Executor</li><li>ExecutorService</li></ul><p>\u6267\u884C</p><p><img src="'+I+'" alt=""></p><p><img src="'+D+`" alt=""></p><p>ForkJoinDemo \u6C42\u548C\u8BA1\u7B97\u4EFB\u52A1</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u6C42\u548C\u8BA1\u7B97\u7684\u4EFB\u52A1
 * 3000 6000(ForkJoin) 9000(Stream\u5E76\u884C\u6D41)
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
 * \u5982\u4F55\u4F7F\u7528forkjoin
 * 1 forkjoinpool \u901A\u8FC7\u5B83\u6765\u6267\u884C
 * 2 \u8BA1\u7B97\u4EFB\u52A1 forkjoinpool.execute(ForkJoinTask\\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>\\?\\</span><span class="token punctuation">&gt;</span></span> task)
 * 3 \u8BA1\u7B97\u7C7B\u7EE7\u627FRecursiveTask
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ForkJoinDemo</span> <span class="token keyword">extends</span> <span class="token class-name">RecursiveTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">long</span> start<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">long</span> end<span class="token punctuation">;</span>

    <span class="token comment">// \u4E34\u754C\u503C</span>
    <span class="token keyword">private</span> <span class="token keyword">long</span> temp <span class="token operator">=</span> <span class="token number">10000L</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">ForkJoinDemo</span><span class="token punctuation">(</span><span class="token keyword">long</span> start<span class="token punctuation">,</span> <span class="token keyword">long</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>start <span class="token operator">=</span> start<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>end <span class="token operator">=</span> end<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u5E76\u884C\u8BA1\u7B97\u7684\u65B9\u6CD5
     *
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token class-name">Long</span> <span class="token function">compute</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>end <span class="token operator">-</span> start <span class="token operator">&lt;</span> temp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5982\u679C\u5C0F\u4E8E\u4E34\u754C\u503C\uFF0C\u6B63\u5E38\u8BA1\u7B97</span>
            <span class="token keyword">long</span> sum <span class="token operator">=</span> <span class="token number">0L</span><span class="token punctuation">;</span>
            <span class="token comment">//\u8BA1\u7B9710\u4EBF\u7684\u6C42\u548C</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">long</span> i <span class="token operator">=</span> start<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> end<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                sum <span class="token operator">+=</span> i<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// \u50CF\u9012\u5F52</span>
            <span class="token comment">// \u5982\u679C\u6C42\u548C\u91CF\u8D85\u8FC7temp\u89C4\u5B9A\u7684\u503C\uFF0C\u5C31\u4F7F\u7528\u5206\u652F\u5408\u5E76\u8FD0\u7B97</span>
            <span class="token keyword">final</span> <span class="token keyword">long</span> middle <span class="token operator">=</span> <span class="token punctuation">(</span>start <span class="token operator">+</span> end<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// \u4E2D\u95F4\u503C</span>
            <span class="token keyword">final</span> <span class="token class-name">ForkJoinDemo</span> task1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ForkJoinDemo</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> middle<span class="token punctuation">)</span><span class="token punctuation">;</span>
            task1<span class="token punctuation">.</span><span class="token function">fork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u62C6\u5206\u4EFB\u52A1\uFF0C\u628A\u4EFB\u52A1\u538B\u5165\u7EBF\u7A0B\u961F\u5217</span>

            <span class="token keyword">final</span> <span class="token class-name">ForkJoinDemo</span> task2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ForkJoinDemo</span><span class="token punctuation">(</span>middle<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>
            task2<span class="token punctuation">.</span><span class="token function">fork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u62C6\u5206\u4EFB\u52A1\uFF0C\u628A\u4EFB\u52A1\u538B\u5165\u7EBF\u7A0B\u961F\u5217</span>

            <span class="token keyword">return</span> task1<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> task2<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u6C47\u603B\u8BA1\u7B97\u7ED3\u679C</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6D4B\u8BD5\u7C7B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 3000 6000(ForkJoin) 9000(Stream\u5E76\u884C\u6D41)
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token comment">//test01(); // sum = 499999999500000000\uFF0C\u65F6\u95F4\uFF1A5998</span>

        <span class="token comment">//test02(); // sum = 500065535999828224\uFF0C\u65F6\u95F4\uFF1A138</span>

        <span class="token function">test03</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// sum = 500000000500000000\uFF0C\u65F6\u95F4\uFF1A175</span>

    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u666E\u901A\u7A0B\u5E8F\u5458
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test01</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token keyword">long</span> start <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Long</span> sum <span class="token operator">=</span> <span class="token number">0L</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Long</span> i <span class="token operator">=</span> <span class="token number">1L</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10_0000_0000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            sum <span class="token operator">+=</span> i<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">final</span> <span class="token keyword">long</span> end <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;sum = &quot;</span> <span class="token operator">+</span> sum <span class="token operator">+</span> <span class="token string">&quot;\uFF0C\u65F6\u95F4\uFF1A&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>end <span class="token operator">-</span> start<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u4F1A\u4F7F\u7528ForkJoin
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test02</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ExecutionException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token keyword">long</span> start <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">final</span> <span class="token class-name">ForkJoinPool</span> forkJoinPool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ForkJoinPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">ForkJoinTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> task <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ForkJoinDemo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10_0000_0000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">ForkJoinTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> submit <span class="token operator">=</span> forkJoinPool<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// execute\u662F\u540C\u6B65\u7684\uFF0C submit\u63D0\u4EA4\u7684\u4EFB\u52A1\u662F\u5F02\u6B65\u7684</span>

        <span class="token keyword">final</span> <span class="token class-name">Long</span> sum <span class="token operator">=</span> submit<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">final</span> <span class="token keyword">long</span> end <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;sum = &quot;</span> <span class="token operator">+</span> sum <span class="token operator">+</span> <span class="token string">&quot;\uFF0C\u65F6\u95F4\uFF1A&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>end <span class="token operator">-</span> start<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Stream \u5E76\u884C\u6D41
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test03</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token keyword">long</span> start <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//IntStream</span>
        <span class="token comment">//DoubleStream</span>

        <span class="token comment">// range \u4E0D\u5305\u542B</span>
        <span class="token comment">// rangeClosed \u5305\u542B (]</span>
        <span class="token keyword">final</span> <span class="token keyword">long</span> sum <span class="token operator">=</span> <span class="token class-name">LongStream</span><span class="token punctuation">.</span><span class="token function">rangeClosed</span><span class="token punctuation">(</span><span class="token number">0L</span><span class="token punctuation">,</span> <span class="token number">10_0000_0000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parallel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token class-name">Long</span><span class="token operator">::</span><span class="token function">sum</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">final</span> <span class="token keyword">long</span> end <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;sum = &quot;</span> <span class="token operator">+</span> sum <span class="token operator">+</span> <span class="token string">&quot;\uFF0C\u65F6\u95F4\uFF1A&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>end <span class="token operator">-</span> start<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5F02\u6B65\u56DE\u8C03"><a class="header-anchor" href="#\u5F02\u6B65\u56DE\u8C03" aria-hidden="true">#</a> \u5F02\u6B65\u56DE\u8C03</h2><p>Future \u8BBE\u8BA1\u7684\u521D\u8877\uFF1A\u5BF9\u5C06\u6765\u7684\u67D0\u4E2A\u65F6\u95F4\u7684\u7ED3\u679C\u8FDB\u884C\u5EFA\u6A21</p><p><img src="`+N+`" alt=""></p><blockquote><p>A Future that may be explicitly completed (setting its value and status), and may be used as a CompletionStage, supporting dependent functions and actions that trigger upon its completion. When two or more threads attempt to complete, completeExceptionally, or cancel a CompletableFuture, only one of them succeeds. \u53EF\u4EE5\u663E\u5F0F\u5B8C\u6210\u7684 Future\uFF08\u8BBE\u7F6E\u5176\u503C\u548C\u72B6\u6001\uFF09\uFF0C\u5E76\u4E14\u53EF\u4EE5\u7528\u4F5C CompletionStage\uFF0C\u652F\u6301\u5728\u5B8C\u6210\u65F6\u89E6\u53D1\u7684\u4F9D\u8D56\u529F\u80FD\u548C\u64CD\u4F5C\u3002 \u5F53\u4E24\u4E2A\u6216\u591A\u4E2A\u7EBF\u7A0B\u5C1D\u8BD5\u5B8C\u6210\u3001\u5B8C\u6210\u5F02\u5E38\u6216\u53D6\u6D88 CompletableFuture \u65F6\uFF0C\u53EA\u6709\u5176\u4E2D\u4E00\u4E2A\u6210\u529F\u3002</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u5F02\u6B65\u8C03\u7528
 * \u5F02\u6B65\u6267\u884C
 * \u6210\u529F\u56DE\u8C03
 * \u5931\u8D25\u56DE\u8C03
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo01</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ExecutionException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token comment">//test01();</span>

        <span class="token function">test02</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u6709\u8FD4\u56DE\u503C\u7684\u5F02\u6B65\u8C03\u7528
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">InterruptedException</span></span>
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">ExecutionException</span></span>
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test02</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">,</span> <span class="token class-name">ExecutionException</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u6709\u8FD4\u56DE\u7ED3\u679C\u7684\u5F02\u6B65\u56DE\u8C03</span>
        <span class="token comment">// ajax \u4E00\u822C\u4F1A\u6709success failed</span>
        <span class="token keyword">final</span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> objectCompletableFuture <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//int i = 10 / 0;// \u5982\u679C\u51FA\u73B0\u5F02\u5E38\uFF0C\u5C31\u4F1A\u56DE\u8C03\u4E3A233</span>
            <span class="token keyword">return</span> <span class="token number">1024</span><span class="token punctuation">;</span><span class="token comment">// \u6210\u529F\u7684\u8FD4\u56DE\u503C</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">final</span> <span class="token class-name">Integer</span> integer <span class="token operator">=</span> objectCompletableFuture<span class="token punctuation">.</span><span class="token function">whenComplete</span><span class="token punctuation">(</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> u<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u83B7\u53D6\u5F97\u5230\u7684\u6B63\u5E38\u7684\u8FD4\u56DE\u7ED3\u679C</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exceptionally</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token number">233</span><span class="token punctuation">;</span><span class="token comment">// \u5931\u8D25\u7684\u8FD4\u56DE\u503C</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u6CA1\u6709\u8FD4\u56DE\u503C\u7684\u5F02\u6B65\u56DE\u8C03
     *
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">InterruptedException</span></span>
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">ExecutionException</span></span>
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test01</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">,</span> <span class="token class-name">ExecutionException</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u53D1\u8D77\u4E00\u4E2A\u8BF7\u6C42 \u6CA1\u6709\u8FD4\u56DE\u503C\u7684</span>
        <span class="token keyword">final</span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> objectCompletableFuture <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">runAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;1111&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        objectCompletableFuture<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u963B\u585E\u83B7\u53D6\u6267\u884C\u7ED3\u679C</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="jmm"><a class="header-anchor" href="#jmm" aria-hidden="true">#</a> JMM</h2><p>\u8BF7\u4F60\u8C08\u8C08\u4F60\u5BF9volatile\u7684\u7406\u89E3</p><p>volatile\u662FJava\u865A\u62DF\u673A\u63D0\u4F9B\u7684<strong>\u8F7B\u91CF\u7EA7\u7684\u540C\u6B65\u673A\u5236</strong></p><ul><li>\u4FDD\u8BC1\u53EF\u89C1\u6027</li><li>\u4E0D\u4FDD\u8BC1\u539F\u5B50\u6027</li><li>\u7981\u6B62\u6307\u4EE4\u91CD\u62CD</li></ul><p>\u5F53\u8C08\u5230\u600E\u4E48\u4FDD\u8BC1\u53EF\u89C1\u6027\u7684\u65F6\u5019\uFF0C\u5C31\u8981\u8BF4\u5230JMM\u4E86\u3002</p><h3 id="\u4EC0\u4E48\u662Fjmm"><a class="header-anchor" href="#\u4EC0\u4E48\u662Fjmm" aria-hidden="true">#</a> \u4EC0\u4E48\u662FJMM</h3><p>JVM \u662FJava\u865A\u62DF\u673A</p><p>JMM \u662FJava\u5185\u5B58\u6A21\u578B\uFF0C\u4E0D\u5B58\u5728\u7684\u4E1C\u897F\uFF0C\u6982\u5FF5\uFF0C\u7EA6\u5B9A</p><p><strong>\u5173\u4E8EJMM\u7684\u4E00\u4E9B\u540C\u6B65\u7684\u7EA6\u5B9A</strong></p><p>\u7EBF\u7A0B\u4E0D\u4F1A\u76F4\u63A5\u64CD\u4F5C\u4E3B\u5B58\u7684\u4E2D\u7684\u5171\u4EAB\u53D8\u91CF\uFF0C\u800C\u662F\u5728\u81EA\u5DF1\u7684\u5DE5\u4F5C\u5185\u5B58\u4E2D\u6301\u6709\u4E00\u4EFD\u4E3B\u5B58\u4E2D\u53D8\u91CF\u7684\u590D\u5236\u7248</p><ol><li>\u7EBF\u7A0B\u89E3\u9501\u524D\uFF0C\u5FC5\u987B\u628A\u5171\u4EAB\u53D8\u91CF<strong>\u7ACB\u523B</strong>\u5237\u56DE\u4E3B\u5B58</li><li>\u7EBF\u7A0B\u52A0\u9501\u524D\uFF0C\u5FC5\u987B\u8BFB\u53D6\u4E3B\u5B58\u4E2D\u7684\u6700\u65B0\u503C\u5230\u5DE5\u4F5C\u5185\u5B58\u4E2D</li><li>\u52A0\u9501\u548C\u89E3\u9501\u662F\u540C\u4E00\u628A\u9501</li></ol><p><img src="`+P+'" alt=""></p><p>\u7EBF\u7A0B\u53EF\u4EE5\u5206\u4E3A \u5DE5\u4F5C\u5185\u5B58 \u548C \u4E3B\u5185\u5B58</p><p>8\u79CD\u64CD\u4F5C</p><p><img src="'+O+'" alt=""></p><p><img src="'+_+`" alt=""></p><p><strong>\u5185\u5B58\u4EA4\u4E92\u64CD\u4F5C\u67098\u79CD\uFF0C\u865A\u62DF\u673A\u5B9E\u73B0\u5FC5\u987B\u4FDD\u8BC1\u6BCF\u4E00\u4E2A\u64CD\u4F5C\u90FD\u662F\u539F\u5B50\u7684\uFF0C\u4E0D\u53EF\u5728\u5206\u7684\uFF08\u5BF9\u4E8Edouble\u548Clong\u7C7B\u578B\u7684\u53D8\u91CF\u6765\u8BF4\uFF0Cload\u3001store\u3001read\u548Cwrite\u64CD\u4F5C\u5728\u67D0\u4E9B\u5E73\u53F0\u4E0A\u5141\u8BB8\u4F8B\u5916\uFF09</strong></p><ul><li>lock \uFF08\u9501\u5B9A\uFF09\uFF1A\u4F5C\u7528\u4E8E\u4E3B\u5185\u5B58\u7684\u53D8\u91CF\uFF0C\u628A\u4E00\u4E2A\u53D8\u91CF\u6807\u8BC6\u4E3A\u7EBF\u7A0B\u72EC\u5360\u72B6\u6001</li><li>unlock \uFF08\u89E3\u9501\uFF09\uFF1A\u4F5C\u7528\u4E8E\u4E3B\u5185\u5B58\u7684\u53D8\u91CF\uFF0C\u5B83\u628A\u4E00\u4E2A\u5904\u4E8E\u9501\u5B9A\u72B6\u6001\u7684\u53D8\u91CF\u91CA\u653E\u51FA\u6765\uFF0C\u91CA\u653E\u540E\u7684\u53D8\u91CF\u624D\u53EF\u4EE5\u88AB\u5176\u4ED6\u7EBF\u7A0B\u9501\u5B9A</li><li>read \uFF08\u8BFB\u53D6\uFF09\uFF1A\u4F5C\u7528\u4E8E\u4E3B\u5185\u5B58\u53D8\u91CF\uFF0C\u5B83\u628A\u4E00\u4E2A\u53D8\u91CF\u7684\u503C\u4ECE\u4E3B\u5185\u5B58\u4F20\u8F93\u5230\u7EBF\u7A0B\u7684\u5DE5\u4F5C\u5185\u5B58\u4E2D\uFF0C\u4EE5\u4FBF\u968F\u540E\u7684load\u52A8\u4F5C\u4F7F\u7528</li><li>load \uFF08\u8F7D\u5165\uFF09\uFF1A\u4F5C\u7528\u4E8E\u5DE5\u4F5C\u5185\u5B58\u7684\u53D8\u91CF\uFF0C\u5B83\u628Aread\u64CD\u4F5C\u4ECE\u4E3B\u5B58\u4E2D\u53D8\u91CF\u653E\u5165\u5DE5\u4F5C\u5185\u5B58\u4E2D</li><li>use \uFF08\u4F7F\u7528\uFF09\uFF1A\u4F5C\u7528\u4E8E\u5DE5\u4F5C\u5185\u5B58\u4E2D\u7684\u53D8\u91CF\uFF0C\u5B83\u628A\u5DE5\u4F5C\u5185\u5B58\u4E2D\u7684\u53D8\u91CF\u4F20\u8F93\u7ED9\u6267\u884C\u5F15\u64CE\uFF0C\u6BCF\u5F53\u865A\u62DF\u673A\u9047\u5230\u4E00\u4E2A\u9700\u8981\u4F7F\u7528\u5230\u53D8\u91CF\u7684\u503C\uFF0C\u5C31\u4F1A\u4F7F\u7528\u5230\u8FD9\u4E2A\u6307\u4EE4</li><li>assign \uFF08\u8D4B\u503C\uFF09\uFF1A\u4F5C\u7528\u4E8E\u5DE5\u4F5C\u5185\u5B58\u4E2D\u7684\u53D8\u91CF\uFF0C\u5B83\u628A\u4E00\u4E2A\u4ECE\u6267\u884C\u5F15\u64CE\u4E2D\u63A5\u53D7\u5230\u7684\u503C\u653E\u5165\u5DE5\u4F5C\u5185\u5B58\u7684\u53D8\u91CF\u526F\u672C\u4E2D</li><li>store \uFF08\u5B58\u50A8\uFF09\uFF1A\u4F5C\u7528\u4E8E\u4E3B\u5185\u5B58\u4E2D\u7684\u53D8\u91CF\uFF0C\u5B83\u628A\u4E00\u4E2A\u4ECE\u5DE5\u4F5C\u5185\u5B58\u4E2D\u4E00\u4E2A\u53D8\u91CF\u7684\u503C\u4F20\u9001\u5230\u4E3B\u5185\u5B58\u4E2D\uFF0C\u4EE5\u4FBF\u540E\u7EED\u7684write\u4F7F\u7528</li><li>write \u3000\uFF08\u5199\u5165\uFF09\uFF1A\u4F5C\u7528\u4E8E\u4E3B\u5185\u5B58\u4E2D\u7684\u53D8\u91CF\uFF0C\u5B83\u628Astore\u64CD\u4F5C\u4ECE\u5DE5\u4F5C\u5185\u5B58\u4E2D\u5F97\u5230\u7684\u53D8\u91CF\u7684\u503C\u653E\u5165\u4E3B\u5185\u5B58\u7684\u53D8\u91CF\u4E2D</li></ul><p><strong>JMM\u5BF9\u8FD9\u516B\u79CD\u6307\u4EE4\u7684\u4F7F\u7528\uFF0C\u5236\u5B9A\u4E86\u5982\u4E0B\u89C4\u5219\uFF1A</strong></p><ul><li>\u4E0D\u5141\u8BB8read\u548Cload\u3001store\u548Cwrite\u64CD\u4F5C\u4E4B\u4E00\u5355\u72EC\u51FA\u73B0\u3002\u5373\u4F7F\u7528\u4E86read\u5FC5\u987Bload\uFF0C\u4F7F\u7528\u4E86store\u5FC5\u987Bwrite</li><li>\u4E0D\u5141\u8BB8\u7EBF\u7A0B\u4E22\u5F03\u4ED6\u6700\u8FD1\u7684assign\u64CD\u4F5C\uFF0C\u5373\u5DE5\u4F5C\u53D8\u91CF\u7684\u6570\u636E\u6539\u53D8\u4E86\u4E4B\u540E\uFF0C\u5FC5\u987B\u544A\u77E5\u4E3B\u5B58</li><li>\u4E0D\u5141\u8BB8\u4E00\u4E2A\u7EBF\u7A0B\u5C06\u6CA1\u6709assign\u7684\u6570\u636E\u4ECE\u5DE5\u4F5C\u5185\u5B58\u540C\u6B65\u56DE\u4E3B\u5185\u5B58</li><li>\u4E00\u4E2A\u65B0\u7684\u53D8\u91CF\u5FC5\u987B\u5728\u4E3B\u5185\u5B58\u4E2D\u8BDE\u751F\uFF0C\u4E0D\u5141\u8BB8\u5DE5\u4F5C\u5185\u5B58\u76F4\u63A5\u4F7F\u7528\u4E00\u4E2A\u672A\u88AB\u521D\u59CB\u5316\u7684\u53D8\u91CF\u3002\u5C31\u662F\u603C\u53D8\u91CF\u5B9E\u65BDuse\u3001store\u64CD\u4F5C\u4E4B\u524D\uFF0C\u5FC5\u987B\u7ECF\u8FC7assign\u548Cload\u64CD\u4F5C</li><li>\u4E00\u4E2A\u53D8\u91CF\u540C\u4E00\u65F6\u95F4\u53EA\u6709\u4E00\u4E2A\u7EBF\u7A0B\u80FD\u5BF9\u5176\u8FDB\u884Clock\u3002\u591A\u6B21lock\u540E\uFF0C\u5FC5\u987B\u6267\u884C\u76F8\u540C\u6B21\u6570\u7684unlock\u624D\u80FD\u89E3\u9501</li><li>\u5982\u679C\u5BF9\u4E00\u4E2A\u53D8\u91CF\u8FDB\u884Clock\u64CD\u4F5C\uFF0C\u4F1A\u6E05\u7A7A\u6240\u6709\u5DE5\u4F5C\u5185\u5B58\u4E2D\u6B64\u53D8\u91CF\u7684\u503C\uFF0C\u5728\u6267\u884C\u5F15\u64CE\u4F7F\u7528\u8FD9\u4E2A\u53D8\u91CF\u524D\uFF0C\u5FC5\u987B\u91CD\u65B0load\u6216assign\u64CD\u4F5C\u521D\u59CB\u5316\u53D8\u91CF\u7684\u503C</li><li>\u5982\u679C\u4E00\u4E2A\u53D8\u91CF\u6CA1\u6709\u88ABlock\uFF0C\u5C31\u4E0D\u80FD\u5BF9\u5176\u8FDB\u884Cunlock\u64CD\u4F5C\u3002\u4E5F\u4E0D\u80FDunlock\u4E00\u4E2A\u88AB\u5176\u4ED6\u7EBF\u7A0B\u9501\u4F4F\u7684\u53D8\u91CF</li><li>\u5BF9\u4E00\u4E2A\u53D8\u91CF\u8FDB\u884Cunlock\u64CD\u4F5C\u4E4B\u524D\uFF0C\u5FC5\u987B\u628A\u6B64\u53D8\u91CF\u540C\u6B65\u56DE\u4E3B\u5185\u5B58</li></ul><h3 id="\u4EE3\u7801\u793A\u4F8B"><a class="header-anchor" href="#\u4EE3\u7801\u793A\u4F8B" aria-hidden="true">#</a> \u4EE3\u7801\u793A\u4F8B</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u8BD5\u9A8C\uFF1A\u5F53\u5B50\u7EBF\u7A0B\u6267\u884C\u4E4B\u540E\uFF0C\u4E3B\u7EBF\u7A0B\u4FEE\u6539\u4E86num\u7684\u503C\uFF0C\u90A3\u4E48\u5E94\u8BE5\u5C06\u5B50\u7EBF\u7A0B\u7684while\u5FAA\u73AF\u505C\u6B62
 * \u4F46\u662F\u4E8B\u5B9E\u6CA1\u6709\u505C\u6B62
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JMMDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>num <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        num <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7A0B\u5E8F\u5E76\u6CA1\u6709\u505C\u6B62</p><p><img src="`+U+'" alt=""></p><p><img src="'+R+`" alt=""></p><p>\u95EE\u9898\uFF1A\u7A0B\u5E8F\u5E76\u4E0D\u77E5\u9053\u4E3B\u5185\u5B58\u7684\u503C\u5DF2\u7ECF\u88AB\u4FEE\u6539\u8FC7\u4E86\uFF0C\u5F15\u51FAvolatile\u3002</p><h2 id="volatile"><a class="header-anchor" href="#volatile" aria-hidden="true">#</a> volatile</h2><h3 id="\u4FDD\u8BC1\u53EF\u89C1\u6027"><a class="header-anchor" href="#\u4FDD\u8BC1\u53EF\u89C1\u6027" aria-hidden="true">#</a> \u4FDD\u8BC1\u53EF\u89C1\u6027</h3><p>\u5728\u7EBF\u7A0B\u4E4B\u95F4\u4FDD\u8BC1\u53EF\u89C1\u6027</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u8BD5\u9A8C\uFF1A\u5F53\u5B50\u7EBF\u7A0B\u6267\u884C\u4E4B\u540E\uFF0C\u4E3B\u7EBF\u7A0B\u4FEE\u6539\u4E86num\u7684\u503C\uFF0C\u90A3\u4E48\u5E94\u8BE5\u5C06\u5B50\u7EBF\u7A0B\u7684while\u5FAA\u73AF\u505C\u6B62
 * \u4F46\u662F\u4E8B\u5B9E\u6CA1\u6709\u505C\u6B62
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JMMDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token keyword">static</span> <span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>num <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        num <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4E0D\u4FDD\u8BC1\u539F\u5B50\u6027"><a class="header-anchor" href="#\u4E0D\u4FDD\u8BC1\u539F\u5B50\u6027" aria-hidden="true">#</a> \u4E0D\u4FDD\u8BC1\u539F\u5B50\u6027</h3><p>\u4E0D\u53EF\u5206\u5272</p><p>\u7EBF\u7A0BA\u5728\u6267\u884C\u4EFB\u52A1\u7684\u65F6\u5019\uFF0C\u4E0D\u80FD\u88AB\u6253\u6270\u7684\uFF0C\u4E5F\u4E0D\u80FD\u88AB\u5206\u5272\uFF0C\u8981\u4E48\u540C\u65F6\u6210\u529F\uFF0C\u8981\u4E48\u540C\u65F6\u5931\u8D25</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u4E0D\u4FDD\u8BC1\u539F\u5B50\u6027
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">VDemo02</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        num<span class="token operator">++</span><span class="token punctuation">;</span><span class="token comment">// \u4E0D\u662F\u4E00\u4E2A\u539F\u5B50\u6027\u64CD\u4F5C</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u7406\u8BBA\u4E0Anum\u5E94\u8BE5\u662F20000</span>
        <span class="token comment">// \u4F46\u662F\u8F93\u51FA\u7ED3\u679C\u4E0D\u523020000</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">1000</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">activeCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// main gc</span>
            <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token keyword">yield</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u8BA9\u7EBF\u7A0B\u7B49\u5F85</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\uFF1A&quot;</span> <span class="token operator">+</span> num<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+F+'" alt=""></p><ul><li>\u83B7\u5F97\u8FD9\u4E2A\u503C</li><li>+1</li><li>\u5199\u56DE\u8FD9\u4E2A\u503C</li></ul><p><strong>\u5982\u679C\u4E0D\u52A0lock \u548C sychronized \u600E\u4E48\u6837\u4FDD\u8BC1\u539F\u5B50\u6027</strong></p><p>Package java.util.concurrent.atomic</p><p>\u4F7F\u7528\u539F\u5B50\u7C7B\uFF0C\u89E3\u51B3\u539F\u5B50\u6027\u7684\u95EE\u9898</p><p><img src="'+Q+`" alt=""></p><p>\u8FD9\u4E9B\u7C7B\u7684\u5E95\u5C42\u90FD\u548C\u64CD\u4F5C\u7CFB\u7EDF\u6302\u94A9\uFF0C\u5728\u5185\u5B58\u79CD\u4FEE\u6539\u503C\uFF0CUnsafe\u7C7B\u662F\u4E00\u4E2A\u5F88\u7279\u6B8A\u7684\u5B58\u5728\u3002CAS\u4F1A\u4ECB\u7ECD\u3002</p><h4 id="\u539F\u5B50\u7C7B\u4E3A\u4EC0\u4E48\u8FD9\u4E48\u9AD8\u7EA7"><a class="header-anchor" href="#\u539F\u5B50\u7C7B\u4E3A\u4EC0\u4E48\u8FD9\u4E48\u9AD8\u7EA7" aria-hidden="true">#</a> \u539F\u5B50\u7C7B\u4E3A\u4EC0\u4E48\u8FD9\u4E48\u9AD8\u7EA7</h4><h4 id="\u539F\u5B50\u7C7B\u7684\u4F7F\u7528"><a class="header-anchor" href="#\u539F\u5B50\u7C7B\u7684\u4F7F\u7528" aria-hidden="true">#</a> \u539F\u5B50\u7C7B\u7684\u4F7F\u7528</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u4E0D\u4FDD\u8BC1\u539F\u5B50\u6027
 * \u4F46\u662F\u53EF\u4EE5\u4F7F\u7528AtomicInteger\u4FDD\u8BC1\u539F\u5B50\u6027
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">VDemo02</span> <span class="token punctuation">{</span>
    <span class="token comment">//private static int num = 0;</span>
    <span class="token comment">//\u539F\u5B50\u7C7B\u7684Integer</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">AtomicInteger</span> num <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//num++; // \u4E0D\u662F\u4E00\u4E2A\u539F\u5B50\u6027\u64CD\u4F5C</span>
        num<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// +1\u65B9\u6CD5 \u7528\u7684\u662F\u5E95\u5C42CAS\u8FDB\u884C\u52A0\u4E00\u64CD\u4F5C</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u7406\u8BBA\u4E0Anum\u5E94\u8BE5\u662F20000</span>
        <span class="token comment">// \u4FDD\u8BC1\u539F\u5B50\u6027\u4E4B\u540E\u8F93\u51FA\u7ED3\u679C\u5C31\u662F20000</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">1000</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">activeCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// main gc</span>
            <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token keyword">yield</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u8BA9\u7EBF\u7A0B\u7B49\u5F85</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\uFF1A&quot;</span> <span class="token operator">+</span> num<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7981\u6B62\u6307\u4EE4\u91CD\u6392"><a class="header-anchor" href="#\u7981\u6B62\u6307\u4EE4\u91CD\u6392" aria-hidden="true">#</a> \u7981\u6B62\u6307\u4EE4\u91CD\u6392</h3><p>\u4EC0\u4E48\u662F\u6307\u4EE4\u91CD\u6392\uFF1F</p><p>\u4F60\u5199\u7684\u7A0B\u5E8F\u5E76\u4E0D\u662F\u6309\u7167\u4F60\u5199\u7684\u90A3\u6837\u53BB\u6267\u884C\u7684</p><p>\u6E90\u4EE3\u7801--\u7F16\u8BD1\u5668\u4F18\u5316\u4EE3\u7801\u7684\u91CD\u6392--\u6267\u884C\u5E76\u884C\u4E5F\u53EF\u80FD\u91CD\u6392--\u5185\u5B58\u7CFB\u7EDF\u4E5F\u4F1A\u91CD\u6392--\u6267\u884C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">int</span> x<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//1</span>
<span class="token keyword">int</span> y<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token comment">//2</span>
x<span class="token operator">=</span>x<span class="token operator">+</span><span class="token number">5</span><span class="token punctuation">;</span><span class="token comment">//3</span>
y<span class="token operator">=</span>x<span class="token operator">*</span>x<span class="token punctuation">;</span><span class="token comment">//4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u6240\u671F\u671B\u7684\u6267\u884C\u987A\u5E8F\u662F\uFF1A1234\uFF0C\u4F46\u662F2134\u4E5F\u80FD\u8DD1\uFF0C\u80FD\u5F97\u5230\u6211\u4EEC\u60F3\u8981\u7684\u7ED3\u679C\uFF1B1324\u4E5F\u80FD\u8DD1</p><p>\u53EF\u4E0D\u80FD\u662F 4123\uFF1F\u4E0D\u53EF\u80FD\uFF0C<strong>\u5904\u7406\u5668\u5728\u8FDB\u884C\u6307\u4EE4\u91CD\u6392\u7684\u65F6\u5019\uFF0C\u4F1A\u8003\u8651\u6570\u636E\u4E4B\u95F4\u7684\u4F9D\u8D56\u6027\u95EE\u9898</strong></p><p>\u53EF\u80FD\u9020\u6210\u5F71\u54CD\u7684\u7ED3\u679C\uFF1Aa b x y\u8FD9\u56DB\u4E2A\u503C\u9ED8\u8BA4\u90FD\u662F0</p><table><thead><tr><th>\u7EBF\u7A0BA</th><th>\u7EBF\u7A0BB</th></tr></thead><tbody><tr><td>x=a</td><td>y=b</td></tr><tr><td>b=1</td><td>a=2</td></tr></tbody></table><p>\u6B63\u5E38\u7684\u7ED3\u679C\uFF1Ax=0;y=0;</p><p>x=a\u548Cb=1\uFF1By=b\u548Ca=2\u5728\u7EBF\u7A0B\u4E2D\u662F\u6CA1\u6709\u4EFB\u4F55\u4F9D\u8D56\uFF0C\u662F\u6709\u53EF\u80FD\u4F1A\u88AB\u6307\u4EE4\u91CD\u6392\u7684</p><table><thead><tr><th>\u7EBF\u7A0BA</th><th>\u7EBF\u7A0BB</th></tr></thead><tbody><tr><td>b=1</td><td>a=2</td></tr><tr><td>x=a</td><td>y=b</td></tr></tbody></table><p>\u53EF\u80FD\u7531\u4E8E\u6307\u4EE4\u91CD\u6392\uFF0C\u90A3\u4E48\u5F97\u5230\u7684\u7ED3\u679C\u5C31\u662F\uFF1Ax=2;y=1;</p><p><strong>volatile\u53EF\u4EE5\u907F\u514D\u6307\u4EE4\u91CD\u6392</strong></p><p>\u5185\u5B58\u5C4F\u969C\uFF0CCPU\u6307\u4EE4\uFF0C\u4F5C\u7528\uFF1A</p><ul><li>\u4FDD\u8BC1\u7279\u5B9A\u7684\u64CD\u4F5C\u7684\u6267\u884C\u987A\u5E8F</li><li>\u53EF\u4EE5\u4FDD\u8BC1\u67D0\u4E9B\u53D8\u91CF\u7684\u5185\u5B58\u53EF\u89C1\u6027\uFF08\u5229\u7528\u8FD9\u4E9B\u7279\u6027\uFF0Cvolatile\u5B9E\u73B0\u4E86\u53EF\u89C1\u6027\uFF09</li></ul><p><img src="`+J+`" alt=""></p><p>volatile\u662F\u53EF\u4EE5\u4FDD\u8BC1 \u53EF\u89C1\u6027\u3001\u4E0D\u80FD\u4FDD\u8BC1\u539F\u5B50\u6027\uFF0C\u7531\u4E8E\u5185\u5B58\u5C4F\u969C\uFF0C\u53EF\u4EE5\u907F\u514D\u6307\u4EE4\u91CD\u6392\u7684\u73B0\u8C61\u4EA7\u751F</p><p>\u65E2\u7136\u4F60\u8FD9\u4E48\u4E86\u89E3volatile\uFF0C\u90A3\u4E48\u5728\u4EC0\u4E48\u5730\u65B9\u7528\u7684\u6700\u591A\uFF1F\u5F53\u7136\u662F\u5355\u4F8B\u6A21\u5F0F\u4E86</p><h2 id="\u6DF1\u5165\u5355\u4F8B\u6A21\u5F0F"><a class="header-anchor" href="#\u6DF1\u5165\u5355\u4F8B\u6A21\u5F0F" aria-hidden="true">#</a> \u6DF1\u5165\u5355\u4F8B\u6A21\u5F0F</h2><p>\u997F\u6C49\u5F0F\u3001\u61D2\u6C49\u5F0F\uFF1ADCL\u61D2\u6C49\u5F0F</p><h3 id="\u997F\u6C49\u5F0F"><a class="header-anchor" href="#\u997F\u6C49\u5F0F" aria-hidden="true">#</a> \u997F\u6C49\u5F0F</h3><p>\u4E3B\u8981\u662F\u4E09\u4E2A\u53EF\u4EE5\u4F18\u5316\u7684\u5730\u65B9\uFF1A</p><p>\u591A\u7EBF\u7A0B\u60C5\u51B5\u4E0B\uFF1A</p><ul><li>\u4F7F\u7528\u53CC\u91CD\u68C0\u6D4B\u9501\u9632\u6B62lazyMan\u88AB\u591A\u7EBF\u7A0B\u521D\u59CB\u5316\u591A\u6B21</li><li>\u4F7F\u7528volatile\u9632\u6B62\u6307\u4EE4\u91CD\u6392\uFF0C\u5177\u4F53\u8BF4\u660E\u5728\u4EE3\u7801\u6CE8\u89E3\u4E2D</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u61D2\u6C49\u5F0F
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
 * \u5355\u7EBF\u7A0B\u4E0B\uFF0C\u5355\u4F8B\u786E\u5B9EOK
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LazyMan</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">LazyMan</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; ok&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token keyword">static</span> <span class="token class-name">LazyMan</span> lazyMan<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * \u53CC\u91CD\u68C0\u6D4B\u9501\u6A21\u5F0F\u7684\u61D2\u6C49\u5F0F\u5355\u4F8B \u7B80\u79F0DCL\u61D2\u6C49\u5F0F
     * DCL\u61D2\u6C49\u5F0F\u662F\u6709\u4E00\u4E2A\u95EE\u9898\u7684
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">LazyMan</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u52A0\u9501</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>lazyMan<span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token class-name">LazyMan</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>lazyMan <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    lazyMan <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LazyMan</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u4E0D\u662F\u4E00\u4E2A\u539F\u5B50\u6027\u64CD\u4F5C</span>
                    <span class="token doc-comment comment">/**
                     * \u4F1A\u7ECF\u5386\u4E09\u4E2A\u9636\u6BB5\uFF1A
                     * 1 \u5206\u914D\u5185\u5B58\u7A7A\u95F4
                     * 2 \u6267\u884C\u6784\u9020\u65B9\u6CD5
                     * 3 \u628A\u8FD9\u4E2A\u5BF9\u8C61\u6307\u5411\u8FD9\u4E2A\u7A7A\u95F4
                     *
                     * \u5E95\u5C42\u5C31\u6709\u53EF\u80FD\u53D1\u751F\u6307\u4EE4\u91CD\u6392\u7684\u73B0\u8C61
                     * \u6211\u4EEC\u5E0C\u671B\u7684\u6267\u884C\u987A\u5E8F\u662F\uFF1A123\uFF0C\u4F46\u662F\u6709\u53EF\u80FD\u662F\uFF1A132
                     * \u6BD4\u5982\uFF1AA\u7EBF\u7A0B\u7684\u6267\u884C\u987A\u5E8F\u662F132\uFF0C\u8FDB\u6765\uFF0C\u5148\u5206\u914D\u5185\u5B58\u7A7A\u95F4\uFF0C\u7136\u540E\u628AlazyMan\u5F15\u7528\u6307\u5411\u8FD9\u4E2A\u7A7A\u95F4\uFF0C\u7136\u540E\u518D\u5728\u8FD9\u4E2A\u5185\u5B58\u7A7A\u95F4\u4E2D\u521B\u5EFA\u8FD9\u4E2A\u5BF9\u8C61
                     * \u7136\u800C\uFF0C\u5728A\u7EBF\u7A0B\u6267\u884C\u52303\u7684\u65F6\u5019\uFF0C\u6765\u4E86\u4E00\u4E2AB\u7EBF\u7A0B\uFF0C\u6B64\u65F6\u7684lazyMan\u5DF2\u7ECF\u4E0D\u7B49\u4E8Enull\u4E86\uFF0C\u76F4\u63A5\u8FD4\u56DElazyMan\uFF0C\u4F46\u662F\u6B64\u65F6\u8FD9\u4E2A\u5BF9\u8C61\u5E76\u6CA1\u6709\u521B\u5EFA\u51FA\u6765
                     * \u6240\u4EE5\u5FC5\u987B\u7ED9\u8FD9\u4E2A\u5355\u4F8BlazyMan\u6DFB\u52A0volatile\uFF0C\u9632\u6B62\u5B83\u6307\u4EE4\u91CD\u6392
                     */</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> lazyMan<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token class-name">LazyMan</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5185\u90E8\u9759\u6001\u7C7B"><a class="header-anchor" href="#\u5185\u90E8\u9759\u6001\u7C7B" aria-hidden="true">#</a> \u5185\u90E8\u9759\u6001\u7C7B</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u9759\u6001\u5185\u90E8\u7C7B\u65B9\u5F0F\u5B9E\u73B0\u5355\u4F8B
 * \u4F46\u662F\u8FD9\u4E2A\u65B9\u5F0F\u90FD\u662F\u4E0D\u5B89\u5168\u7684\uFF0C\u56E0\u4E3A\u76F4\u63A5\u7528\u53CD\u5C04\u5C31\u53EF\u4EE5
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Holder</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Holder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Holder</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">InnerClass</span><span class="token punctuation">.</span>HOLDER<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">InnerClass</span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Holder</span> HOLDER <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Holder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4F46\u662F\u8FD9\u4E9B\u65B9\u5F0F\u90FD\u662F\u4E0D\u5B89\u5168\u7684-\u53EF\u4EE5\u4F7F\u7528\u53CD\u5C04\u53BB\u7834\u89E3\u6389"><a class="header-anchor" href="#\u4F46\u662F\u8FD9\u4E9B\u65B9\u5F0F\u90FD\u662F\u4E0D\u5B89\u5168\u7684-\u53EF\u4EE5\u4F7F\u7528\u53CD\u5C04\u53BB\u7834\u89E3\u6389" aria-hidden="true">#</a> \u4F46\u662F\u8FD9\u4E9B\u65B9\u5F0F\u90FD\u662F\u4E0D\u5B89\u5168\u7684\uFF0C\u53EF\u4EE5\u4F7F\u7528\u53CD\u5C04\u53BB\u7834\u89E3\u6389</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u61D2\u6C49\u5F0F
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
 * \u5355\u7EBF\u7A0B\u4E0B\uFF0C\u5355\u4F8B\u786E\u5B9EOK
 * \u4F46\u662F\u8FD9\u4E2A\u65B9\u5F0F\u90FD\u662F\u4E0D\u5B89\u5168\u7684\uFF0C\u56E0\u4E3A\u76F4\u63A5\u7528\u53CD\u5C04\u5C31\u53EF\u4EE5
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LazyMan</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">LazyMan</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u9632\u6B62\u53CD\u5C04\u901A\u8FC7\u6784\u9020\u65B9\u6CD5\u521B\u5EFA\u5BF9\u8C61</span>
        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token class-name">LazyMan</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>lazyMan<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E0D\u8981\u8BD5\u56FE\u4F7F\u7528\u53CD\u5C04\u7834\u574F\u5355\u4F8B\u5F02\u5E38&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; ok&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token keyword">static</span> <span class="token class-name">LazyMan</span> lazyMan<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * \u53CC\u91CD\u68C0\u6D4B\u9501\u6A21\u5F0F\u7684\u61D2\u6C49\u5F0F\u5355\u4F8B \u7B80\u79F0DCL\u61D2\u6C49\u5F0F
     * DCL\u61D2\u6C49\u5F0F\u662F\u6709\u4E00\u4E2A\u95EE\u9898\u7684
     *
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">LazyMan</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u52A0\u9501</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>lazyMan <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token class-name">LazyMan</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>lazyMan <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    lazyMan <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LazyMan</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u4E0D\u662F\u4E00\u4E2A\u539F\u5B50\u6027\u64CD\u4F5C</span>
                    <span class="token doc-comment comment">/**
                     * \u4F1A\u7ECF\u5386\u4E09\u4E2A\u9636\u6BB5\uFF1A
                     * 1 \u5206\u914D\u5185\u5B58\u7A7A\u95F4
                     * 2 \u6267\u884C\u6784\u9020\u65B9\u6CD5
                     * 3 \u628A\u8FD9\u4E2A\u5BF9\u8C61\u6307\u5411\u8FD9\u4E2A\u7A7A\u95F4
                     *
                     * \u5E95\u5C42\u5C31\u6709\u53EF\u80FD\u53D1\u751F\u6307\u4EE4\u91CD\u6392\u7684\u73B0\u8C61
                     * \u6211\u4EEC\u5E0C\u671B\u7684\u6267\u884C\u987A\u5E8F\u662F\uFF1A123\uFF0C\u4F46\u662F\u6709\u53EF\u80FD\u662F\uFF1A132
                     * \u6BD4\u5982\uFF1AA\u7EBF\u7A0B\u7684\u6267\u884C\u987A\u5E8F\u662F132\uFF0C\u8FDB\u6765\uFF0C\u5148\u5206\u914D\u5185\u5B58\u7A7A\u95F4\uFF0C\u7136\u540E\u628AlazyMan\u5F15\u7528\u6307\u5411\u8FD9\u4E2A\u7A7A\u95F4\uFF0C\u7136\u540E\u518D\u5728\u8FD9\u4E2A\u5185\u5B58\u7A7A\u95F4\u4E2D\u521B\u5EFA\u8FD9\u4E2A\u5BF9\u8C61
                     * \u7136\u800C\uFF0C\u5728A\u7EBF\u7A0B\u6267\u884C\u52303\u7684\u65F6\u5019\uFF0C\u6765\u4E86\u4E00\u4E2AB\u7EBF\u7A0B\uFF0C\u6B64\u65F6\u7684lazyMan\u5DF2\u7ECF\u4E0D\u7B49\u4E8Enull\u4E86\uFF0C\u76F4\u63A5\u8FD4\u56DElazyMan\uFF0C\u4F46\u662F\u6B64\u65F6\u8FD9\u4E2A\u5BF9\u8C61\u5E76\u6CA1\u6709\u521B\u5EFA\u51FA\u6765
                     * \u6240\u4EE5\u5FC5\u987B\u7ED9\u8FD9\u4E2A\u5355\u4F8BlazyMan\u6DFB\u52A0volatile\uFF0C\u9632\u6B62\u5B83\u6307\u4EE4\u91CD\u6392
                     */</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> lazyMan<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token comment">//for (int i = 0; i &lt; 10; i++) {</span>
        <span class="token comment">//    new Thread(() -&gt; {</span>
        <span class="token comment">//        LazyMan.getInstance();</span>
        <span class="token comment">//    }).start();</span>
        <span class="token comment">//}</span>

        <span class="token comment">// \u6B63\u5E38\u83B7\u53D6</span>
        <span class="token keyword">final</span> <span class="token class-name">LazyMan</span> lazyMan <span class="token operator">=</span> <span class="token class-name">LazyMan</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u53CD\u5C04\u83B7\u53D6</span>
        <span class="token keyword">final</span> <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LazyMan</span><span class="token punctuation">&gt;</span></span> declaredConstructor <span class="token operator">=</span> <span class="token class-name">LazyMan</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredConstructor</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        declaredConstructor<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">LazyMan</span> lazyMan1 <span class="token operator">=</span> declaredConstructor<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>lazyMan <span class="token operator">==</span> lazyMan1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>main ok
<span class="token class-name">Exception</span> in thread <span class="token string">&quot;main&quot;</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>InvocationTargetException</span>
	at <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>NativeConstructorAccessorImpl</span><span class="token punctuation">.</span><span class="token function">newInstance0</span><span class="token punctuation">(</span><span class="token class-name">Native</span> <span class="token class-name">Method</span><span class="token punctuation">)</span>
	at <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>NativeConstructorAccessorImpl</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token class-name">NativeConstructorAccessorImpl</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">62</span><span class="token punctuation">)</span>
	at <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>DelegatingConstructorAccessorImpl</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token class-name">DelegatingConstructorAccessorImpl</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">45</span><span class="token punctuation">)</span>
	at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>Constructor</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token class-name">Constructor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">423</span><span class="token punctuation">)</span>
	at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>juc<span class="token punctuation">.</span>single<span class="token punctuation">.</span></span>LazyMan</span><span class="token punctuation">.</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">LazyMan</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">69</span><span class="token punctuation">)</span>
<span class="token class-name">Caused</span> by<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>RuntimeException</span><span class="token operator">:</span> \u4E0D\u8981\u8BD5\u56FE\u4F7F\u7528\u53CD\u5C04\u7834\u574F\u5355\u4F8B\u5F02\u5E38
	at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>juc<span class="token punctuation">.</span>single<span class="token punctuation">.</span></span>LazyMan</span><span class="token punctuation">.</span><span class="token generics"><span class="token punctuation">&lt;</span>init<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">LazyMan</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">16</span><span class="token punctuation">)</span>
	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token number">5</span> more
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F46\u662F\u5982\u679C\u5B83\u6CA1\u6709\u901A\u8FC7<code>final LazyMan lazyMan = LazyMan.getInstance();</code>\u521B\u5EFA\u5BF9\u8C61\uFF0C\u800C\u662F\u76F4\u63A5\u901A\u8FC7\u53CD\u5C04\u53BB\u521B\u5EFA\u5BF9\u8C61\uFF0C\u90A3\u4E48\u8FD8\u662F\u5B58\u5728\u5355\u4F8B\u88AB\u7834\u574F\u7684\u60C5\u51B5\u51FA\u73B0\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token comment">//for (int i = 0; i &lt; 10; i++) {</span>
    <span class="token comment">//    new Thread(() -&gt; {</span>
    <span class="token comment">//        LazyMan.getInstance();</span>
    <span class="token comment">//    }).start();</span>
    <span class="token comment">//}</span>

    <span class="token comment">// \u6B63\u5E38\u83B7\u53D6</span>
    <span class="token comment">//final LazyMan lazyMan = LazyMan.getInstance();</span>

    <span class="token comment">// \u53CD\u5C04\u83B7\u53D6</span>
    <span class="token keyword">final</span> <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LazyMan</span><span class="token punctuation">&gt;</span></span> declaredConstructor <span class="token operator">=</span> <span class="token class-name">LazyMan</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredConstructor</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    declaredConstructor<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">LazyMan</span> lazyMan1 <span class="token operator">=</span> declaredConstructor<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">LazyMan</span> lazyMan2 <span class="token operator">=</span> declaredConstructor<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>lazyMan <span class="token operator">==</span> lazyMan1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>main ok
main ok
<span class="token boolean">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u65F6\u5019\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7\u7EA2\u7EFF\u706F\u72B6\u6001\u4F4D\u5224\u5B9A\u662F\u4E0D\u662F\u7B2C\u4E00\u6B21\u8FDB\u5165\u6784\u9020\u51FD\u6570\u7684</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u61D2\u6C49\u5F0F
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
 * \u5355\u7EBF\u7A0B\u4E0B\uFF0C\u5355\u4F8B\u786E\u5B9EOK
 * \u4F46\u662F\u8FD9\u4E2A\u65B9\u5F0F\u90FD\u662F\u4E0D\u5B89\u5168\u7684\uFF0C\u56E0\u4E3A\u76F4\u63A5\u7528\u53CD\u5C04\u5C31\u53EF\u4EE5
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LazyMan</span> <span class="token punctuation">{</span>

    <span class="token comment">// \u901A\u8FC7\u8BBE\u7F6E\u7EA2\u7EFF\u706F\u72B6\u6001\u4F4D\u9632\u6B62\u90FD\u662F\u901A\u8FC7\u53CD\u5C04\u521B\u5EFA\u5BF9\u8C61\u7684\u60C5\u51B5</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> zhangsan <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">LazyMan</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token class-name">LazyMan</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//if (lazyMan != null) {</span>
            <span class="token comment">//    throw new RuntimeException(&quot;\u4E0D\u8981\u8BD5\u56FE\u4F7F\u7528\u53CD\u5C04\u7834\u574F\u5355\u4F8B\u5F02\u5E38&quot;);</span>
            <span class="token comment">//}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>zhangsan <span class="token operator">==</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                zhangsan <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E0D\u8981\u8BD5\u56FE\u4F7F\u7528\u53CD\u5C04\u7834\u574F\u5355\u4F8B\u5F02\u5E38&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; ok&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token keyword">static</span> <span class="token class-name">LazyMan</span> lazyMan<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * \u53CC\u91CD\u68C0\u6D4B\u9501\u6A21\u5F0F\u7684\u61D2\u6C49\u5F0F\u5355\u4F8B \u7B80\u79F0DCL\u61D2\u6C49\u5F0F
     * DCL\u61D2\u6C49\u5F0F\u662F\u6709\u4E00\u4E2A\u95EE\u9898\u7684
     *
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">LazyMan</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u52A0\u9501</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>lazyMan <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token class-name">LazyMan</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>lazyMan <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    lazyMan <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LazyMan</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u4E0D\u662F\u4E00\u4E2A\u539F\u5B50\u6027\u64CD\u4F5C</span>
                    <span class="token doc-comment comment">/**
                     * \u4F1A\u7ECF\u5386\u4E09\u4E2A\u9636\u6BB5\uFF1A
                     * 1 \u5206\u914D\u5185\u5B58\u7A7A\u95F4
                     * 2 \u6267\u884C\u6784\u9020\u65B9\u6CD5
                     * 3 \u628A\u8FD9\u4E2A\u5BF9\u8C61\u6307\u5411\u8FD9\u4E2A\u7A7A\u95F4
                     *
                     * \u5E95\u5C42\u5C31\u6709\u53EF\u80FD\u53D1\u751F\u6307\u4EE4\u91CD\u6392\u7684\u73B0\u8C61
                     * \u6211\u4EEC\u5E0C\u671B\u7684\u6267\u884C\u987A\u5E8F\u662F\uFF1A123\uFF0C\u4F46\u662F\u6709\u53EF\u80FD\u662F\uFF1A132
                     * \u6BD4\u5982\uFF1AA\u7EBF\u7A0B\u7684\u6267\u884C\u987A\u5E8F\u662F132\uFF0C\u8FDB\u6765\uFF0C\u5148\u5206\u914D\u5185\u5B58\u7A7A\u95F4\uFF0C\u7136\u540E\u628AlazyMan\u5F15\u7528\u6307\u5411\u8FD9\u4E2A\u7A7A\u95F4\uFF0C\u7136\u540E\u518D\u5728\u8FD9\u4E2A\u5185\u5B58\u7A7A\u95F4\u4E2D\u521B\u5EFA\u8FD9\u4E2A\u5BF9\u8C61
                     * \u7136\u800C\uFF0C\u5728A\u7EBF\u7A0B\u6267\u884C\u52303\u7684\u65F6\u5019\uFF0C\u6765\u4E86\u4E00\u4E2AB\u7EBF\u7A0B\uFF0C\u6B64\u65F6\u7684lazyMan\u5DF2\u7ECF\u4E0D\u7B49\u4E8Enull\u4E86\uFF0C\u76F4\u63A5\u8FD4\u56DElazyMan\uFF0C\u4F46\u662F\u6B64\u65F6\u8FD9\u4E2A\u5BF9\u8C61\u5E76\u6CA1\u6709\u521B\u5EFA\u51FA\u6765
                     * \u6240\u4EE5\u5FC5\u987B\u7ED9\u8FD9\u4E2A\u5355\u4F8BlazyMan\u6DFB\u52A0volatile\uFF0C\u9632\u6B62\u5B83\u6307\u4EE4\u91CD\u6392
                     */</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> lazyMan<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token comment">//for (int i = 0; i &lt; 10; i++) {</span>
        <span class="token comment">//    new Thread(() -&gt; {</span>
        <span class="token comment">//        LazyMan.getInstance();</span>
        <span class="token comment">//    }).start();</span>
        <span class="token comment">//}</span>

        <span class="token comment">// \u6B63\u5E38\u83B7\u53D6</span>
        <span class="token comment">//final LazyMan lazyMan = LazyMan.getInstance();</span>

        <span class="token comment">// \u53CD\u5C04\u83B7\u53D6</span>
        <span class="token keyword">final</span> <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LazyMan</span><span class="token punctuation">&gt;</span></span> declaredConstructor <span class="token operator">=</span> <span class="token class-name">LazyMan</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredConstructor</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        declaredConstructor<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">LazyMan</span> lazyMan1 <span class="token operator">=</span> declaredConstructor<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">LazyMan</span> lazyMan2 <span class="token operator">=</span> declaredConstructor<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>lazyMan <span class="token operator">==</span> lazyMan1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>main ok
<span class="token class-name">Exception</span> in thread <span class="token string">&quot;main&quot;</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>InvocationTargetException</span>
	at <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>NativeConstructorAccessorImpl</span><span class="token punctuation">.</span><span class="token function">newInstance0</span><span class="token punctuation">(</span><span class="token class-name">Native</span> <span class="token class-name">Method</span><span class="token punctuation">)</span>
	at <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>NativeConstructorAccessorImpl</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token class-name">NativeConstructorAccessorImpl</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">62</span><span class="token punctuation">)</span>
	at <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>DelegatingConstructorAccessorImpl</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token class-name">DelegatingConstructorAccessorImpl</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">45</span><span class="token punctuation">)</span>
	at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>Constructor</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token class-name">Constructor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">423</span><span class="token punctuation">)</span>
	at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>juc<span class="token punctuation">.</span>single<span class="token punctuation">.</span></span>LazyMan</span><span class="token punctuation">.</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">LazyMan</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">80</span><span class="token punctuation">)</span>
<span class="token class-name">Caused</span> by<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>RuntimeException</span><span class="token operator">:</span> \u4E0D\u8981\u8BD5\u56FE\u4F7F\u7528\u53CD\u5C04\u7834\u574F\u5355\u4F8B\u5F02\u5E38
	at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>juc<span class="token punctuation">.</span>single<span class="token punctuation">.</span></span>LazyMan</span><span class="token punctuation">.</span><span class="token generics"><span class="token punctuation">&lt;</span>init<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">LazyMan</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">26</span><span class="token punctuation">)</span>
	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token number">5</span> more
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F46\u662F\u5982\u679C\u88AB\u4EBA\u627E\u5230\u4E86\u8FD9\u4E2A\u9690\u85CF\u7684<code>zhangsan</code>\u8FD9\u4E2A\u53D8\u91CF\uFF0C\u90A3\u4E48<code>zhangsan</code>\u4E5F\u53EF\u4EE5\u88AB\u7834\u574F\u4E86</p><p>\u5173\u952E\u4EE3\u7801</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token class-name">Field</span> zhangsan <span class="token operator">=</span> <span class="token class-name">LazyMan</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">&quot;zhangsan&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    zhangsan<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u7834\u574F\u8FD9\u4E2A\u5B57\u6BB5\u7684\u79C1\u6709\u6743\u9650</span>

    <span class="token comment">// \u53CD\u5C04\u83B7\u53D6</span>
    <span class="token keyword">final</span> <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LazyMan</span><span class="token punctuation">&gt;</span></span> declaredConstructor <span class="token operator">=</span> <span class="token class-name">LazyMan</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredConstructor</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    declaredConstructor<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u7834\u574F\u6784\u9020\u51FD\u6570\u7684\u79C1\u6709\u6743\u9650</span>
    <span class="token keyword">final</span> <span class="token class-name">LazyMan</span> lazyMan1 <span class="token operator">=</span> declaredConstructor<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u628A\u7B2C\u4E00\u4E2A\u5BF9\u8C61\u7684\u503C\u5728\u6539\u4E3Afalse\uFF0C\u56E0\u4E3A\u8FD9\u4E2A\u5C5E\u6027\u662F\u9759\u6001\uFF0C\u5176\u5B9E\u5C31\u662F\u4FEE\u6539\u4E86\u7C7B\u6210\u5458\u5C5E\u6027\uFF0C\u5176\u4ED6\u5BF9\u8C61\u7684\u8FD9\u4E2A</span>
    zhangsan<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>lazyMan1<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6574\u4E2A\u7C7B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u61D2\u6C49\u5F0F
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
 * \u5355\u7EBF\u7A0B\u4E0B\uFF0C\u5355\u4F8B\u786E\u5B9EOK
 * \u4F46\u662F\u8FD9\u4E2A\u65B9\u5F0F\u90FD\u662F\u4E0D\u5B89\u5168\u7684\uFF0C\u56E0\u4E3A\u76F4\u63A5\u7528\u53CD\u5C04\u5C31\u53EF\u4EE5
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LazyMan</span> <span class="token punctuation">{</span>

    <span class="token comment">// \u901A\u8FC7\u8BBE\u7F6E\u7EA2\u7EFF\u706F\u72B6\u6001\u4F4D\u9632\u6B62\u90FD\u662F\u901A\u8FC7\u53CD\u5C04\u521B\u5EFA\u5BF9\u8C61\u7684\u60C5\u51B5</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> zhangsan <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">LazyMan</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token class-name">LazyMan</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//if (lazyMan != null) {</span>
            <span class="token comment">//    throw new RuntimeException(&quot;\u4E0D\u8981\u8BD5\u56FE\u4F7F\u7528\u53CD\u5C04\u7834\u574F\u5355\u4F8B\u5F02\u5E38&quot;);</span>
            <span class="token comment">//}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>zhangsan <span class="token operator">==</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                zhangsan <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E0D\u8981\u8BD5\u56FE\u4F7F\u7528\u53CD\u5C04\u7834\u574F\u5355\u4F8B\u5F02\u5E38&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; ok&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token keyword">static</span> <span class="token class-name">LazyMan</span> lazyMan<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * \u53CC\u91CD\u68C0\u6D4B\u9501\u6A21\u5F0F\u7684\u61D2\u6C49\u5F0F\u5355\u4F8B \u7B80\u79F0DCL\u61D2\u6C49\u5F0F
     * DCL\u61D2\u6C49\u5F0F\u662F\u6709\u4E00\u4E2A\u95EE\u9898\u7684
     *
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">LazyMan</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u52A0\u9501</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>lazyMan <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token class-name">LazyMan</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>lazyMan <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    lazyMan <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LazyMan</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u4E0D\u662F\u4E00\u4E2A\u539F\u5B50\u6027\u64CD\u4F5C</span>
                    <span class="token doc-comment comment">/**
                     * \u4F1A\u7ECF\u5386\u4E09\u4E2A\u9636\u6BB5\uFF1A
                     * 1 \u5206\u914D\u5185\u5B58\u7A7A\u95F4
                     * 2 \u6267\u884C\u6784\u9020\u65B9\u6CD5
                     * 3 \u628A\u8FD9\u4E2A\u5BF9\u8C61\u6307\u5411\u8FD9\u4E2A\u7A7A\u95F4
                     *
                     * \u5E95\u5C42\u5C31\u6709\u53EF\u80FD\u53D1\u751F\u6307\u4EE4\u91CD\u6392\u7684\u73B0\u8C61
                     * \u6211\u4EEC\u5E0C\u671B\u7684\u6267\u884C\u987A\u5E8F\u662F\uFF1A123\uFF0C\u4F46\u662F\u6709\u53EF\u80FD\u662F\uFF1A132
                     * \u6BD4\u5982\uFF1AA\u7EBF\u7A0B\u7684\u6267\u884C\u987A\u5E8F\u662F132\uFF0C\u8FDB\u6765\uFF0C\u5148\u5206\u914D\u5185\u5B58\u7A7A\u95F4\uFF0C\u7136\u540E\u628AlazyMan\u5F15\u7528\u6307\u5411\u8FD9\u4E2A\u7A7A\u95F4\uFF0C\u7136\u540E\u518D\u5728\u8FD9\u4E2A\u5185\u5B58\u7A7A\u95F4\u4E2D\u521B\u5EFA\u8FD9\u4E2A\u5BF9\u8C61
                     * \u7136\u800C\uFF0C\u5728A\u7EBF\u7A0B\u6267\u884C\u52303\u7684\u65F6\u5019\uFF0C\u6765\u4E86\u4E00\u4E2AB\u7EBF\u7A0B\uFF0C\u6B64\u65F6\u7684lazyMan\u5DF2\u7ECF\u4E0D\u7B49\u4E8Enull\u4E86\uFF0C\u76F4\u63A5\u8FD4\u56DElazyMan\uFF0C\u4F46\u662F\u6B64\u65F6\u8FD9\u4E2A\u5BF9\u8C61\u5E76\u6CA1\u6709\u521B\u5EFA\u51FA\u6765
                     * \u6240\u4EE5\u5FC5\u987B\u7ED9\u8FD9\u4E2A\u5355\u4F8BlazyMan\u6DFB\u52A0volatile\uFF0C\u9632\u6B62\u5B83\u6307\u4EE4\u91CD\u6392
                     */</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> lazyMan<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token comment">//for (int i = 0; i &lt; 10; i++) {</span>
        <span class="token comment">//    new Thread(() -&gt; {</span>
        <span class="token comment">//        LazyMan.getInstance();</span>
        <span class="token comment">//    }).start();</span>
        <span class="token comment">//}</span>

        <span class="token comment">// \u6B63\u5E38\u83B7\u53D6</span>
        <span class="token comment">//final LazyMan lazyMan = LazyMan.getInstance();</span>

        <span class="token keyword">final</span> <span class="token class-name">Field</span> zhangsan <span class="token operator">=</span> <span class="token class-name">LazyMan</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">&quot;zhangsan&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        zhangsan<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u7834\u574F\u8FD9\u4E2A\u5B57\u6BB5\u7684\u79C1\u6709\u6743\u9650</span>

        <span class="token comment">// \u53CD\u5C04\u83B7\u53D6</span>
        <span class="token keyword">final</span> <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LazyMan</span><span class="token punctuation">&gt;</span></span> declaredConstructor <span class="token operator">=</span> <span class="token class-name">LazyMan</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredConstructor</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        declaredConstructor<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u7834\u574F\u6784\u9020\u51FD\u6570\u7684\u79C1\u6709\u6743\u9650</span>
        <span class="token keyword">final</span> <span class="token class-name">LazyMan</span> lazyMan1 <span class="token operator">=</span> declaredConstructor<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u628A\u7B2C\u4E00\u4E2A\u5BF9\u8C61\u7684\u503C\u5728\u6539\u4E3Afalse\uFF0C\u56E0\u4E3A\u8FD9\u4E2A\u5C5E\u6027\u662F\u9759\u6001\uFF0C\u5176\u5B9E\u5C31\u662F\u4FEE\u6539\u4E86\u7C7B\u6210\u5458\u5C5E\u6027\uFF0C\u5176\u4ED6\u5BF9\u8C61\u7684\u8FD9\u4E2A</span>
        zhangsan<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>lazyMan1<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">final</span> <span class="token class-name">LazyMan</span> lazyMan2 <span class="token operator">=</span> declaredConstructor<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>lazyMan <span class="token operator">==</span> lazyMan1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>main ok
main ok
<span class="token boolean">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u600E\u4E48\u89E3\u51B3\u5462\uFF1F\u901A\u8FC7\u67E5\u770B\u53CD\u5C04\u7684\u6E90\u4EE3\u7801\u53EF\u4EE5\u770B\u5230\uFF1A</p><p><img src="`+W+`" alt=""></p><p>\u4E5F\u5C31\u662F\u8BF4\uFF0C\u5982\u679C\u901A\u8FC7\u53CD\u5C04\u521B\u5EFA\u7684\u7C7B\u578B\u662F\u679A\u4E3E\u7C7B\u578B\uFF0C\u5C31\u4E0D\u5141\u8BB8\u521B\u5EFA\uFF0C\u629B\u51FA\u5F02\u5E38</p><h3 id="\u679A\u4E3E\u7C7B\u578B\u5355\u4F8B"><a class="header-anchor" href="#\u679A\u4E3E\u7C7B\u578B\u5355\u4F8B" aria-hidden="true">#</a> \u679A\u4E3E\u7C7B\u578B\u5355\u4F8B</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u679A\u4E3E\u7C7B\u578B\u7684\u5355\u4F8B
 * \u679A\u4E3E\u672C\u8EAB\u4E5F\u662F\u4E00\u4E2AClass\u7C7B
 */</span>
<span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">EnumSingle</span> <span class="token punctuation">{</span>
    INSTANCE<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">EnumSingle</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> INSTANCE<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Test</span><span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">EnumSingle</span> instance1 <span class="token operator">=</span> <span class="token class-name">EnumSingle</span><span class="token punctuation">.</span>INSTANCE<span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">EnumSingle</span> instance2 <span class="token operator">=</span> <span class="token class-name">EnumSingle</span><span class="token punctuation">.</span>INSTANCE<span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>instance1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>instance2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6D4B\u8BD5\u662F\u5426\u80FD\u901A\u8FC7\u53CD\u5C04\u521B\u5EFA\u5BF9\u8C61</p><p>\u6211\u4EEC\u901A\u8FC7\u6E90\u4EE3\u7801\u53EF\u4EE5\u67E5\u770B\u5230\u6211\u4EEC\u521B\u5EFA\u7684\u679A\u4E3E\u7C7B\u578B\u4E2D\u6709\u4E00\u4E2A\u79C1\u6709\u7684\u6784\u9020\u65B9\u6CD5</p><p><img src="`+K+`" alt=""></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>/**
 * \u679A\u4E3E\u7C7B\u578B\u7684\u5355\u4F8B
 * \u679A\u4E3E\u672C\u8EAB\u4E5F\u662F\u4E00\u4E2AClass\u7C7B
 */
public enum EnumSingle {
    INSTANCE;

    public EnumSingle getInstance() {
        return INSTANCE;
    }
}
class Test{
    public static void main(String[] args) throws Exception {
        final EnumSingle instance1 = EnumSingle.INSTANCE;
        final EnumSingle instance2 = EnumSingle.INSTANCE;

        System.out.println(instance1);
        System.out.println(instance2);


        final Constructor&lt;EnumSingle&gt; declaredConstructor = EnumSingle.class.getDeclaredConstructor(null);

        declaredConstructor.setAccessible(true);

        final EnumSingle enumSingle = declaredConstructor.newInstance();
        // Exception in thread &quot;main&quot; java.lang.NoSuchMethodException: com.example.juc.single.EnumSingle.&lt;init&gt;()
        System.out.println(enumSingle);

    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F46\u662F\u51FA\u73B0\u7684\u9519\u8BEF\u662F<code>NoSuchMethodException</code>\u6CA1\u6709\u8FD9\u4E2A\u65B9\u6CD5</p><p>\u901A\u8FC7javap\u53CD\u7F16\u8BD1\u4E4B\u540E\uFF0C\u53EF\u4EE5\u770B\u5230\u6709\u79C1\u6709\u7684\u6784\u9020\u65B9\u6CD5</p><p><img src="`+H+'" alt=""></p><p>\u4F7F\u7528jad\u53CD\u7F16\u8BD1class\u5B57\u8282\u7801\u6587\u4EF6</p><p><img src="'+V+`" alt=""></p><p>\u53D1\u73B0\u5B83\u6709\u4E00\u4E2A\u6784\u9020\u5668\uFF0C\u4F20\u5165\u53C2\u6570String\u548Cint</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u679A\u4E3E\u7C7B\u578B\u7684\u5355\u4F8B
 * \u679A\u4E3E\u672C\u8EAB\u4E5F\u662F\u4E00\u4E2AClass\u7C7B
 */</span>
<span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">EnumSingle</span> <span class="token punctuation">{</span>
    INSTANCE<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">EnumSingle</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> INSTANCE<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u4E1A\u52A1\u65B9\u6CD5
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test01&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">EnumSingle</span> instance1 <span class="token operator">=</span> <span class="token class-name">EnumSingle</span><span class="token punctuation">.</span>INSTANCE<span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">EnumSingle</span> instance2 <span class="token operator">=</span> <span class="token class-name">EnumSingle</span><span class="token punctuation">.</span>INSTANCE<span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>instance1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>instance2<span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token comment">//final Constructor&lt;EnumSingle&gt; declaredConstructor = EnumSingle.class.getDeclaredConstructor(null);</span>
        <span class="token keyword">final</span> <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">EnumSingle</span><span class="token punctuation">&gt;</span></span> declaredConstructor <span class="token operator">=</span> <span class="token class-name">EnumSingle</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredConstructor</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        declaredConstructor<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">final</span> <span class="token class-name">EnumSingle</span> enumSingle <span class="token operator">=</span> declaredConstructor<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Exception in thread &quot;main&quot; java.lang.NoSuchMethodException: com.example.juc.single.EnumSingle.&lt;init&gt;()</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>enumSingle<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A\u8868\u793A\u679A\u4E3E\u7C7B\u4E0D\u80FD\u901A\u8FC7\u53CD\u5C04\u521B\u5EFA</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token environment constant">INSTANCE</span>
<span class="token environment constant">INSTANCE</span>
Exception <span class="token keyword">in</span> thread <span class="token string">&quot;main&quot;</span> java.lang.IllegalArgumentException: Cannot reflectively create enum objects
	at java.lang.reflect.Constructor.newInstance<span class="token punctuation">(</span>Constructor.java:417<span class="token punctuation">)</span>
	at com.example.juc.single.Test.main<span class="token punctuation">(</span>EnumSingle.java:31<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5E8F\u5217\u5316\u80FD\u5426\u7834\u574F\u679A\u4E3E\u7C7B\u578B\u7684\u5355\u4F8B\uFF1F\u4E0D\u80FD</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">EnumSingle</span> instance1 <span class="token operator">=</span> <span class="token class-name">EnumSingle</span><span class="token punctuation">.</span>INSTANCE<span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">EnumSingle</span> instance2 <span class="token operator">=</span> <span class="token class-name">EnumSingle</span><span class="token punctuation">.</span>INSTANCE<span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>instance1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>instance2<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u68C0\u6D4B\u5E8F\u5217\u5316\u80FD\u5426\u7834\u574F\u679A\u4E3E\u7C7B\u578B\u7684\u5355\u4F8B</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> serialize <span class="token operator">=</span> <span class="token class-name">SerializationUtils</span><span class="token punctuation">.</span><span class="token function">serialize</span><span class="token punctuation">(</span>instance1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Object</span> deserialize <span class="token operator">=</span> <span class="token class-name">SerializationUtils</span><span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span>serialize<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>instance1 <span class="token operator">==</span> deserialize<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token environment constant">INSTANCE</span>
<span class="token environment constant">INSTANCE</span>
<span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6DF1\u5165\u7406\u89E3cas"><a class="header-anchor" href="#\u6DF1\u5165\u7406\u89E3cas" aria-hidden="true">#</a> \u6DF1\u5165\u7406\u89E3CAS</h2><h3 id="\u4EC0\u4E48\u662Fcas"><a class="header-anchor" href="#\u4EC0\u4E48\u662Fcas" aria-hidden="true">#</a> \u4EC0\u4E48\u662FCAS</h3><p>\u5927\u5382\u4F60\u5FC5\u987B\u8981\u6DF1\u5165\u7814\u7A76\u5E95\u5C42\uFF0C\u6240\u6709\u7A81\u7834\uFF0C\u4FEE\u70BC\u5185\u529F\uFF0C\u64CD\u4F5C\u7CFB\u7EDF\uFF0C\u7F51\u7EDC\u539F\u7406</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * CAS :compareAndSet\u6BD4\u8F83\u5E76\u4EA4\u6362
 * CAS \u662FCPU\u7684\u5E76\u53D1\u539F\u8BED
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CASDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token comment">// \u539F\u5B50\u7C7B\u7684\u5E95\u5C42\u4F7F\u7528\u4E86cas\uFF0C\u90A3\u6211\u4EEC\u600E\u4E48\u53BB\u786E\u5B9A\u5462\uFF1F</span>
        <span class="token class-name">AtomicInteger</span> atomicInteger <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token doc-comment comment">/**
         * public final boolean compareAndSet(int expect, int update)
         * expect \u671F\u671B
         * update \u66F4\u65B0
         */</span>
        <span class="token comment">// \u5982\u679C\u8FD9\u4E2A\u503C\u662F2020\uFF0C\u6211\u5C31\u628A\u8FD9\u4E2A\u503C\u6539\u62102021</span>
        <span class="token comment">// \u5982\u679C\u6211\u671F\u671B\u7684\u503C\u8FBE\u5230\u4E86\uFF0C\u90A3\u4E48\u4E45\u66F4\u65B0\uFF0C\u5426\u5219\uFF0C\u5C31\u4E0D\u66F4\u65B0</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>atomicInteger<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span> <span class="token number">2021</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>atomicInteger<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>atomicInteger<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span> <span class="token number">2021</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>atomicInteger<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="unsafe\u7C7B"><a class="header-anchor" href="#unsafe\u7C7B" aria-hidden="true">#</a> Unsafe\u7C7B</h3><p><img src="`+$+'" alt=""></p><p><img src="'+G+'" alt=""></p><h3 id="cas\u603B\u7ED3"><a class="header-anchor" href="#cas\u603B\u7ED3" aria-hidden="true">#</a> CAS\u603B\u7ED3</h3><p>\u6BD4\u8F83\u5F53\u524D\u5DE5\u4F5C\u5185\u5B58\u4E2D\u7684\u503C\u548C\u4E3B\u5185\u5B58\u4E2D\u7684\u503C\uFF0C\u5982\u679C\u8FD9\u4E2A\u503C\u662F\u671F\u671B\u7684\uFF0C\u90A3\u4E48\u5219\u6267\u884C\u64CD\u4F5C\uFF0C\u5982\u679C\u4E0D\u662F\u5C31\u4E00\u76F4\u5FAA\u73AF\uFF08\u56E0\u4E3A\u5E95\u5C42\u662F\u81EA\u65CB\u9501\uFF09</p><p>CAS\uFF1A\u4E09\u4E2A\u64CD\u4F5C\u6570\uFF1Aa(\u671F\u671B\u7684\u503C) c(\u6BD4\u8F83\u7684\u503C) c(\u66F4\u65B0\u7684\u503C)</p><p>\u7F3A\u70B9\uFF1A</p><ul><li>\u7531\u4E8E\u5E95\u5C42\u662F\u81EA\u65CB\u9501\uFF0C\u5FAA\u73AF\u4F1A\u6D6A\u8D39\u65F6\u95F4</li><li>\u4E00\u6B21\u53EA\u80FD\u4FDD\u8BC1\u4E00\u4E2A\u5171\u4EAB\u53D8\u91CF\u7684\u539F\u5B50\u6027</li><li>\u4F1A\u5B58\u5728ABA\u95EE\u9898</li></ul><h3 id="\u53EA\u8981\u6D89\u53CA\u5230cas\u5C31\u4F1A\u95EE\u5230\u7684aba\u95EE\u9898"><a class="header-anchor" href="#\u53EA\u8981\u6D89\u53CA\u5230cas\u5C31\u4F1A\u95EE\u5230\u7684aba\u95EE\u9898" aria-hidden="true">#</a> \u53EA\u8981\u6D89\u53CA\u5230CAS\u5C31\u4F1A\u95EE\u5230\u7684ABA\u95EE\u9898</h3><p>ABA\u95EE\u9898\uFF1A\u72F8\u732B\u6362\u592A\u5B50</p><p><img src="'+X+`" alt=""></p><p>\u4E24\u4E2A\u7EBF\u7A0B\uFF0C\u62FF\u5230A\u5171\u4EAB\u53D8\u91CF\uFF0C\u7EBF\u7A0B1\u5EA7cas\u64CD\u4F5C\uFF0C\u671F\u671BA\u662F1\uFF0C\u5E76\u5C06\u5B83\u6539\u62102\uFF0C\u7EBF\u7A0B2\u671F\u671BA\u662F1\u5E76\u5C06\u5B83\u6539\u62103\uFF0C\u968F\u540E\u53C8\u6539\u4E86\u56DE\u6765\uFF0C\u867D\u7136\u8FD9\u4E2A\u65F6\u5019\u7684A\u8FD8\u662F\u7B49\u4E8E1\uFF0C\u4F46\u662F\u5DF2\u7ECF\u662F\u88AB\u4FEE\u6539\u8FC7\u7684\u4E86</p><p>\u4E5F\u5C31\u662F\u8BF4\uFF0C\u4ED6\u4EE5\u4E3A\u4ED6\u6CA1\u6709\u88AB\u9A97\uFF08A\u6CA1\u6709\u6539\u53D8\uFF09\uFF0C\u4F46\u662F\u5B9E\u9645\u4E0A\u5DF2\u7ECF\u88AB\u9A97\u4E86\uFF08\u88ABB\u4FEE\u6539\u4E86\uFF09</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * CAS :compareAndSet\u6BD4\u8F83\u5E76\u4EA4\u6362
 * CAS \u662FCPU\u7684\u5E76\u53D1\u539F\u8BED
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CASDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token comment">// \u539F\u5B50\u7C7B\u7684\u5E95\u5C42\u4F7F\u7528\u4E86cas\uFF0C\u90A3\u6211\u4EEC\u600E\u4E48\u53BB\u786E\u5B9A\u5462\uFF1F</span>
        <span class="token class-name">AtomicInteger</span> atomicInteger <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token doc-comment comment">/**
         * public final boolean compareAndSet(int expect, int update)
         * expect \u671F\u671B
         * update \u66F4\u65B0
         */</span>
        <span class="token comment">// \u5982\u679C\u8FD9\u4E2A\u503C\u662F2020\uFF0C\u6211\u5C31\u628A\u8FD9\u4E2A\u503C\u6539\u62102021</span>
        <span class="token comment">// \u5982\u679C\u6211\u671F\u671B\u7684\u503C\u8FBE\u5230\u4E86\uFF0C\u90A3\u4E48\u4E45\u66F4\u65B0\uFF0C\u5426\u5219\uFF0C\u5C31\u4E0D\u66F4\u65B0</span>

        <span class="token comment">// \u6363\u4E71\u7684\u7EBF\u7A0B</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>atomicInteger<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span> <span class="token number">2021</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>atomicInteger<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>atomicInteger<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token number">2021</span><span class="token punctuation">,</span> <span class="token number">2020</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>atomicInteger<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u671F\u671B\u7684\u7EBF\u7A0B</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>atomicInteger<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span> <span class="token number">2021</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>atomicInteger<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u4E8E\u6211\u4EEC\u5E73\u65F6\u5199\u7684sql\uFF1A\u4E50\u89C2\u9501</p><p>\u5982\u4F55\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\uFF0C\u90A3\u5C31\u662F\u539F\u5B50\u5F15\u7528\u3002</p><h2 id="\u539F\u5B50\u5F15\u7528-\u5E26\u7248\u672C\u53F7\u7684\u539F\u5B50\u64CD\u4F5C"><a class="header-anchor" href="#\u539F\u5B50\u5F15\u7528-\u5E26\u7248\u672C\u53F7\u7684\u539F\u5B50\u64CD\u4F5C" aria-hidden="true">#</a> \u539F\u5B50\u5F15\u7528\uFF1A\u5E26\u7248\u672C\u53F7\u7684\u539F\u5B50\u64CD\u4F5C</h2><p>Integer \u4F7F\u7528\u4E86\u5BF9\u8C61\u7F13\u5B58\u673A\u5236\uFF0C\u9ED8\u8BA4\u8303\u56F4\u662F-128~127\uFF0C\u63A8\u8350\u4F7F\u7528\u9759\u6001\u5DE5\u5382\u65B9\u6CD5valueOf\u83B7\u53D6\u5BF9\u8C61\u5B9E\u4F8B\uFF0C\u800C\u4E0D\u662Fnew\uFF0C\u56E0\u4E3AvalueOf\u4F7F\u7528\u7F13\u5B58\uFF0C\u800Cnew\u4E00\u5B9A\u4F1A\u521B\u5EFA\u65B0\u7684\u5BF9\u8C61\u5206\u914D\u65B0\u7684\u5185\u5B58\u7A7A\u95F4</p><p>\u4E3A\u4E86\u89E3\u51B3\u6211\u4EEC\u4E0D\u77E5\u9053\u522B\u4EBA\u5DF2\u7ECF\u4FEE\u6539\u8FC7\u6211\u4EEC\u7684\u6570\u636E\u7684\u8FD9\u4E2A\u95EE\u9898\uFF0C\u6DFB\u52A0\u4E00\u4E2A\u7248\u672C\u53F7\u6765\u4F5C\u4E3A\u4FEE\u6539\u7684\u6B21\u6570\u8BB0\u5F55\uFF0C \u5F53\u7EBF\u7A0BA\u548C\u7EBF\u7A0BB\u83B7\u53D6\u5230\u4E86\u5F53\u524D\u7684\u7248\u672C\u53F7\uFF08\u662F\u4E00\u6837\u7684\uFF09\uFF0C\u4E4B\u540EA\u4F11\u7720\u7684\u65F6\u95F4\u6BD4B\u5C11\uFF0C\u51FA\u6765\u64CD\u4F5C\uFF08\u4F46\u662F\u64CD\u4F5C\u4E4B\u540E\u628A\u503C\u53C8\u6539\u56DE\u4E86\u539F\u6765\u7684\u503C\uFF09\uFF0C\u90A3\u4E48\u6B64\u65F6B\u600E\u4E48\u77E5\u9053\u6211\u7684\u503C\u8FD8\u662F\u4E0D\u662F\u6211\u539F\u6765\u83B7\u53D6\u7684\u503C\uFF0C\u800C\u4E0D\u662F\u522B\u4EBA\u6539\u4E86\u4E4B\u540E\u53C8\u6539\u56DE\u6765\u7684\u503C\u5462\uFF1F\u6B64\u65F6\u901A\u8FC7\u7248\u672C\u53F7\u5C31\u77E5\u9053\u522B\u4EBA\u6539\u8FC7\u4E86\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u8981\u6C42\uFF1AA\u7EBF\u7A0B\u505A\u4E86\u4EC0\u4E48\u64CD\u4F5C\uFF0CB\u7EBF\u7A0B\u662F\u77E5\u9053\u7684
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AtomicStampedReferenceDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">final</span> <span class="token class-name">AtomicStampedReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> atomicInteger <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicStampedReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">final</span> <span class="token keyword">int</span> stamp <span class="token operator">=</span> atomicInteger<span class="token punctuation">.</span><span class="token function">getStamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u83B7\u5F97\u7248\u672C\u53F7</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;a1=&gt;&quot;</span> <span class="token operator">+</span> stamp<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;a2=&gt;&quot;</span> <span class="token operator">+</span> atomicInteger<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> atomicInteger<span class="token punctuation">.</span><span class="token function">getStamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> atomicInteger<span class="token punctuation">.</span><span class="token function">getStamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;a2=&gt;&quot;</span> <span class="token operator">+</span> atomicInteger<span class="token punctuation">.</span><span class="token function">getStamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;a3=&gt;&quot;</span> <span class="token operator">+</span> atomicInteger<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> atomicInteger<span class="token punctuation">.</span><span class="token function">getStamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> atomicInteger<span class="token punctuation">.</span><span class="token function">getStamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;a3=&gt;&quot;</span> <span class="token operator">+</span> atomicInteger<span class="token punctuation">.</span><span class="token function">getStamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token comment">// \u4E50\u89C2\u9501\u7684\u539F\u7406\u76F8\u540C</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">final</span> <span class="token keyword">int</span> stamp <span class="token operator">=</span> atomicInteger<span class="token punctuation">.</span><span class="token function">getStamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u83B7\u5F97\u7248\u672C\u53F7</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;b1=&gt;&quot;</span> <span class="token operator">+</span> stamp<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;b2=&gt;&quot;</span> <span class="token operator">+</span> atomicInteger<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> stamp<span class="token punctuation">,</span> stamp <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;b2=&gt;&quot;</span> <span class="token operator">+</span> atomicInteger<span class="token punctuation">.</span><span class="token function">getStamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token assign-left variable">a1</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">b1</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token assign-left variable">a2</span><span class="token operator">=</span><span class="token operator">&gt;</span>true
<span class="token assign-left variable">a2</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">2</span>
<span class="token assign-left variable">a3</span><span class="token operator">=</span><span class="token operator">&gt;</span>true
<span class="token assign-left variable">a3</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">3</span>
<span class="token assign-left variable">b2</span><span class="token operator">=</span><span class="token operator">&gt;</span>false
<span class="token assign-left variable">b2</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u53EF\u91CD\u5165\u9501\u3001\u516C\u5E73\u9501\u3001\u975E\u516C\u5E73\u9501\u3001\u81EA\u65CB\u9501\u3001\u6B7B\u9501"><a class="header-anchor" href="#\u53EF\u91CD\u5165\u9501\u3001\u516C\u5E73\u9501\u3001\u975E\u516C\u5E73\u9501\u3001\u81EA\u65CB\u9501\u3001\u6B7B\u9501" aria-hidden="true">#</a> \u53EF\u91CD\u5165\u9501\u3001\u516C\u5E73\u9501\u3001\u975E\u516C\u5E73\u9501\u3001\u81EA\u65CB\u9501\u3001\u6B7B\u9501</h2><h3 id="\u516C\u5E73\u9501\u3001\u975E\u516C\u5E73\u9501"><a class="header-anchor" href="#\u516C\u5E73\u9501\u3001\u975E\u516C\u5E73\u9501" aria-hidden="true">#</a> \u516C\u5E73\u9501\u3001\u975E\u516C\u5E73\u9501</h3><p>\u516C\u5E73\u9501\uFF1A\u975E\u5E38\u516C\u5E73\uFF0C\u4E0D\u80FD\u63D2\u961F\uFF0C\u7EBF\u7A0B\u8FDB\u6765\uFF0C\u5FC5\u987B\u5148\u6765\u540E\u5230 \u975E\u516C\u5E73\u9501\uFF1A\u975E\u5E38\u4E0D\u516C\u5E73\uFF0C\u53EF\u4EE5\u63D2\u961F\uFF0C\u540E\u9762\u6765\u7684\u4EBA\u53EF\u4EE5\u63D2\u5230\u524D\u9762\uFF08\u9ED8\u8BA4\u90FD\u662F\u975E\u516C\u5E73\uFF09</p><p>\u4E24\u4E2A\u8FDB\u7A0B\uFF1A\u4E00\u4E2A3h\u6267\u884C\u5B8C\uFF0C\u4E00\u4E2A3s\u6267\u884C\u5B8C\uFF0C3s\u6392\u53F7\u7684\u65F6\u5019\u57283h\u7684\u540E\u9762\uFF0C3s\u7684\u4E3A\u4E86\u62FF\u5230CPU\u76843s\u9700\u8981\u7B49\u5F853h\uFF0C\u8FD9\u6709\u5FC5\u8981\u5417\uFF1F</p><h3 id="\u53EF\u91CD\u5165\u9501"><a class="header-anchor" href="#\u53EF\u91CD\u5165\u9501" aria-hidden="true">#</a> \u53EF\u91CD\u5165\u9501</h3><p>\u6240\u6709\u7684\u9501\u90FD\u662F\u53EF\u91CD\u5165\u9501\uFF08\u4E5F\u53EB\u9012\u5F52\u9501\uFF09</p><p><img src="`+Y+`" alt=""></p><ol><li>Synchronized</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u53EF\u91CD\u5165\u9501\u6D4B\u8BD5
 * Synchronized
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo01</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">Phone</span> phone <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            phone<span class="token punctuation">.</span><span class="token function">sms</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            phone<span class="token punctuation">.</span><span class="token function">sms</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Phone</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">sms</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; sms&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u8FD9\u91CC\u4E5F\u6709\u9501</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; call&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C</p><p><strong>A\u7EBF\u7A0B\u5728\u8F93\u51FAsms\u4E4B\u540E\uFF0C\u4E00\u5B9A\u4F1A\u6267\u884Ccall\u8868\u660E\u5F53call\u81EA\u5DF1\u6709\u9501\uFF0C\u5916\u9762\u8FD8\u6709\u4E00\u4E2Asms\u7684\u9501\u7684\u65F6\u5019\uFF0C\u4E00\u65E6A\u83B7\u53D6\u5230\u4E86sms\u7684\u9501\uFF0C\u5C31\u4F1A\u81EA\u52A8\u83B7\u53D6\u5230\u91CC\u9762\u7684\u9501</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>A sms
A call
B sms
B call
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>Lock</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u53EF\u91CD\u5165\u9501\u6D4B\u8BD5
 * Lock
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo02</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">Phone2</span> phone <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phone2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            phone<span class="token punctuation">.</span><span class="token function">sms</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            phone<span class="token punctuation">.</span><span class="token function">sms</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Phone2</span> <span class="token punctuation">{</span>
    <span class="token class-name">Lock</span> lock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u9501\u5FC5\u987B\u914D\u5BF9\uFF0C\u5426\u5219\u5C31\u4F1A\u6B7B\u5728\u91CC\u9762</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sms</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u7EC6\u8282\u95EE\u9898\uFF1A\u8FD9\u91CC\u9501\u4E86\u4E00\u6B21\uFF0C\u7136\u540E\u8C03\u7528call\u7684\u65F6\u5019\u53C8\u9501\u4E86\u4E00\u6B21\uFF0C\u4E5F\u5C31\u662FA\u4E00\u4E0B\u5B50\u83B7\u53D6\u4E86\u4E24\u628A\u94A5\u5319</span>
        lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u4E24\u628A\u9501\uFF0C\u5C31\u8981\u89E3\u9501\u4E24\u6B21</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; sms&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u8FD9\u91CC\u4E5F\u6709\u9501</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            ex<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; call&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            ex<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u81EA\u65CB\u9501-spinlock"><a class="header-anchor" href="#\u81EA\u65CB\u9501-spinlock" aria-hidden="true">#</a> \u81EA\u65CB\u9501 SpinLock</h3><p>\u4E0D\u65AD\u7684\u904D\u5386\u5C1D\u8BD5\uFF0C\u76F4\u5230\u6210\u529F\u4E3A\u6B62</p><blockquote><p>sun.misc.Unsafe</p></blockquote><p>\u4E2D\u7684\u51FD\u6570\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">getAndAddInt</span><span class="token punctuation">(</span><span class="token class-name">Object</span> var1<span class="token punctuation">,</span> <span class="token keyword">long</span> var2<span class="token punctuation">,</span> <span class="token keyword">int</span> var4<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> var5<span class="token punctuation">;</span>
    <span class="token keyword">do</span> <span class="token punctuation">{</span>
        var5 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getIntVolatile</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">compareAndSwapInt</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var2<span class="token punctuation">,</span> var5<span class="token punctuation">,</span> var5 <span class="token operator">+</span> var4<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> var5<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u5B9E\u73B0\u81EA\u65CB\u9501"><a class="header-anchor" href="#\u5B9E\u73B0\u81EA\u65CB\u9501" aria-hidden="true">#</a> \u5B9E\u73B0\u81EA\u65CB\u9501</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u81EA\u65CB\u9501
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpinLockDemo</span> <span class="token punctuation">{</span>
    <span class="token class-name">AtomicReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Thread</span><span class="token punctuation">&gt;</span></span> atomicReference <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicReference</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u52A0\u9501</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">myLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">Thread</span> thread <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>thread<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; myLock&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">while</span> <span class="token punctuation">(</span>atomicReference<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> thread<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>


    <span class="token comment">// \u89E3\u9501</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">myUnLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">Thread</span> thread <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>thread<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; myUnLock&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        atomicReference<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>thread<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpinLockDemoTest</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">SpinLockDemo</span> lock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpinLockDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            lock<span class="token punctuation">.</span><span class="token function">myLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                ex<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                lock<span class="token punctuation">.</span><span class="token function">myUnLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            lock<span class="token punctuation">.</span><span class="token function">myLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                ex<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                lock<span class="token punctuation">.</span><span class="token function">myUnLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>A myLock
B myLock
A myUnLock
B myUnLock
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E00\u5B9A\u7684\u662F\u7B49\u5F85A\u7EBF\u7A0B\u89E3\u9501\u4E4B\u540EB\u7EBF\u7A0B\u624D\u80FD\u83B7\u53D6\u5230\u9501\uFF0C\u5728\u8FD9\u4E4B\u524D\uFF0CB\u7EBF\u7A0B\u90FD\u53EA\u80FD\u5728while\u5FAA\u73AF\u90A3\u91CC\u4E00\u76F4\u7B49\u5F85\u83B7\u53D6\u9501</p><h3 id="\u6B7B\u9501"><a class="header-anchor" href="#\u6B7B\u9501" aria-hidden="true">#</a> \u6B7B\u9501</h3><h4 id="\u6B7B\u9501\u662F\u4EC0\u4E48"><a class="header-anchor" href="#\u6B7B\u9501\u662F\u4EC0\u4E48" aria-hidden="true">#</a> \u6B7B\u9501\u662F\u4EC0\u4E48</h4><p>\u4E24\u4E2A\u7EBF\u7A0B\u4E92\u76F8\u62A2\u5360\u8D44\u6E90\uFF0C\u6301\u6709\u4E00\u4E2A\u9501\uFF0C\u5E76\u89C6\u56FE\u83B7\u53D6\u5BF9\u65B9\u7684\u9501</p><p><img src="`+Z+`" alt=""></p><h4 id="\u6B7B\u9501\u6D4B\u8BD5"><a class="header-anchor" href="#\u6B7B\u9501\u6D4B\u8BD5" aria-hidden="true">#</a> \u6B7B\u9501\u6D4B\u8BD5</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DeadLockDemo</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> lockA <span class="token operator">=</span><span class="token string">&quot;lockA&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> lockB <span class="token operator">=</span><span class="token string">&quot;lockB&quot;</span><span class="token punctuation">;</span>

        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyThread</span><span class="token punctuation">(</span>lockA<span class="token punctuation">,</span>lockB<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyThread</span><span class="token punctuation">(</span>lockB<span class="token punctuation">,</span>lockA<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">MyThread</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> lockA<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> lockB<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">MyThread</span><span class="token punctuation">(</span><span class="token class-name">String</span> lockA<span class="token punctuation">,</span> <span class="token class-name">String</span> lockB<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>lockA <span class="token operator">=</span> lockA<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>lockB <span class="token operator">=</span> lockB<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>lockA<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; lock &quot;</span> <span class="token operator">+</span> lockA <span class="token operator">+</span> <span class="token string">&quot;=&gt; get &quot;</span> <span class="token operator">+</span> lockB<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>lockB<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; lock &quot;</span> <span class="token operator">+</span> lockB <span class="token operator">+</span> <span class="token string">&quot;=&gt; get &quot;</span> <span class="token operator">+</span> lockA<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+nn+'" alt=""></p><h4 id="\u600E\u4E48\u6392\u9664\u6B7B\u9501"><a class="header-anchor" href="#\u600E\u4E48\u6392\u9664\u6B7B\u9501" aria-hidden="true">#</a> \u600E\u4E48\u6392\u9664\u6B7B\u9501</h4><ol><li>\u4F7F\u7528<code>jps -l</code>\u5B9A\u4F4D\u8FDB\u7A0B\u53F7</li></ol><p><img src="'+sn+'" alt=""></p><ol start="2"><li>\u4F7F\u7528<code>jstack \u8FDB\u7A0B\u53F7</code>\u67E5\u770B\u8FDB\u7A0B\u4FE1\u606F</li></ol><p><img src="'+an+'" alt=""></p><p>\u9762\u8BD5\u6216\u8005\u5DE5\u4F5C\u4E2D\uFF0C\u53BB\u6392\u67E5\u95EE\u9898</p><ul><li>\u65E5\u5FD7</li><li>\u5806\u6808\u4FE1\u606F</li></ul>',557);function en(cn,on){return tn}var un=n(pn,[["render",en],["__file","01.JUC\u5E76\u53D1\u7F16\u7A0B.html.vue"]]);export{un as default};
