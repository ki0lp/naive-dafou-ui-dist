import{_ as n,c as s}from"./app.57a7fbdc.js";var a="/naive-dafou-ui-dist/assets/20210221223351388.24e5ba8d.png",t="/naive-dafou-ui-dist/assets/image-20220220140547506.25dbb1cf.png",p="/naive-dafou-ui-dist/assets/image-20220220005415570.622a6806.png",e="/naive-dafou-ui-dist/assets/image-20220220005650218.42e9049f.png",o="/naive-dafou-ui-dist/assets/image-20220220000059546.b14693c7.png",c="/naive-dafou-ui-dist/assets/image-20220220000114530.3f4ae3f3.png",l="/naive-dafou-ui-dist/assets/image-20220220004555234.237d1c9c.png",i="/naive-dafou-ui-dist/assets/image-20220220000149240.5b3d4cd5.png",u="/naive-dafou-ui-dist/assets/image-20220220000229189.622cfab4.png",k="/naive-dafou-ui-dist/assets/image-20220220000410375.17900f03.png",r="/naive-dafou-ui-dist/assets/image-20220220000442306.256267bd.png",d="/naive-dafou-ui-dist/assets/image-20220220000512059.1c4ef9c1.png",v="/naive-dafou-ui-dist/assets/image-20220220000544417.21761aa2.png",m="/naive-dafou-ui-dist/assets/image-20220220000645305.684f17ea.png",b="/naive-dafou-ui-dist/assets/image-20220220000724198.00b64f3f.png",f="/naive-dafou-ui-dist/assets/image-20220220000850019.689fba4e.png",g="/naive-dafou-ui-dist/assets/image-20220220000923723.2050b0cf.png",h="/naive-dafou-ui-dist/assets/image-20220220000947174.a29c0764.png",w="/naive-dafou-ui-dist/assets/image-20220220001022237.ac92c10f.png",y="/naive-dafou-ui-dist/assets/image-20220220001032188.bfac9565.png",S="/naive-dafou-ui-dist/assets/image-20220220001052861.f9d819a6.png",C="/naive-dafou-ui-dist/assets/image-20220220001139397.9c416d68.png",q="/naive-dafou-ui-dist/assets/image-20220220001230469.87596b0f.png",E="/naive-dafou-ui-dist/assets/image-20220220001257818.85874703.png",x="/naive-dafou-ui-dist/assets/image-20220220001311743.58875025.png",T="/naive-dafou-ui-dist/assets/image-20220220001339633.f6e60c6d.png",I="/naive-dafou-ui-dist/assets/image-20220220001409856.43a05d05.png",A="/naive-dafou-ui-dist/assets/image-20220220001437662.d7417ae3.png",L="/naive-dafou-ui-dist/assets/image-20220220001508011.56fa3556.png",_="/naive-dafou-ui-dist/assets/image-20220220144458268.63dff9fe.png",R="/naive-dafou-ui-dist/assets/image-20220220134641695.4f065f33.png",B="/naive-dafou-ui-dist/assets/image-20220220134816280.927dafad.png",j="/naive-dafou-ui-dist/assets/image-20220220140229739.b7f77155.png",P="/naive-dafou-ui-dist/assets/image-20220220145106661.d38cc543.png",O="/naive-dafou-ui-dist/assets/20210223224506811.e19b7942.png",N="/naive-dafou-ui-dist/assets/20210223225907471.95af665d.png",H="/naive-dafou-ui-dist/assets/image-20220220171433118.82110b7e.png",D="/naive-dafou-ui-dist/assets/image-20220220171603198.d46574ab.png",M="/naive-dafou-ui-dist/assets/image-20220220171806883.ad79315d.png",F="/naive-dafou-ui-dist/assets/image-20220220172047046.7df72649.png",z="/naive-dafou-ui-dist/assets/image-20220220172141664.8593b633.png",V="/naive-dafou-ui-dist/assets/image-20220220172316553.c1e2de72.png",W="/naive-dafou-ui-dist/assets/image-20220220151536894.cd51a77d.png",U="/naive-dafou-ui-dist/assets/image-20220220151720665.0bc68f26.png",J="/naive-dafou-ui-dist/assets/20210223235822523-20220220172352668.a39c6260.png",G="/naive-dafou-ui-dist/assets/20210224213841909.bd69684d.png",K="/naive-dafou-ui-dist/assets/20210224213923292.f281cf1a.png",Y="/naive-dafou-ui-dist/assets/20210224214009386.8f405185.png",X="/naive-dafou-ui-dist/assets/20210224231418703.6b6d008f.png",$="/naive-dafou-ui-dist/assets/20210224231442163.8756622b.png",Z="/naive-dafou-ui-dist/assets/20210224231506491.3288b154.png",Q="/naive-dafou-ui-dist/assets/20210224231753531.259f15e6.png",nn="/naive-dafou-ui-dist/assets/20210224231945456.3d569b8c.png",sn="/naive-dafou-ui-dist/assets/20210224232004296.d7bd0c71.png",an="/naive-dafou-ui-dist/assets/20210224232611166.50c20e19.png",tn="/naive-dafou-ui-dist/assets/20210224232905441.b91afbb2.png",pn="/naive-dafou-ui-dist/assets/20210224233950850.7be07ed0.png",en="/naive-dafou-ui-dist/assets/20210224234809386.a8b99fe0.png",on="/naive-dafou-ui-dist/assets/20210224235810353.45e8de8e.png",cn="/naive-dafou-ui-dist/assets/image-20220220174117241.a84ed6cd.png",ln="/naive-dafou-ui-dist/assets/20210225222048778.c543bbca.png",un="/naive-dafou-ui-dist/assets/20210225222235376.4f228351.png",kn="/naive-dafou-ui-dist/assets/20210225224753687.3f52d5c2.png",rn="/naive-dafou-ui-dist/assets/20210225225024605.7ff0e16e.png",dn="/naive-dafou-ui-dist/assets/20210225225130426.fc411104.png",vn="/naive-dafou-ui-dist/assets/20210225225224507.fcf23b23.png",mn="/naive-dafou-ui-dist/assets/20210225230306166.237974d1.png",bn="/naive-dafou-ui-dist/assets/20210225230619604.73cb257b.png",fn="/naive-dafou-ui-dist/assets/2021022523085354.bffe0730.png",gn="/naive-dafou-ui-dist/assets/20210225232438453.1110e3d4.png",hn="/naive-dafou-ui-dist/assets/2021022523252350.45488a6b.png",wn="/naive-dafou-ui-dist/assets/20210225232830849.ac43bb8d.png",yn="/naive-dafou-ui-dist/assets/20210225232851700.dd5e29da.png",Sn="/naive-dafou-ui-dist/assets/image-20220220221922392.371852e9.png",Cn="/naive-dafou-ui-dist/assets/image-20220220223734675.38dfb8c7.png",qn="/naive-dafou-ui-dist/assets/image-20220221001358665.91538910.png",En="/naive-dafou-ui-dist/assets/image-20220221001655198.34ba40aa.png",xn="/naive-dafou-ui-dist/assets/image-20220221001744008.92163975.png",Tn="/naive-dafou-ui-dist/assets/image-20220221131106506.0aaaa524.png",In="/naive-dafou-ui-dist/assets/image-20220221133033026.8a71bd25.png",An="/naive-dafou-ui-dist/assets/image-20220221133508707.bc1e8d1d.png",Ln="/naive-dafou-ui-dist/assets/image-20220221142301604.76e7e368.png",_n="/naive-dafou-ui-dist/assets/image-20220222001143673.ef77479f.png",Rn="/naive-dafou-ui-dist/assets/image-20220222001522956.8ca3f03f.png",Bn="/naive-dafou-ui-dist/assets/image-20220222161243973.cbb5d501.png",jn="/naive-dafou-ui-dist/assets/image-20220222010731724.9bb48235.png",Pn="/naive-dafou-ui-dist/assets/image-20220222011001955.e198a7ac.png",On="/naive-dafou-ui-dist/assets/image-20220222000643932.b838d014.png",Nn="/naive-dafou-ui-dist/assets/image-20220222152104907.59b7e36f.png",Hn="/naive-dafou-ui-dist/assets/image-20220221201451969.c13b6df3.png",Dn="/naive-dafou-ui-dist/assets/image-20220221203906270.4e4e40e8.png",Mn="/naive-dafou-ui-dist/assets/image-20220221205219692.1ac8080d.png",Fn="/naive-dafou-ui-dist/assets/image-20220221213554025.90002c02.png",zn="/naive-dafou-ui-dist/assets/image-20220222174141156.d8b41694.png",Vn="/naive-dafou-ui-dist/assets/image-20220222174238110.5df1a1db.png",Wn="/naive-dafou-ui-dist/assets/image-20220222180518776.55958cee.png",Un="/naive-dafou-ui-dist/assets/image-20220222181402064.f04d01c8.png",Jn="/naive-dafou-ui-dist/assets/image-20220222183853851.3bfad318.png",Gn="/naive-dafou-ui-dist/assets/image-20220223153833366.d0997f68.png",Kn="/naive-dafou-ui-dist/assets/image-20220223161121862.1b1f06fd.png",Yn="/naive-dafou-ui-dist/assets/image-20220223162225511.8fd3e045.png",Xn="/naive-dafou-ui-dist/assets/image-20220223162809888.f3b96d3b.png",$n="/naive-dafou-ui-dist/assets/image-20220223170841612.e3978131.png",Zn="/naive-dafou-ui-dist/assets/image-20220223171848865.a69ec0d5.png",Qn="/naive-dafou-ui-dist/assets/image-20220223222904771.5978b750.png",ns="/naive-dafou-ui-dist/assets/image-20220223230818607.9066d949.png",ss="/naive-dafou-ui-dist/assets/image-20220224155519552.1938aa1a.png",as="/naive-dafou-ui-dist/assets/image-20220223232309188.c68817ff.png",ts="/naive-dafou-ui-dist/assets/image-20220224000030068.64d1cfbc.png",ps="/naive-dafou-ui-dist/assets/image-20220225002702709.7ade5d23.png",es="/naive-dafou-ui-dist/assets/image-20220225012724660.1cad9115.png",os="/naive-dafou-ui-dist/assets/image-20220225013622946.8ac53b27.png",cs="/naive-dafou-ui-dist/assets/image-20220225021058768.79ca3f13.png",ls="/naive-dafou-ui-dist/assets/image-20220225160129037.61b267dd.png",is="/naive-dafou-ui-dist/assets/image-20220225154032873.57367ef3.png",us="/naive-dafou-ui-dist/assets/image-20220225155628976.c6d86836.png",ks="/naive-dafou-ui-dist/assets/image-20220225161523064.1fda256e.png",rs="/naive-dafou-ui-dist/assets/image-20220225162520292.1cfc946d.png",ds="/naive-dafou-ui-dist/assets/image-20220225164656756.4450d070.png",vs="/naive-dafou-ui-dist/assets/image-20220225171930856.8f777929.png",ms="/naive-dafou-ui-dist/assets/image-20220225163929644.dae3c0a6.png",bs="/naive-dafou-ui-dist/assets/image-20220226153947177.7e314cdd.png",fs="/naive-dafou-ui-dist/assets/image-20220226154512613.b7a1949f.png";const gs={},hs=s('<h2 id="\u524D\u8A00"><a class="header-anchor" href="#\u524D\u8A00" aria-hidden="true">#</a> \u524D\u8A00</h2><p>\u57FA\u4E8ETomcat7</p><p><img src="'+a+`" alt="\u5728\u8FD9\u91CC\u63D2\u5165\u56FE\u7247\u63CF\u8FF0"></p><ol><li><code>Tomcat</code>\u662F\u4E00\u4E2A<code>Servlet</code>\u5BB9\u5668\u3002</li><li>\u4F7F\u7528<code>Java</code>\u4EE3\u7801\u6A21\u62DF\u4E00\u4E2A<code>Tomcat</code>\u5BB9\u5668\uFF1A</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Tomcat</span><span class="token punctuation">{</span>
	<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Servlet</span><span class="token punctuation">&gt;</span></span> servlets<span class="token punctuation">;</span>
	<span class="token class-name">Connector</span> connect<span class="token punctuation">;</span><span class="token comment">//\u5904\u7406\u8BF7\u6C42\uFF0C\u751F\u6210\u4E86Request</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>\u56DE\u987E<code>servlet</code>\u7684\u5B9A\u4E49</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyHttpServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        resp<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;http&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u95EE\u98981\uFF1A\u6211\u4EEC\u5B9A\u4E49\u7684<code>servlet</code>\uFF0C\u5B83\u7684\u5B9E\u4F8B\u662F\u600E\u4E48\u751F\u6210\u7684\uFF1F<code>doGet</code>\u65B9\u6CD5\u53C8\u662F\u600E\u4E48\u8C03\u7528\u5230\u7684\u5462\uFF1F\u5728\u54EA\u6267\u884C\u7684\uFF1F</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">MyHttpServlet</span> myHttpServlet<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">MyHttpServlet</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
myHttpServlet<span class="token punctuation">.</span><span class="token function">doGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u95EE\u98982\uFF1A\u8C03\u7528doGet()\u65B9\u6CD5\u65F6\uFF0CHttpServletRequest\uFF0CHttpServletResponse\u90FD\u662F\u63A5\u53E3\uFF0C\u90A3\u4E48\u5165\u53C2\u7684\u5B9E\u9645\u7C7B\u578B\u662F\u4EC0\u4E48\uFF1F</p><p>\u5B9E\u9645\u4E0AHttpServletRequest\uFF0CHttpServletResponse\u63A5\u53E3\u7684\u5B9E\u73B0\u7C7B\uFF0C\u7531servlet\u5BB9\u5668\u5B9E\u73B0\uFF0C\u6BD4\u5982\uFF1Atomcat,jetty\u3002\u6211\u4EEC\u628A\u9879\u76EE\u90E8\u7F72\u5230tomcat\u4E2D\uFF0Ctomcat\u5C31\u63D0\u4F9B\u4E86\u4E00\u4E2AHttpServletRequest\u548CHttpServletResponse\u7684\u5B9E\u73B0\u7C7B\uFF0C\u90E8\u7F72\u5230jetty,jetty\u5C31\u63D0\u4F9B\u4E86\u76F8\u5E94\u7684\u5B9E\u73B0\u7C7B\uFF0C\u8FD9\u662F\u4E00\u4E2A\u89C4\u8303\u3002 \u5176\u4E2D\uFF0C\u5728Tomcat\u4E2D\uFF0CHttpServletRequest\u7684\u5B9E\u73B0\u7C7B\u5C31\u662FRequestFacade</p><ol start="4"><li>RequestFacade-\u95E8\u9762\u6A21\u5F0F</li></ol><p>RequestFacade\u5B9E\u73B0\u4E86HttpServletRequest\uFF0C\u5145\u5F53\u95E8\u9762\u6A21\u5F0F\u4E2D\u7684\u5916\u89C2\u7C7B\u3002RequestFacade\u5C4F\u853D\u5185\u90E8\u5B50\u7CFB\u7EDF\u7684\u7EC6\u8282\u3002</p><p>RequestFacade\u4EE3\u8868\u7684\u662F\u4E00\u4E2A\u8BF7\u6C42\uFF0C\u5B9E\u9645\u4E0A\u662FRequestFacade\u7684\u5C5E\u6027Request,\u624D\u662F\u771F\u6B63\u4EE3\u8868\u7684\u4E00\u4E2A\u8BF7\u6C42\uFF0C\u5916\u754C\u7684http\u8BF7\u6C42\u4FE1\u606F\uFF0C\u90FD\u5C01\u88C5\u5728\u8FD9\u4E2ARequest\u5BF9\u8C61\u4E2D\uFF0C\u53EA\u662F\u5229\u7528\u95E8\u9762\u6A21\u5F0F\u7684\u5916\u89C2\u7C7B\uFF0C\u628A\u5B83\u5C4F\u853D\u5728\u91CC\u9762\u4E86\u3002</p><p>Request\u672C\u8EAB\u4E5F\u662F\u5B9E\u73B0\u4E86\u63A5\u53E3HttpServletRequest</p><ol start="5"><li>Tomcat\u7684\u4E09\u79CD\u90E8\u7F72\u65B9\u5F0F</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
     * Deploy applications for any directories or WAR files that are found
     * in our &quot;application root&quot; directory.
     * \u90E8\u7F72\u5E94\u7528\u7684\u4E09\u79CD\u65B9\u5F0F
     * 1. \u63CF\u8FF0\u7B26\u90E8\u7F72
     * 2. War\u5305\u90E8\u7F72
     * 3. \u6587\u4EF6\u5939\u90E8\u7F72
     *
     * \u53E6\u5916Tomcat\u4E2D\u662F\u4F7F\u7528\u5F02\u6B65\u591A\u7EBF\u7A0B\u7684\u65B9\u5F0F\u90E8\u7F72\u5E94\u7528\u7684
     */</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">deployApps</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

  <span class="token class-name">File</span> appBase <span class="token operator">=</span> <span class="token function">appBase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">File</span> configBase <span class="token operator">=</span> <span class="token function">configBase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> filteredAppPaths <span class="token operator">=</span> <span class="token function">filterAppPaths</span><span class="token punctuation">(</span>appBase<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// Deploy XML descriptors from configBase</span>
  <span class="token comment">// \u63CF\u8FF0\u7B26\u90E8\u7F72</span>
  <span class="token function">deployDescriptors</span><span class="token punctuation">(</span>configBase<span class="token punctuation">,</span> configBase<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// Deploy WARs</span>
  <span class="token comment">// war\u5305\u90E8\u7F72</span>
  <span class="token function">deployWARs</span><span class="token punctuation">(</span>appBase<span class="token punctuation">,</span> filteredAppPaths<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// Deploy expanded folders</span>
  <span class="token comment">// \u6587\u4EF6\u5939\u90E8\u7F72</span>
  <span class="token function">deployDirectories</span><span class="token punctuation">(</span>appBase<span class="token punctuation">,</span> filteredAppPaths<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>war\u5305\u90E8\u7F72</li><li>\u6587\u4EF6\u5939\u90E8\u7F72</li><li>\u63CF\u8FF0\u7B26\u90E8\u7F72</li></ul><p>\u524D\u9762\u4E24\u79CD\u7ECF\u5E38\u4F7F\u7528\uFF0C\u8FD9\u91CC\u4E0D\u518D\u8BF4\u660E\uFF0C\u8FD9\u91CC\u8BF4\u4E00\u4E0B\u63CF\u8FF0\u7B26\u90E8\u7F72</p><p><img src="`+t+`" alt="image-20220220140547506"></p><p>\u53EF\u4EE5\u5728server.xml\u6587\u4EF6\u4E2D\u914D\u7F6EContext\u6807\u7B7E\uFF0C\u6307\u5B9Aweb\u5E94\u7528\u7684\u4F4D\u7F6E</p><ul><li>path\u5C31\u662F\u542F\u52A8Tomcat\u4E4B\u540E\u7684\u8BBF\u95EE\u7F51\u5740</li><li>docBase\u5C31\u662Fweb\u9879\u76EE\u8DEF\u5F84</li></ul><p>\u8FD9\u79CD\u914D\u7F6E\u65B9\u5F0F\uFF0C\u4E3B\u8981\u4E3A\u4E86\u628ATomcat\u542F\u52A8\u8BBF\u95EE\u7F51\u5740\u8BBE\u7F6E\u6210\u8BE5\u9879\u76EE<code>path=&quot;/&quot;</code></p><h2 id="\u6574\u4F53\u67B6\u6784"><a class="header-anchor" href="#\u6574\u4F53\u67B6\u6784" aria-hidden="true">#</a> \u6574\u4F53\u67B6\u6784</h2><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u8BFE\u7A0B\u5185\u5BB9</span>
<span class="token list punctuation">1.</span> tomcat\u6574\u4F53\u67B6\u6784\u548C\u5904\u7406\u8BF7\u6C42\u6D41\u7A0B\u89E3\u6790
<span class="token list punctuation">2.</span> tomcat\u4E2D\u5173\u4E8E\u957F\u8FDE\u63A5\u7684\u5E95\u5C42\u539F\u7406\u4E0E\u6E90\u7801\u89E3\u6790
<span class="token list punctuation">3.</span> tomcat\u81EA\u5B9A\u4E49\u7C7B\u52A0\u8F7D\u5668\u7684\u4F7F\u7528\u4E0E\u6E90\u7801\u5B9E\u73B0
<span class="token list punctuation">4.</span> tomcat\u8BF7\u6C42\u5904\u7406\u8BE6\u89E3
<span class="token list punctuation">5.</span> tomcat\u542F\u52A8\u8FC7\u7A0B
<span class="token list punctuation">6.</span> tomcat\u4E2Dservlet\u529F\u80FD\u7684\u5B9E\u73B0
<span class="token list punctuation">7.</span> tomcat\u4E2DJSP\u529F\u80FD\u7684\u5B9E\u73B0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6E90\u7801\u7F16\u8BD1"><a class="header-anchor" href="#\u6E90\u7801\u7F16\u8BD1" aria-hidden="true">#</a> \u6E90\u7801\u7F16\u8BD1</h3><blockquote><p>tomcat \u7684\u6E90\u7801\u4E0B\u8F7D\uFF1Ahttps://gitee.com/archguide/tomcat.git</p><p>tomcat\u5728GitHub\u5F00\u6E90\u4E86\uFF0C\u8BFE\u7A0B\u4E2D\u7684\u6E90\u4EE3\u7801\u662F\u5DF2\u7ECF\u7F16\u8BD1\u8FC7\u7684\uFF0C\u6240\u4EE5\u4F7F\u7528\u548C\u8BFE\u7A0B\u4E2D\u4E00\u81F4\u7684\u5730\u5740</p><p><strong>\u4F7F\u7528\u8BFE\u7A0B\u6E90\u7801\u7684\u8FD0\u884C\u6B65\u9AA4</strong></p><ol><li>\u4F7F\u7528idea\u4ECEgithub\u4E0A\u514B\u9686\u6E90\u7801</li></ol><p>\u6309\u7167\u4E0B\u9762\u7684\u7F16\u8BD1\u6B65\u9AA41\u4E2D\u7684\u5373\u53EF</p><p>\u4FEE\u6539\u4E00\u4E0B\u5206\u652F\uFF0C\u548C\u4E0B\u9762\u7684\u4E00\u81F4</p><ol start="2"><li>\u8FD0\u884Ctomcat</li></ol><p>\u4F7F\u7528ant\u547D\u4EE4<code>ide-eclipse</code>\uFF0C\u57287\u7248\u672C\u4E2D\u53EA\u652F\u6301eclipse\u65B9\u5F0F\u8FD0\u884C</p><p><img src="`+p+'" alt="image-20220220005415570"></p><p>\u73B0\u5728\u5DE5\u7A0B\u91CC\u9762\u5DF2\u7ECF\u4E0B\u8F7D\u597D\u4E86\uFF0C\u6240\u4EE5\u8BF4\u6267\u884C\u5E94\u8BE5\u5F88\u5FEB\u7684</p><ol start="3"><li>\u4F7F\u7528idea\u5728\u91CD\u65B0\u6253\u5F00\u9879\u76EE\uFF0C\u4F7F\u7528<code>\u4ECE\u5DF2\u6709\u7684\u9879\u76EE\u4E2D\u5BFC\u5165</code>-&gt;<code>\u9009\u62E9eclipse\u7684\u65B9\u5F0F</code></li></ol><p><img src="'+e+`" alt="image-20220220005650218"></p><ol start="4"><li>\u8FD9\u6837\u5C31\u5B8C\u6210\u4E86Tomcat\u7684\u5BFC\u5165\u4E86</li></ol></blockquote><blockquote><p><strong>\u5B8C\u6574\u7F16\u8BD1\u6B65\u9AA4</strong></p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token list punctuation">1.</span> \u4F7F\u7528idea\u4ECEgithub\u4E0A\u514B\u9686\u6E90\u7801
<span class="token list punctuation">2.</span> \u6E90\u7801\u514B\u9686\u4E0B\u6765\u4E4B\u540E\uFF0C\u4E0D\u80FD\u76F4\u63A5\u8FD0\u884C\uFF0C\u9700\u8981\u4F7F\u7528ant\u8FDB\u884C\u7F16\u8BD1\uFF0C\u4E3B\u8981\u76EE\u7684\u662F\u4E0B\u8F7D\u4F9D\u8D56
<span class="token list punctuation">3.</span> \u4F9D\u8D56\u6DFB\u52A0\u8FDB\u6765\u4E4B\u540E\uFF0C\u53EF\u4EE5\u5C1D\u8BD5\u4F7F\u7528\u5DE5\u5177idea\u6784\u5EFA\u5DE5\u7A0B
<span class="token list punctuation">4.</span> \u6784\u5EFA\u6210\u529F\u4E4B\u540E\uFF0C\u8FD0\u884C\u6E90\u4EE3\u7801
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u7F16\u8BD1\u6B65\u9AA4</strong></p><ol><li>\u4F7F\u7528idea\u4ECEgithub\u4E0A\u514B\u9686\u6E90\u7801</li></ol><p><img src="`+o+'" alt="image-20220220000059546"></p><p><img src="'+c+`" alt="image-20220220000114530"></p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u5C06\u4EE3\u7801\u62C9\u53D6\u4E0B\u6765\u4E4B\u540E\uFF0C\u5148\u4FEE\u6539\u4E00\u4E0B\u5206\u652F</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+l+'" alt="image-20220220004555234"></p><ol start="2"><li>\u6E90\u7801\u514B\u9686\u4E0B\u6765\u4E4B\u540E\uFF0C\u4E0D\u80FD\u76F4\u63A5\u8FD0\u884C\uFF0C\u9700\u8981\u4F7F\u7528ant\u8FDB\u884C\u7F16\u8BD1\uFF0C\u4E3B\u8981\u76EE\u7684\u662F\u4E0B\u8F7D\u4F9D\u8D56</li></ol><p><img src="'+i+'" alt="image-20220220000149240"></p><p>\u5728\u2F64ant\u7F16\u8BD1\u4E4B\u524D\uFF0C\u5EFA\u8BAE\u5148\u4FEE\u6539build.properties.default\u2F42\u4EF6\u4E2D\u7684base.path\u7684\u503C\uFF0Cant\u7F16\u8BD1\u65F6\u9700\u8981\u53BB\u4E0B\u8F7D\u7B2C\u4E09\u2F45jar\u5305\uFF0Cbase.path\u5C06\u6307\u5B9A\u8FD9\u4E9Bjar\u5B58\u653E\u7684\u4F4D\u7F6E</p><p><img src="'+u+'" alt="image-20220220000229189"></p><p>\u4FEE\u6539\u5B8C\u6210\u540E\uFF0C\u5728\u6E90\u7801\u2F6C\u5F55\u4E0B\u4F7F\u2F64\u547D\u4EE4\u2F8F\u6267\u2F8Fant ide-intellij\u8FDB\u2F8F\u7F16\u8BD1\u3002\u6267\u2F8F\u547D\u4EE4\u540E\u9700\u8981\u7B49\u5F85\u2F00\u6BB5\u65F6\u95F4</p><p><img src="'+k+'" alt="image-20220220000410375"></p><p>\u6267\u2F8F\u6210\u529F\u540E\u5728\u2F2F\u7A0B\u2F6C\u5F55\u7ED3\u6784\u4E2D\u591A\u51FA\u2F00\u4E2A\u2F42\u4EF6\u5939\uFF0C\u8BE5\u2F42\u4EF6\u5939\u4FDD\u5B58\u4E86Tomcat\u6E90\u7801\u6240\u4F9D\u8D56\u7684jar</p><p><img src="'+r+'" alt="image-20220220000442306"></p><p>\u6211\u4EEC\u8981\u628A\u8BE5\u2F42\u4EF6\u5939\u4E0B\u7684jar\u52A0\u2F0A\u5230classpath\u4E2D\u53BB\uFF0C\u8FDB\u2F0A\u5230Project Structure\u3002\u628A\u4E0B\u8F7D\u7684\u4F9D\u8D56\u6DFB\u52A0\u8FDB\u6765</p><p><img src="'+d+'" alt="image-20220220000512059"></p><p><img src="'+v+'" alt="image-20220220000544417"></p><ol start="3"><li>\u4F9D\u8D56\u6DFB\u52A0\u8FDB\u6765\u4E4B\u540E\uFF0C\u53EF\u4EE5\u5C1D\u8BD5\u4F7F\u7528\u5DE5\u5177idea\u6784\u5EFA\u5DE5\u7A0B</li></ol><p><img src="'+m+'" alt="image-20220220000645305"></p><p>\u6784\u5EFA\u8FC7\u7A0B\u4E2D\u53EF\u80FD\u4F1A\u62A5\u9519\uFF0C\u2F50\u5982\uFF1A</p><p><img src="'+b+'" alt="image-20220220000724198"></p><p>\u8BE5modules\u4E0B\u7684\u2F0F\u4E2A\u6A21\u5757\u90FD\u662Fmaven\u2F2F\u7A0B\uFF0C\u53F3\u952Epom.xml\u2F42\u4EF6\u70B9\u51FBAdd as Maven Project\uFF0C\u70B9\u51FB\u540E\u4F1A\u2F83\u52A8\u4E0B\u8F7D\u4F9D\u8D56\uFF0C\u4ECE\u2F7D\u89E3\u51B3\u6784\u5EFA\u62A5\u9519\uFF0C\u5176\u4ED6\u6A21\u5757\u4E5F\u7C7B\u4F3C</p><p>\u5BF9\u4E09\u4E2A\u6A21\u5757\u90FD\u4E0B\u8F7D\u4F9D\u8D56\u540E\uFF0C\u91CD\u65B0\u6784\u5EFA\u540E\uFF0C\u53EF\u80FD\u4F1A\u62A5\u5982\u4E0B\u9519\u8BEF\uFF1A</p><p><img src="'+f+'" alt="image-20220220000850019"></p><p>\u63D0\u793Aant\u5305\u4E0D\u5B58\u5728\uFF0C\u9700\u8981\u5F15\u2F0Aant.jar\u7684\u4F9D\u8D56\uFF0C\u8FD8\u662F\u2F00\u6837\uFF0C\u6253\u5F00Project Structure\uFF0C\u9009\u62E9tomcat Module\uFF0C\u6DFB\u52A0\u4F9D\u8D56\uFF0C\u5C06ant.jar\u6DFB\u52A0\u8FDB\u6765\uFF0C\u8FD9\u2FA5\u9700\u8981\u6CE8\u610F\uFF0CTomcat\u9ED8\u8BA4\u2F64\u7684\u662Fant-1.9.8.jar\uFF0C\u6240\u4EE5\u53EF\u4EE5\u63D0\u524D\u628A\u8FD9\u4E2Ajar\u4E0B\u8F7D\u5728\u7535\u8111\u4E0A\uFF0C\u7136\u540E\u5F15\u2F0A\u6B64jar</p><p><img src="'+g+'" alt="image-20220220000923723"></p><p>\u4F46\u662FApply\u7684\u65F6\u5019\uFF0C\u4F1A\u63D0\u793A</p><p><img src="'+h+'" alt="image-20220220000947174"></p><p>\u89E3\u51B3\u529E\u6CD5\u662F\uFF0C\u5C06ant-1.9.8.jar\u4FDD\u5B58\u5728tomcat-build-jars\u2F42\u4EF6\u5939\u4E0B\uFF0C\u7136\u540E\u53F3\u952E\u8BE5jar\uFF0C\u70B9\u51FBAdd as Library</p><p><img src="'+w+'" alt="image-20220220001022237"></p><p><img src="'+y+'" alt="image-20220220001032188"></p><p>\u70B9\u51FBok\uFF0C\u53EF\u4EE5\u7ED5\u8FC7\u521A\u521A\u7684\u9519\u8BEF\u3002\u91CD\u65B0\u6784\u5EFA\uFF0C\u4ECD\u7136\u4F1A\u62A5\u9519</p><p><img src="'+S+'" alt="image-20220220001052861"></p><p>\u5C06@VERSION@\u6539\u62109\u5373\u53EF\uFF0C\u518D\u6B21\u91CD\u65B0\u6784\u5EFA\uFF0C\u6784\u5EFA\u6CA1\u6709\u95EE\u9898\u4E86</p><p>\u5982\u679C\u6784\u5EFA\u540E\u6CA1\u6709\u62A5\u9519\uFF0C\u4F46\u662F\u4E0B\u56FE\u7684\u8FD9\u4E2AJava\u2F42\u4EF6\u4E2D\u8FD8\u662F\u62A5\u7EA2\u2F8A\uFF0C\u8FD9\u5E94\u8BE5\u662FIDEA\u7684\u95EE\u9898\uFF0C\u53EA\u9700\u8981\u2F3F\u52A8\u7684\u4F7F\u2F64IDEA\u7684\u5FEB\u6377\u63D0\u793A\u91CD\u65B0import\u2F00\u4E0B\u4F9D\u8D56\u5373\u53EF</p><p><img src="'+C+'" alt="image-20220220001139397"></p><ol start="4"><li>\u6784\u5EFA\u6210\u529F\u540E\uFF0C\u8FD0\u884C\u6E90\u4EE3\u7801</li></ol><p>Tomcat\u7684\u542F\u52A8\u7C7B\u662Forg.apache.catalina.startup.Bootstrap\u7C7B\u3002\u76F4\u63A5\u8FD0\u2F8F\u6B64\u7C7B\u4E2D\u7684Main\u2F45\u6CD5\u53EF\u4EE5\u770B\u5230Tomcat\u7684\u542F\u52A8\u2F47\u5FD7</p><p><img src="'+q+'" alt="image-20220220001230469"></p><p>\u4F46\u662F\u6211\u7684\u673A\u5668\u4E0A\u6709\u4E71\u7801\uFF0CTomcat\u505A\u4E86\u56FD\u9645\u5316\uFF0C\u589E\u52A0\u8FD0\u2F8F\u53C2\u6570\uFF1A-Duser.language=en</p><p><img src="'+E+'" alt="image-20220220001257818"></p><p>\u589E\u52A0\u4E4B\u540E\u518D\u8FD0\u2F8F\u5C31\u6CA1\u6709\u95EE\u9898\u4E86</p><p><img src="'+x+'" alt="image-20220220001311743"></p><p>\u4F46\u662F\u6B64\u65F6\u8BBF\u95EElocalhost:8080\uFF0C\u4ECD\u7136\u4F1A\u62A5\u9519\uFF0C\u770B\u4E0D\u5230\u6211\u4EEC\u60F3\u770B\u5230\u7684\u719F\u6089\u7684Tomcat\u6B22\u8FCE\u2EDA</p><p><img src="'+T+'" alt="image-20220220001339633"></p><p>\u8FD9\u662F\u56E0\u4E3ATomcat\u5185\u90E8\u4F7F\u2F64\u4E86SPI\u673A\u5236\u6765\u521D\u59CB\u5316jsp\u76F8\u5173\u7684\u4E1C\u2EC4\uFF0C\u2F3F\u52A8\u8FD0\u2F8F\u6E90\u7801\u7684\u8FC7\u7A0B\u4E2D\u9ED8\u8BA4\u4E0D\u4F1A\u53BB\u521D\u59CB\u5316jsp\u76F8\u5173</p><p>\u6211\u4EEC\u627E\u5230</p><p><img src="'+I+'" alt="image-20220220001409856"></p><p>\u5728\u2F2F\u7A0B\u2F6C\u5F55\u4E0B\u65B0\u5EFAresouces\u2F42\u4EF6\u5939\uFF0C\u7136\u540E\u65B0\u5EFAMETA-INF\u2F42\u4EF6\u5939\uFF0C\u7136\u540E\u5C06\u4E0A\u56FE\u4E2D\u7684services\u2F42\u4EF6\u5939\u590D\u5236\u5230META-INF\u2F42\u4EF6\u4E2D\uFF0C\u6700\u540E\u5C06resources\u2F42\u4EF6\u5939\u52A0\u2F0A\u5230classpath\u4E2D</p><p><img src="'+A+'" alt="image-20220220001437662"></p><p>\u91CD\u65B0\u8FD0\u2F8FBootstrap\uFF0C\u8BBF\u95EE\u6B63\u5E38</p><p><img src="'+L+`" alt="image-20220220001508011"></p></blockquote><p>\u6211\u4EEC\u73B0\u5728\u5148\u5C06Tomcat7\uFF0C\u56E0\u4E3A\u5728Tomcat7\u4E2D\uFF0C\u65E2\u7528\u5230\u4E86BIO\u53C8\u7528\u5230\u4E86NIO\uFF0C\u800CTomcat8\u53BB\u6389\u4E86BIO\uFF0C\u4F7F\u7528NIO\u4E3A\u9ED8\u8BA4\u7684</p><p>\u6211\u4EEC\u7684\u5230\u65F6\u5019\u770B\u6E90\u7801\u5148\u4F7F\u7528BIO\u7684\u65B9\u5F0F\u53BB\u770B\uFF0C\u6BD4\u8F83\u5BB9\u6613\u7406\u89E3</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u56E0\u4E3ABIO\u548CNIO\u90FD\u662F\u53BB\u53D6\u6570\u636E\u548C\u4F20\u8F93\u4F7F\u7528\u7684\uFF0C\u6211\u4EEC\u771F\u6B63\u8981\u7814\u7A76\u7684\u662FTomcat\u5728\u53D6\u5230\u6570\u636E\u4E4B\u540E\u7684\u64CD\u4F5C</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="tomcat\u662Fserlvet\u5BB9\u5668"><a class="header-anchor" href="#tomcat\u662Fserlvet\u5BB9\u5668" aria-hidden="true">#</a> Tomcat\u662FSerlvet\u5BB9\u5668</h3><p>Tomcat\u7684\u67B6\u6784</p><p><img src="`+_+`" alt="image-20220220144458268"></p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u6D4B\u8BD5\u6E90\u7801\u65B9\u5F0F\u662F\u5426\u80FD\u8FD0\u884C\u6210\u529F</span>
\u521B\u5EFAweb\u9879\u76EE\uFF0C\u7136\u540E\u6253\u5305\u6210war\u653E\u5230\u6E90\u7801\u9879\u76EE\u7684webapps\u76EE\u5F55\u4E0B
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u542F\u52A8Tomcat\u9879\u76EE</span>
\u901A\u8FC7\u67E5\u770BTomcat\u7684\u542F\u52A8\u811A\u672C\uFF0C\u5176\u5B9E\u6700\u540E\u8C03\u7528\u7684\u662F\u4E0B\u9762\u8FD9\u4E2A\u542F\u52A8\u7C7B
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+R+'" alt="image-20220220134641695"></p><p>\u5982\u679C\u542F\u52A8\u7EC8\u7AEF\u51FA\u73B0\u4E71\u7801\u7684\u8BDD\uFF0C\u53EF\u901A\u8FC7\u4E0B\u9762\u7684\u8BBE\u7F6E\u6216\u8005\u901A\u8FC7\u8BBE\u7F6E\u8BED\u8A00\u4E3A\u7A7A\uFF08\u8BBE\u7F6E\u8BED\u8A00\u4E3A\u7A7A\u9ED8\u8BA4\u5C31\u662F\u82F1\u6587\uFF09</p><p><img src="'+B+`" alt="image-20220220134816280"></p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> Servlet 3.0\u4E4B\u540E\uFF0C\u53EF\u4EE5\u901A\u8FC7\u6CE8\u89E3\u7684\u65B9\u5F0F\u6765\u914D\u7F6Eservlet\uFF0C\u8FD9\u6837\u5C31\u53EF\u4EE5\u4E0D\u7528\u5728web.xml\u4E2D\u914D\u7F6E\u4E86</span>
\u90A3\u4E48war\u6700\u540E\u5176\u5B9E\u5C31\u53EF\u4EE5\u53EA\u7559\u4E0Bclass\u6587\u4EF6\uFF0C\u90A3\u4E48\u548Cjar\u5176\u5B9E\u5C31\u662F\u6CA1\u6709\u533A\u522B\u4E86
<span class="token title important"><span class="token punctuation">#</span> \u90A3\u4E3A\u4EC0\u4E48web\u5E94\u7528\u4E3A\u4EC0\u4E48\u4E0D\u6253\u6210jar\uFF0C\u800C\u662F\u6253\u6210war\u5305\u5462\uFF1F</span>
Tomcat\u5728\u542F\u52A8\u7684\u65F6\u5019\uFF0C\u5C31\u4F1A\u53BB\u8BC6\u522Bwebapps\u76EE\u5F55\u4E0B\uFF0C\u5982\u679C\u6709\u4E00\u4E2A\u6587\u4EF6\u5939\uFF0C\u5C31\u4F1A\u628A\u5B83\u5F53\u6210\u4E00\u4E2Aweb\u5E94\u7528\uFF0C\u90A3\u4E48\u73B0\u5728\u6709\u4E00\u4E2Axxx.jar\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u65F6\u5019Tomcat\u5E94\u8BE5\u600E\u4E48\u53BB\u5224\u65AD\uFF0C\u662F\u4E00\u4E2Aweb\u5E94\u7528\u8FD8\u662F\u522B\u7684\u5E94\u7528\u4F9D\u8D56\u7684jar\u5305\u5462\uFF0C\u5E76\u4E14\u662F\u5728\u4EE3\u7801\u4E2D\u5199\u6B7B\u7684\u540E\u7F00\u7684war\u5305
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+j+`" alt="image-20220220140229739"></p><h3 id="tomcat\u5E95\u5C42\u67B6\u6784\u7EC4\u6210"><a class="header-anchor" href="#tomcat\u5E95\u5C42\u67B6\u6784\u7EC4\u6210" aria-hidden="true">#</a> Tomcat\u5E95\u5C42\u67B6\u6784\u7EC4\u6210</h3><p>Container\u5BB9\u5668\u662F\u7236\u63A5\u53E3\uFF0C\u6240\u6709\u7684\u5B50\u5BB9\u5668\u90FD\u5FC5\u987B\u5B9E\u73B0\u8FD9\u4E2A\u63A5\u53E3\uFF0C\u5728Tomcat\u4E2DContainer\u5BB9\u5668\u7684\u8BBE\u8BA1\u662F\u5178\u578B\u7684\u8D23\u4EFB\u94FE\u8BBE\u8BA1\u6A21\u5F0F\uFF0C\u5176\u6709\u56DB\u4E2A\u5B50\u5BB9\u5668\uFF1AEngine\u3001Host\u3001Context\u548CWrapper\u3002\u8FD9\u56DB\u4E2A\u5BB9\u5668\u4E4B\u95F4\u662F\u7236\u5B50\u5173\u7CFB\uFF0CEngine\u5BB9\u5668\u5305\u542BHost\uFF0CHost\u5305\u542BContext\uFF0CContext\u5305\u542BWrapper</p><p>\u6211\u4EEC\u5728web\u9879\u76EE\u4E2D\u7684\u4E00\u4E2AServlet\u7C7B\u5BF9\u5E94\u4E00\u4E2AWrapper\uFF0C\u591A\u4E2AServlet\u5C31\u5BF9\u5E94\u591A\u4E2AWrapper\uFF0C\u5F53\u6709\u591A\u4E2AWrapper\u7684\u65F6\u5019\u5C31\u9700\u8981\u4E00\u4E2A\u5BB9\u5668\u6765\u7BA1\u7406\u8FD9\u4E9BWrapper\u4E86\uFF0C\u8FD9\u5C31\u662FContext\u5BB9\u5668\u4E86\uFF0CContext\u5BB9\u5668\u5BF9\u5E94\u4E00\u4E2A\u5DE5\u7A0B\uFF0C\u6240\u4EE5\u6211\u4EEC\u65B0\u90E8\u7F72\u4E00\u4E2A\u5DE5\u7A0B\u5230Tomcat\u4E2D\u5C31\u4F1A\u65B0\u521B\u5EFA\u4E00\u4E2AContext\u5BB9\u5668</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> Engine-&gt;Host-&gt;Context-&gt;Wrapper-&gt;Servlet</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li>Context-Servlet\u5BB9\u5668</li></ol><p><code>Context</code>\u7EE7\u627F\u81EA<code>Container</code>\u5BB9\u5668\u63A5\u53E3</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Context</span> <span class="token keyword">extends</span> <span class="token class-name">Container</span> <span class="token punctuation">{</span>
  <span class="token comment">// ***</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>context</code>\u8868\u793A\u7684\u5C31\u662F\u5E94\u7528\uFF0C\u8FD9\u4E2A\u5E94\u7528\u662F\u4E00\u4E2A<code>servlet</code>\u5BB9\u5668</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Context</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/ServletDemoHello##2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">docBase</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>D:\\IdeaProjects\\ServletDemo\\target\\classes<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>path</code>\uFF1A\u662F\u8BBF\u95EE\u65F6\u7684\u6839\u5730\u5740\uFF0C\u8868\u793A\u8BBF\u95EE\u7684\u8DEF\u5F84\u3002\u5C31\u662F\u9879\u76EE\u8DEF\u5F84\uFF0C\u6839\u636E\u8BF7\u6C42\u5E26\u7684\u9879\u76EE\u8DEF\u5F84\uFF0C\u6765\u786E\u5B9A\u4F7F\u7528\u54EA\u4E2A<code>Context</code>\u6765\u5904\u7406\u8BF7\u6C42</li><li><code>docbase</code>\uFF1A\u8868\u793A\u5E94\u7528\u7A0B\u5E8F\u7684\u8DEF\u5F84\uFF0C\u6CE8\u610F\u659C\u6760\u7684\u65B9\u5411\u201C<code>/</code>\u201D\u3002\u5E94\u7528\u7F16\u8BD1\u540E\u7684<code>class</code>\u6587\u4EF6\u7684\u8DEF\u5F84</li></ul><ol start="2"><li>Host-Servlet\u5BB9\u5668</li></ol><p>\u8868\u793A\u865A\u62DF\u7684\u4E3B\u673A\uFF0C\u9694\u79BB\u4E0D\u540C\u7684\u73AF\u5883\uFF0C<code>Host</code>\u8868\u793A\u865A\u62DF\u4E3B\u673A\uFF0C\u4E00\u4E2A\u865A\u62DF\u4E3B\u673A\u4E0B\u53EF\u4EE5\u5B9A\u4E49\u5F88\u591A\u4E2A<code>Context</code>\uFF0C\u5373\u53EF\u4EE5\u90E8\u7F72\u591A\u4E2A\u9879\u76EE</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Host</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>localhost<span class="token punctuation">&quot;</span></span>  <span class="token attr-name">appBase</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>webapps<span class="token punctuation">&quot;</span></span> <span class="token attr-name">unpackWARs</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token attr-name">autoDeploy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Context</span> <span class="token attr-name">xxxxx</span><span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Context</span> <span class="token attr-name">xxxxx</span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Host</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>name</code>\uFF1A\u8868\u793A\u865A\u62DF\u4E3B\u673A\u7684\u540D\u5B57,\u5C31\u662F\u5BF9\u5E94\u8BF7\u6C42\u7684\u57DF\u540D\uFF0C\u6839\u636E\u57DF\u540D\u6765\u786E\u5B9A\u4F7F\u7528\u54EA\u4E2A\u865A\u62DF\u4E3B\u673A</li><li><code>appBase</code>\uFF1A\u8868\u793A\u5E94\u7528\u5B58\u653E\u7684\u76EE\u5F55</li><li><code>unpackWARs</code>\uFF1A\u8868\u793A\u662F\u5426\u9700\u8981\u89E3\u538B</li><li><code>autoDeploy</code>\uFF1A\u70ED\u90E8\u7F72</li></ul><ol start="3"><li>Engine-Servlet\u5BB9\u5668</li></ol><p><code>Engine</code>\u5F15\u64CE\u5305\u542B\u591A\u4E2A<code>Host</code>,\u5B83\u7684\u8D23\u4EFB\u5C31\u662F\u5C06\u7528\u6237\u8BF7\u6C42\u5206\u914D\u7ED9\u4E00\u4E2A\u865A\u62DF\u4E0A\u673A\u5904\u7406</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Engine</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Catalina<span class="token punctuation">&quot;</span></span> <span class="token attr-name">defaultHost</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>localhost<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Host</span> <span class="token attr-name">xxx</span><span class="token punctuation">&gt;</span></span>
  	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Context</span> <span class="token attr-name">xxxx</span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Context</span> <span class="token attr-name">xxxx</span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Host</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Engine</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>name</code>\uFF1A\u8868\u793A\u5F15\u64CE\u7684\u903B\u8F91\u540D\u79F0\uFF0C\u5728\u65E5\u5FD7\u548C\u9519\u8BEF\u6D88\u606F\u4E2D\u4F1A\u7528\u5230\uFF0C\u5728\u540C\u4E00\u53F0\u670D\u52A1\u5668\u4E0A\u6709\u591A\u4E2A<code>Service</code>\u65F6\uFF0C<code>name</code>\u5FC5\u987B\u552F\u4E00</li><li><code>defaultHost</code>\uFF1A\u6307\u5B9A\u9ED8\u8BA4\u4E3B\u673A\uFF0C\u5982\u679C\u6CA1\u6709\u5206\u914D\u54EA\u4E2A\u4E3B\u673A\u6765\u6267\u884C\u7528\u6237\u8BF7\u6C42\uFF0C\u7531\u8FD9\u4E2A\u503C\u6240\u6307\u5B9A\u7684\u4E3B\u673A\u6765\u5904\u7406\uFF0C\u8FD9\u4E2A\u503C\u5FC5\u987B\u548C<code>&lt;Host&gt;</code>\u5143\u7D20\u4E2D\u7684\u5176\u4E2D\u4E00\u4E2A\u76F8\u540C</li></ul><ol start="4"><li>Wrapper-Servlet\u5BB9\u5668</li></ol><p><code>Context</code>\u662F\u4E00\u4E2A<code>servlet</code>\u5BB9\u5668\uFF0C\u4F46\u662F\u5B83\u5E76\u4E0D\u662F\u76F4\u63A5\u88C5<code>servlet</code>\u5B9E\u4F8B\uFF0C\u53EF\u4EE5\u7B80\u5355\u7684\u7406\u89E3,<code>Context</code>\u5305\u542B\u4E86\u591A\u4E2A<code>Wrapper</code></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Context</span><span class="token punctuation">{</span>
	<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Wrapper</span><span class="token punctuation">&gt;</span></span> wrappers<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Wrapper</code>\u624D\u662F\u88C5\u4E86\u591A\u4E2A<code>Servlet</code>\u5B9E\u4F8B\uFF0C\u6CE8\u610F\u88C5\u7684\u662F\u67D0\u4E00\u4E2A\u7C7B\u578B\u7684<code>servlet</code>\u5B9E\u4F8B\uFF0C\u6BD4\u5982\uFF0C\u6211\u81EA\u5B9A\u4E00\u4E86\u4E00\u4E2A<code>servlet</code>,\u5C31\u53EB<code>MyServlet</code>\uFF0C\u90A3\u4E48\u5C31\u6709\u4E00\u4E2A<code>Wrapper</code>\u91CC\u88C5\u7684\u90FD\u662F<code>MyServlet</code>\u7684\u5B9E\u4F8B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Wrapper</span><span class="token punctuation">{</span>
	<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span>servlet<span class="token punctuation">&gt;</span></span> servlet<span class="token punctuation">;</span><span class="token comment">//\u88C5\u7684\u662F\u67D0\u4E00\u4E2A\u7C7B\u578B\u7684servlet\u5B9E\u4F8B</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u4E00\u822Cservlet\u90FD\u662F\u5355\u4F8B\u7684\uFF0C\u6240\u6709\u8BBF\u95EE\u540C\u4E00\u4E2Aservlet\u7684\u8BF7\u6C42\u662F\u5171\u7528\u540C\u4E00\u4E2Aservlet\u5B9E\u4F8B\u7684</li><li>\u5B9A\u4E49\u7684servlet\u5B9E\u73B0\u4E86SingleThreadModel\u63A5\u53E3\uFF0C\u6BCF\u4E00\u4E2A\u8BBF\u95EE\u8FD9\u4E2Aservlet\u7684\u8BF7\u6C42\uFF0C\u5355\u72EC\u6709\u4E00\u4E2Aservlet\u5B9E\u4F8B\uFF0C\u65E2\u7136servlet\u652F\u6301\u4E86\u8FD9\u4E2A\u529F\u80FD\uFF0C\u80AF\u5B9A\u8981\u53BB\u5B9E\u73B0\u8FD9\u4E2A\u529F\u80FD\uFF0C\u56E0\u6B64\uFF0C\u5C31\u6709\u4E86wrapper</li></ul><ol start="5"><li>Pipline\u7BA1\u9053</li></ol><p>\u524D\u9762\u7684<code>4</code>\u4E2A\u5BB9\u5668\u90FD\u5305\u542B<code>Pipiline</code>\u7BA1\u9053\uFF0CPipeline \u7BA1\u9053\uFF0C\u4E0A\u9762\u7684\u56DB\u4E2A\u5BB9\u5668\u4E2D\uFF0C\u6BCF\u4E00\u4E2A\u5BB9\u5668\u4E2D\u90FD\u4E00\u4E2A\u7BA1\u9053<code>Pipeline pipeline</code>\uFF0C\u5BB9\u5668\u4E4B\u95F4\u4E3B\u8981\u662F\u901A\u8FC7\u7BA1\u9053\u4EA4\u6D41\u8C03\u7528</p><p>Value \u9600\u95E8\uFF0C\u6BCF\u4E2A\u7BA1\u9053\u6709\u9ED8\u8BA4\u7684\u9600\u95E8\uFF0C\u6211\u4EEC\u4E5F\u53EF\u4EE5\u81EA\u5B9A\u4E49\u9600\u95E8</p><p>\u5728Tomcat\u4E2D\uFF0C\u5BF9\u4E8E\u6BCF\u4E00\u4E2A\u5BB9\u5668\uFF0C\u90FD\u6709\u4E00\u4E2A\u516C\u5171\u7684\u7EC4\u4EF6Pipiline\u7BA1\u9053\uFF0C\u6BCF\u4E2A\u7BA1\u9053\u4E0B\u53EF\u4EE5\u6709\u591A\u4E2A\u9600\u95E8Valve\uFF0C\u4E00\u4E2A\u9600\u8868\u793A\u4E00\u4E2A\u5177\u4F53\u7684\u6267\u884C\u4EFB\u52A1\uFF0C\u5728servlet\u5BB9\u5668\u7684\u7BA1\u9053\u4E2D\uFF0C\u9664\u4E86\u6709\u4E00\u4E2A\u57FA\u7840\u9600BaseValve\uFF0C\u8FD8\u53EF\u4EE5\u6DFB\u52A0\u4EFB\u610F\u6570\u91CF\u7684\u9600\u3002\u9600\u7684\u6570\u91CF\u6307\u7684\u662F\u989D\u5916\u6DFB\u52A0\u7684\u9600\u6570\u91CF\uFF0C\u5373\u4E0D\u5305\u62EC\u57FA\u7840\u9600\u3002\u53EF\u4EE5\u901A\u8FC7\u7F16\u8F91Tomcat\u7684\u914D\u7F6E\u6587\u4EF6\uFF08server.xml\uFF09\u6765\u52A8\u6001\u5730\u6DFB\u52A0\u9600</p><p><img src="`+P+`" alt="image-20220220145106661"></p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u6BD4\u5982\u8BF4\uFF0C\u73B0\u5728\u6709\u4E00\u4E2A\u8BF7\u6C42\uFF0CTomcat\u4F1A\u4E00\u6B65\u4E00\u6B65\u7684\u628ARequest\uFF0C\u5148\u4EA4\u7ED9Engine\u4E2D\u7684\u7BA1\u9053\uFF0C\u627E\u5230\u5BF9\u5E94\u7684Host\u662F\u90A3\u4E00\u4E2A\uFF0C\u7136\u540E\u53D1\u9001\u5230Host\u5BF9\u5E94\u7684\u7BA1\u9053\u4E2D\uFF0CRequest\u7ECF\u8FC7Host\u7684\u7BA1\u9053\uFF0CHost\u5BF9\u5176\u8FDB\u884C\u5904\u7406\u4E4B\u540E\u627E\u5230\u5BF9\u5E94\u7684Context\uFF0C\u4EA4\u7ED9Context\uFF0CRequest\u7ECF\u8FC7Context\u7684\u7BA1\u9053\uFF0C\u8FDB\u884C\u5904\u7406\u4E4B\u540E\u627E\u6253\u5BF9\u5E94\u7684Wrapper\uFF0C\u7ECF\u6B64\u7C7B\u63A8\uFF0C\u627E\u5230\u5BF9\u5E94Servlet\u8FDB\u884C\u5904\u7406\uFF08\u9600\u95E8\u8C03\u7528\u5BF9\u5E94\u7684Servlet#value.doGet(req,rep)\uFF09</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8FD8\u53EF\u4EE5\u81EA\u5B9A\u4E49\u9600\u95E8</p><p>\u6BD4\u5982\u5728Host\u8282\u70B9\u4E2D\u914D\u7F6E\u4E00\u4E2A\u9600\u95E8</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Valve</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.luban.TestValve<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u6240\u4EE5\u7ECF\u8FC7\u8FD9\u4E2AHost\u8282\u70B9\u7684\u90FD\u8FDB\u884C\u8FC7\u6EE4\u5904\u7406</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestValve</span> <span class="token keyword">extends</span> <span class="token class-name">RequestFilterValve</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Request</span> request<span class="token punctuation">,</span> <span class="token class-name">Response</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ServletException</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">getNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token class-name">Log</span> <span class="token function">getLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6700\u540E\u8F93\u51FA<code>test value</code></p><p>\u6BD4\u5982StandardEngine\u9ED8\u8BA4\u7684\u9600\u95E8\u662FStandardEngineValve</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">StandardEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

  <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  pipeline<span class="token punctuation">.</span><span class="token function">setBasic</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StandardEngineValve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">/* Set the jmvRoute using the system property jvmRoute */</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token function">setJvmRoute</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;jvmRoute&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;standardEngine.jvmRouteFail&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// By default, the engine will hold the reloading thread</span>
  backgroundProcessorDelay <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u56FE\u663E\u793A\u4E86\u4E00\u6761\u7BA1\u9053\u53CA\u5176\u9600\uFF1A</p><p><img src="`+O+'" alt="\u5728\u8FD9\u91CC\u63D2\u5165\u56FE\u7247\u63CF\u8FF0"></p><p>\u5982\u679C\u5BF9<code>servlet</code>\u7F16\u7A0B\u4E2D\u7684\u8FC7\u6EE4\u5668\u6709\u6240\u4E86\u89E3\u7684\u8BDD\uFF0C\u90A3\u4E48\u5E94\u8BE5\u4E0D\u96BE\u60F3\u50CF\u7BA1\u9053\u548C\u9600\u7684\u5DE5\u4F5C\u673A\u5236\u3002\u7BA1\u9053\u5C31\u50CF\u8FC7\u6EE4\u5668\u94FE\u4E00\u6837\uFF0C\u800C\u9600\u5219\u597D\u4F3C\u662F\u8FC7\u6EE4\u5668\u3002\u9600\u4E0E\u8FC7\u6EE4\u5668\u7C7B\u4F3C\uFF0C\u53EF\u4EE5\u5904\u7406\u4F20\u9012\u7ED9\u5B83\u7684<code>request</code>\u5BF9\u8C61\u548C<code>response</code>\u5BF9\u8C61\u3002\u5F53\u4E00\u4E2A\u9600\u6267\u884C\u5B8C\u6210\u540E\uFF0C\u4F1A\u8C03\u7528\u4E0B\u4E00\u4E2A\u9600\u7EE7\u7EED\u6267\u884C\u3002<strong>\u57FA\u7840\u9600\u603B\u662F\u6700\u540E\u4E00\u4E2A\u6267\u884C\u7684</strong></p><blockquote><p><strong>server.xml\u914D\u7F6E\u6587\u4EF6\u89E3\u6790</strong></p><p>\u6BCF\u4E2Aserver.xml\u7684\u8282\u70B9\u90FD\u6709\u5BF9\u5E94\u7684\u7C7B</p><p>Tomcat\u4E2D\u7684\u56DB\u4E2A\u5BB9\u5668\uFF1A</p><ul><li>Engine \u7BA1\u7406Host <ul><li>List&lt;Host&gt;</li></ul></li><li>Host \u7BA1\u7406Context <ul><li>List&lt;Context&gt;</li></ul></li><li>Wrapper \u4E00\u4E2A\u5E94\u7528\u4E0B\u9762\uFF0C\u53EF\u80FD\u6709\u5F88\u591A\u7684ServletClass\u7C7B\uFF0C\u4E00\u4E2AServletClass\u53EF\u80FD\u6709\u5F88\u591A\u7684Servlet\u5B9E\u4F8B\uFF08\u5373\u4E00\u4E2A\u7C7B\u578B\u6709\u591A\u4E2A\u5B9E\u4F8B\uFF09\uFF0C\u6240\u4EE5\u5C31\u62BD\u8C61\u51FA\u6765\u4E00\u4E2AWrapper\u6765\u7BA1\u7406\u8FD9\u4E9BServlet\uFF0C\u6839\u636EServletClass\u7C7B\u6765\u5206\u7C7B</li><li>Context \u5E94\u7528 \u5C31\u662F\u5BB9\u5668\uFF0C\u6BCF\u4E2A\u5E94\u7528 <ul><li>List&lt;Servlet&gt; \u6BCF\u4E2A\u5E94\u7528\u4E0B\u9762\u6709\u5F88\u591A\u7684Servlet</li></ul></li></ul></blockquote><h2 id="\u5904\u7406\u8BF7\u6C42\u6D41\u7A0B"><a class="header-anchor" href="#\u5904\u7406\u8BF7\u6C42\u6D41\u7A0B" aria-hidden="true">#</a> \u5904\u7406\u8BF7\u6C42\u6D41\u7A0B</h2><h3 id="tomcat\u7684\u8BF7\u6C42\u5904\u7406\u6D41\u7A0B"><a class="header-anchor" href="#tomcat\u7684\u8BF7\u6C42\u5904\u7406\u6D41\u7A0B" aria-hidden="true">#</a> Tomcat\u7684\u8BF7\u6C42\u5904\u7406\u6D41\u7A0B</h3><p>\u95EE\uFF1A<code>Wrapper</code>\u5BB9\u5668\u7684\u7BA1\u9053\u4E2D\u7684\u6700\u540E\u4E00\u4E2A\u9600\u95E8\uFF0C\u662F\u600E\u6837\u628A\u8BF7\u6C42\u8F6C\u53D1\u7ED9\u5BF9\u5E94\u7684<code>servlet</code>\u7684\uFF1F</p><p><img src="'+N+'" alt="\u5728\u8FD9\u91CC\u63D2\u5165\u56FE\u7247\u63CF\u8FF0"></p><p><img src="'+H+'" alt="image-20220220171433118"></p><p>\u770B\u4E00\u4E0B\u9600\u95E8\u7684<code>StandardWrapperValve</code>\u7684<code>invoke</code>\u65B9\u6CD5\u7684\u6838\u5FC3\u4EE3\u7801\uFF1A</p><p><img src="'+D+`" alt="image-20220220171603198"></p><p><code>allocate</code>\u65B9\u6CD5\u91CC\u7684<code>loadServlet</code>\u65B9\u6CD5\uFF0C\u76F4\u63A5<code>newInstance</code>\u4E00\u4E2A<code>serlvet</code>\u5B9E\u4F8B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>servlet <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Servlet</span><span class="token punctuation">)</span> instanceManager<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span>servletClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8FD9\u4E5F\u56DE\u7B54\u4E86\u524D\u8A00\u91CC\u7684\u95EE\u98981\uFF0C<code>servlet</code>\u662F\u600E\u4E48\u751F\u6210\u7684\uFF0C\u5728\u54EA\u751F\u6210\u7684\uFF1F <code>servlet</code>\u662F\u5728<code>Wrapper</code>\u7684\u57FA\u7840\u9600\u91CC\u751F\u6210\u7684</p><p><code>servlet</code>\u5B9E\u4F8B\u6709\u4E86\uFF0C\u90A3\u4E48<code>doGet/doPost</code>\u5728\u54EA\u6267\u884C\u5462\uFF1F \u56DE\u5230\u9600\u95E8\u7684<code>StandardWrapperValve</code>\u7684<code>invoke</code>\u65B9\u6CD5\u7684\u6838\u5FC3\u4EE3\u7801\uFF1A\u6765\u5230\u8FD9\u4E00\u884C\u4EE3\u7801\uFF0C\u4F20\u8FDB<code>servlet</code>\u5B9E\u4F8B\uFF0C\u5E76\u4E14\u8FD4\u56DE\u4E00\u4E2A\u8FC7\u6EE4\u5668\u94FE</p><p><img src="`+M+'" alt="image-20220220171806883"></p><p>\u6211\u4EEC\u5B9A\u4E49\u4E00\u4E2A<code>Filter</code>\u7684\u65F6\u5019\uFF0C\u53EF\u4EE5\u50CF\u4E0B\u9762\u8FD9\u6837\u5199\uFF1A</p><p>\u6267\u884C\u8FC7\u7A0B\uFF1Afilter-&gt;servlet-&gt;\u518D\u56DE\u5230filter</p><p>\u56E0\u6B64\uFF0C<code>filterChain.doFilter(servletRequest, servletResponse)</code>;\u867D\u7136\u662F\u8C03\u7528\u5176\u4ED6\u8FC7\u6EE4\u5668\uFF0C\u4F46\u662F\u8FC7\u6EE4\u5668\u8C03\u7528\u5B8C\u4E4B\u540E\uFF0C\u5FC5\u7136\u8981\u53BB\u8C03\u7528<code>servlet</code>\u7684<code>doget</code>\u65B9\u6CD5</p><p>\u6240\u4EE5\uFF0C\u4E0A\u9762\u624D\u9700\u8981\u4F20\u5165<code>servlet</code>\u5B9E\u4F8B\uFF0C\u7136\u540E\u83B7\u53D6\u4E00\u4E2A\u8FC7\u6EE4\u5668\u94FE\uFF0C\u56E0\u4E3A\u8981\u7528\u5230\u8FD9\u4E2A<code>servlet</code></p><p>\u7EE7\u7EED\u5F80\u4E0B\u8D70\uFF1A</p><p><img src="'+F+'" alt="image-20220220172047046"></p><p>\u8FDB\u5165<code>doFilter</code>\uFF0C\u518D\u8FDB\u5165<code>internalDoFilter</code>\u65B9\u6CD5\uFF1A\u53D1\u73B0\u5E76\u6CA1\u6709\u6267\u884C\uFF0C<code>servlet</code>\u7684<code>doGet/dopost</code>\u65B9\u6CD5\uFF0C\u6267\u884C\u7684\u662F<code>servlet</code>\u7684<code>service</code>\u65B9\u6CD5</p><p><img src="'+z+'" alt="image-20220220172141664"></p><p>\u6211\u4EEC\u81EA\u5B9A\u4E49<code>servlet</code>\u7684\u65F6\u5019\uFF0C\u5E76\u6CA1\u6709<code>service</code>\uFF0C\u5F80\u7236\u7C7B<code>HttpServlet</code>\u4E2D\u627E\u627E\uFF1A</p><p><img src="'+V+'" alt="image-20220220172316553"></p><p>\u56E0\u6B64\uFF0C\u5728\u54EA\u91CC\u8C03\u7528\u7684<code>doGet</code>\u3001<code>doPost</code>\u65B9\u6CD5\uFF0C\u4E0E<code>Tomcat</code>\u6CA1\u6709\u5173\u7CFB\uFF0C\u8FD9\u4E2A\u5B9E\u9645\u4E0A\u662F<code>servlet</code>\u89C4\u8303\u6240\u5B9A\u4E49\u7684</p><blockquote><p>Request\u548CResponse\u4F7F\u7528\u95E8\u9762\u6A21\u5F0F</p><p><img src="'+W+'" alt="image-20220220151536894"></p><p>\u5728Request\u548CResponse\u7C7B\u4E2D\uFF0C\u6709\u4E00\u4E9B\u6BD4\u8F83\u4E0D\u5B89\u5168\u7684\u65B9\u6CD5\uFF0C\u8FD9\u4E2A\u7C7B\u4E2D\u6709\u4E00\u4E9B\u65B9\u6CD5\u6211\u81EA\u5DF1\u8981\u7528\uFF0C\u4F46\u662F\u6211\u4E0D\u60F3\u7ED9\u5916\u9762\u4F7F\u7528\uFF0C\u6BD4\u5982</p><p><img src="'+U+'" alt="image-20220220151720665"></p><p>\u53EA\u80FD\u5728\u8FD9\u4E2A\u5305\u4E2D\u80FD\u4F7F\u7528\uFF0C\u5916\u754C\u4E0D\u80FD\u4F7F\u7528</p></blockquote><h3 id="tomcat\u67B6\u6784\u5E73\u89C6\u56FE"><a class="header-anchor" href="#tomcat\u67B6\u6784\u5E73\u89C6\u56FE" aria-hidden="true">#</a> Tomcat\u67B6\u6784\u5E73\u89C6\u56FE</h3><p><img src="'+J+'" alt="\u5728\u8FD9\u91CC\u63D2\u5165\u56FE\u7247\u63CF\u8FF0"></p><p>\u53F3\u8FB9\u7684\u90E8\u5206\uFF0C\u5DF2\u7ECF\u8BF4\u8FC7\u4E86\uFF0C\u770B\u770B\u5DE6\u8FB9</p><p><code>Request</code>\u5BF9\u8C61\u600E\u4E48\u751F\u6210\u7684\uFF1F</p><ol><li><code>Request</code>\u5BF9\u8C61\u8868\u793A\u7684\u662F\u4E00\u4E2A\u8BF7\u6C42\uFF0C<code>Tomcat</code>\u8981\u751F\u6210\u4E00\u4E2A<code>Request</code>\u5BF9\u8C61\uFF0C\u9996\u5148\u5C31\u8981\u6709\u6570\u636E\uFF0C\u8FD9\u4E2A\u6570\u636E\u62FF\u6765\u7684\u5462\uFF1F</li></ol><p>\u64CD\u4F5C\u7CFB\u7EDF\u3002<code>Tomcat</code>\u4EC5\u4EC5\u662F\u64CD\u4F5C\u7CFB\u7EDF\u4E0A\u7684\u4E00\u4E2A\u5E94\u7528\u7A0B\u5E8F\uFF0C\u56E0\u6B64\uFF0C\u5B83\u7684\u6570\u636E\u5F00\u6E90\u4E8E\u64CD\u4F5C\u7CFB\u7EDF</p><ol start="2"><li>\u90A3\u64CD\u4F5C\u7CFB\u7EDF\u7684\u6570\u636E\u53C8\u4ECE\u54EA\u6765\u7684\u5462\uFF1F</li></ol><p>\u64CD\u4F5C\u7CFB\u7EDF\u5B89\u88C5\u5728\u670D\u52A1\u5668\u4E0A\u9762\u7684\uFF0C\u56E0\u6B64\uFF0C\u64CD\u4F5C\u7CFB\u7EDF\u7684\u6570\u636E\u6765\u6E90\u4E8E\u670D\u52A1\u5668</p><ol start="3"><li>\u90A3\u670D\u52A1\u5668\u7684\u6570\u636E\u53C8\u6765\u6E90\u4E8E\u54EA\u91CC\u5462\uFF1F</li></ol><p>\u4E00\u4E2A\u670D\u52A1\u5668\u901A\u8FC7\u7F51\u7EDC\u5C06\u6570\u636E\u53D1\u7ED9\u53E6\u4E00\u4E2A\u670D\u52A1\u5668\u7684\u3002\u8FD9\u5C31\u6D89\u53CA\u5230\u5F88\u591A\u5F88\u591A\u7684\u534F\u8BAE\u4E86\uFF0C\u670D\u52A1\u5668\u4E4B\u95F4\u60F3\u8981\u5B8C\u6210\u6570\u636E\u7684\u4F20\u8F93\u548C\u63A5\u53D7\uFF0C\u5C31\u548C\u8BA1\u7B97\u673A\u7F51\u7EDC\u6709\u5173\u7CFB\u4E86\uFF0C\u8DDF\u5404\u79CD\u534F\u8BAE\u6709\u5173\u7CFB</p><ol start="4"><li>\u5982\u679C\u670D\u52A1\u5668A\u6709\u6570\u636E\uFF0C\u60F3\u628A\u6570\u636E\u53D1\u7ED9\u670D\u52A1\u5668B\uFF0C\u4F46\u662F\u4EC5\u4EC5\u6709\u6570\u636E\u548CIP\uFF08\u6CA1\u6709\u7AEF\u53E3\uFF0C\u7AEF\u53E3\u662F\u548C\u5E94\u7528\u7A0B\u5E8F\u5BF9\u5E94\u7684\uFF09\uFF0C\u670D\u52A1\u5668A\u80FD\u591F\u4FDD\u8BC1\u6570\u636E\u5B89\u5168\u53EF\u9760\u7684\u53D1\u7ED9\u670D\u52A1\u5668B\u5417\uFF1F</li></ol><p>\u4E0D\u80FD\u3002\u53EF\u80FD\u6570\u636E\u975E\u5E38\u5927\uFF0C\u6570\u636E\u5728\u7F51\u7EDC\u7684\u4F20\u8F93\u8FC7\u7A0B\u4E2D\uFF0C\u4F1A\u7ECF\u8FC7\u673A\u623F\u6216\u8005\u4EA4\u6362\u673A\uFF0C\u5F88\u6709\u53EF\u80FD\u6570\u636E\u5C31\u4F1A\u4E22\u5931\uFF0C\u662F\u4E0D\u53EF\u9760\u7684</p><ol start="5"><li>\u5982\u4F55\u4FDD\u8BC1\u6570\u636E\u7684\u53EF\u9760\u4F20\u8F93\u5462\uFF1F</li></ol><p>\u4F7F\u7528Tcp\u534F\u8BAE\u3002\u8BE5\u534F\u8BAE\u662F\u4E00\u4E2A\u53EF\u9760\u7684\u534F\u8BAE\uFF0C\u4F46\u662F\u8BE5\u534F\u8BAE\uFF0C\u6BD5\u7ADF\u53EA\u662F\u4E00\u4E2A\u534F\u8BAE\uFF0C\u8FD9\u4E2A\u534F\u8BAE\u80AF\u5B9A\u662F\u9700\u8981\u53BB\u5B9E\u73B0\u7684</p><ol start="6"><li><code>Tcp</code>\u534F\u8BAE\u7531\u8C01\u5B9E\u73B0\uFF1F</li></ol><p>\u64CD\u4F5C\u7CFB\u7EDF\u3002<code>linux</code>\u548C<code>Windows</code>\u64CD\u4F5C\u7CFB\u7EDF\uFF0C\u6216\u8005\u5176\u4ED6\u64CD\u4F5C\u7CFB\u7EDF\u90FD\u4F1A\u53BB\u5B9E\u73B0<code>Tcp</code>\u534F\u8BAE\u3002</p><p><code>Tcp</code>\u534F\u8BAE\u5728\u670D\u52A1\u5668\u4E4B\u95F4\u5EFA\u7ACB\u8FDE\u63A5\u65F6\uFF0C\u4F1A\u8FDB\u884C\u4E09\u6B21\u63E1\u624B\uFF0C<code>linux</code>\u6E90\u7801\u5C31\u6709\u5173\u4E8E<code>Tcp</code>\u4E09\u6B21\u63E1\u624B\u7684\u76F8\u5173\u6E90\u7801\uFF1A</p><blockquote><p><img src="'+G+'" alt="\u5728\u8FD9\u91CC\u63D2\u5165\u56FE\u7247\u63CF\u8FF0"></p><p><img src="'+K+'" alt="\u5728\u8FD9\u91CC\u63D2\u5165\u56FE\u7247\u63CF\u8FF0"></p><p><img src="'+Y+`" alt="\u5728\u8FD9\u91CC\u63D2\u5165\u56FE\u7247\u63CF\u8FF0"></p></blockquote><p>\u6CE8\u610F\uFF1ATcp\u534F\u8BAE\u53EA\u662F\u4FDD\u8BC1\u6570\u636E\u5728\u4F20\u8F93\u5C42\u53EF\u9760\u7684\u4F20\u8F93\uFF0C\u4F46\u662F\u5B83\u5E76\u4E0D\u5173\u5FC3\u6570\u636E\u957F\u4EC0\u4E48\u6837\u5B50\uFF0C\u4E5F\u4E0D\u5173\u5FC3\u6570\u636E\u7684\u683C\u5F0F\u4EE5\u53CA\u4EE3\u8868\u7684\u610F\u4E49\uFF0C\u8C01\u624D\u5173\u7CFB\u6570\u636E\u7684\u683C\u5F0F\u662F\u600E\u4E48\u7684\uFF0C\u5185\u5BB9\u662F\u600E\u4E48\u7684\u5462\uFF1F\u5F53\u7136\u662F\u4F7F\u7528\u6570\u636E\u7684\u4EBA\u548C\u53D1\u9001\u6570\u636E\u7684\u4EBA\u554A\u3002\u6D4F\u89C8\u5668\u548C\u5E94\u7528\u7A0B\u5E8F\uFF0C\u56E0\u6B64\uFF0CHttp\u534F\u8BAE\u5C31\u6709\u4E86\uFF0C\u5B83\u662F\u5E94\u7528\u5C42\u534F\u8BAE\uFF0C\u5BF9\u6211\u4EEC\u8981\u53D1\u9001\u7684\u6570\u636E\u8FDB\u884C\u89C4\u8303\uFF0C\u6570\u636E\u7684\u683C\u5F0F\uFF0C\u5185\u5BB9\uFF0C\u6570\u636E\u7684\u610F\u4E49</p><ol start="7"><li><code>Http</code>\u534F\u8BAE\u7531\u8C01\u5B9E\u73B0\uFF1F</li></ol><p>\u6D4F\u89C8\u5668\u3001\u5E94\u7528\u7A0B\u5E8F(\u5305\u62EC<code>Tomcat</code>)</p><ol start="8"><li>\u5982\u679C\u7528<code>java</code>\u4EE3\u7801\u53BB\u5B9E\u73B0\u4E00\u4E2A\u6D4F\u89C8\u5668\uFF0C\u5F53\u7528\u6237\u5728\u6D4F\u89C8\u5668\u7684\u5730\u5740\u680F\u8F93\u5165\u5730\u5740\u540E\uFF0C\u6309\u4E0B\u56DE\u8F66\u952E\uFF0C\u4EE3\u7801\u6267\u884C\u7684\u6D41\u7A0B\u662F\u600E\u4E48\u6837\u7684</li></ol><ul><li>\u80AF\u5B9A\u662F\u8981\u6839\u636E<code>Http</code>\u534F\u8BAE\uFF0C\u53BB\u6784\u9020\u51FA\u7B26\u5408<code>Http</code>\u534F\u8BAE\u7684\u6570\u636E\u683C\u5F0F</li><li>\u53D1\u9001\u6570\u636E\uFF0C\u5EFA\u7ACB<code>Tcp</code>\u8FDE\u63A5</li><li>\u5E94\u7528\u7A0B\u5E8F\uFF0C\u63A5\u53D7\u6570\u636E</li></ul><p>\u95EE\u9898\u6765\u4E86\uFF0Cjava\u4EE3\u7801\u91CC\u600E\u4E48\u53BB\u5EFA\u7ACBTcp\u8FDE\u63A5\uFF0C\u6211\u4EEC\u77E5\u9053\u64CD\u4F5C\u7CFB\u7EDF\u7684\u6E90\u7801\u91CC\u6709\u5EFA\u7ACBTcp\u8FDE\u63A5\u7684\u4EE3\u7801\uFF0C\u90A3\u4E48Java\u80FD\u4E0D\u80FD\u53BB\u8C03\u7528\u64CD\u4F5C\u7CFB\u7EDF\u7684\u5EFA\u7ACB\u4E09\u6B21\u63E1\u624B\u7684\u4EE3\u7801\uFF0C\u6BD4\u5982\uFF1Atcp_connect()\u65B9\u6CD5\uFF0C\u4EE5\u6B64\u6765\u5EFA\u7ACBTcp\u8FDE\u63A5\u3002</p><p>\u5B9E\u9645\u4E0A\u5EFA\u7ACBTcp\u8FDE\u63A5\u7684\u65B9\u6CD5\uFF0Cjava\u662F\u4E0D\u80FD\u76F4\u63A5\u8C03\u7528\u7684\uFF0C\u56E0\u4E3A\u8FD9\u4E9B\u65B9\u6CD5\u662Flinux\u64CD\u4F5C\u7CFB\u7EDF\u975E\u5E38\u6838\u5FC3\u7684\u65B9\u6CD5\uFF0C\u4E0D\u4F1A\u76F4\u63A5\u8BA9\u4F60\u8C03\u7684\uFF0C\u5B9E\u9645\u4E0A\u50CF\u8FD9\u79CD\u60C5\u51B5\uFF0C\u6211\u4EEC\u901A\u5E38\u4F1A\u60F3\u5230\uFF0C\u5199\u4E00\u4E2AAPI\uFF0C\u91CD\u65B0\u5B9A\u4E49\u4E00\u4E2A\u65B9\u6CD5\uFF0C\u6BD4\u5982\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token function">create_tcp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token comment">//\u9A8C\u8BC1</span>
  xxxx
  <span class="token comment">//\u9A8C\u8BC1\u901A\u8FC7\u4E4B\u540E\uFF0C\u624D\u8BA9\u8C03\u8FD9\u4E2A\u65B9\u6CD5</span>
  tcp_connect\uFF08\uFF09<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>liunx</code>\u91CC\u4E5F\u4E00\u6837\uFF0C\u4E0D\u4F1A\u8BA9\u6211\u4EEC\u76F4\u63A5\u8C03\u7528<code>tcp_connect</code>\u65B9\u6CD5\uFF0C\u5B83\u63D0\u4F9B\u4E86\u4E00\u4E2A\u5BF9\u5916\u7684\u63A5\u53E3\uFF0C\u5C31\u662F<code>socket</code>\uFF0C\u522B\u4EBA\u4E0D\u80FD\u76F4\u63A5\u8BBF\u95EE<code>tcp_connect</code>\uFF0C\u53EA\u80FD\u901A\u8FC7<code>socket</code>\u53BB\u8BBF\u95EE</p><p>\u56E0\u6B64\uFF0C\u56DE\u5230<code>java</code>\u4EE3\u7801\u91CC\u600E\u4E48\u5EFA\u7ACB<code>Tcp</code>\u8FDE\u63A5\uFF1F\u901A\u8FC7<code>Socket</code>\u63A5\u53E3\uFF0C\u5EFA\u7ACB<code>Tcp</code>\u8FDE\u63A5\u3002</p><p>\u5176\u5B9E\u4E0D\u4EC5\u4EC5<code>Java</code>\u5E94\u7528\u7A0B\u5E8F,\u8FD0\u884C\u5728\u64CD\u4F5C\u7CFB\u7EDF\u4E0A\u7684\u5404\u79CD\u7A0B\u5E8F\uFF0C\u90FD\u53EA\u80FD\u901A\u8FC7<code>Socket</code>\u53BB\u5EFA\u7ACB<code>Tcp</code>\u8FDE\u63A5</p><h3 id="java-socket\u5E95\u5C42\u5B9E\u73B0"><a class="header-anchor" href="#java-socket\u5E95\u5C42\u5B9E\u73B0" aria-hidden="true">#</a> java socket\u5E95\u5C42\u5B9E\u73B0</h3><blockquote><p>\u4F7F\u7528<code>Java Socket</code>\u5EFA\u7ACB\u4E00\u4E2A<code>tcp</code>\u8FDE\u63A5\uFF0C\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token class-name">Socket</span> socket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Socket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//tcp</span>
    socket<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InetSocketAddress</span><span class="token punctuation">(</span><span class="token string">&quot;localhost&quot;</span><span class="token punctuation">,</span><span class="token number">9090</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">DatagramSocket</span> datagramSocket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DatagramSocket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//udp</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Java</code> \u7684<code>Socket</code>\u7C7B\u5E95\u5C42\u662F\u4E0D\u662F\u76F4\u63A5\u8C03\u7684\u64CD\u4F5C\u7CFB\u7EDF\u7684<code>Socket</code>\u5462\uFF1F\u5B83\u4EEC\u6709\u6CA1\u6709\u4EC0\u4E48\u8054\u7CFB\u5462\uFF1F</p><ol><li>\u8FDB\u5165<code>connect</code>\u65B9\u6CD5</li></ol><p><img src="`+X+'" alt="\u5728\u8FD9\u91CC\u63D2\u5165\u56FE\u7247\u63CF\u8FF0"></p><ol start="2"><li>\u8FDB\u5165<code>createImpl</code></li></ol><p><img src="'+$+'" alt="\u5728\u8FD9\u91CC\u63D2\u5165\u56FE\u7247\u63CF\u8FF0"></p><ol start="3"><li>\u8FDB\u5165<code>AbstractPlainSocketImpl</code>\u7684<code>create</code></li></ol><p><img src="'+Z+'" alt="\u5728\u8FD9\u91CC\u63D2\u5165\u56FE\u7247\u63CF\u8FF0"></p><ol start="4"><li>\u8FDB\u5165<code>socketCreate</code>\uFF0C\u521B\u5EFA\u4E00\u4E2A<code>Socket</code></li></ol><p><img src="'+Q+'" alt="\u5728\u8FD9\u91CC\u63D2\u5165\u56FE\u7247\u63CF\u8FF0"></p><ol start="5"><li>\u8FDB\u5165<code>DualStackPlainSocketImpl</code>\u7684<code>socketCreate</code></li></ol><p><img src="'+nn+'" alt="\u5728\u8FD9\u91CC\u63D2\u5165\u56FE\u7247\u63CF\u8FF0"></p><p>\u53D1\u73B0<code>socket0</code>\u662F\u4E00\u4E2A<code>native</code>\u65B9\u6CD5</p><p><img src="'+sn+'" alt="\u5728\u8FD9\u91CC\u63D2\u5165\u56FE\u7247\u63CF\u8FF0"></p><p><code>native</code>\u7684<code>socket0</code>\uFF0C\u4EE3\u7801\u53EA\u80FD\u53BB<code>open jdk</code>\u4E2D\u53BB\u770B<code>socket0</code>\u662F\u600E\u4E48\u5B9E\u73B0\u7684</p><ol start="7"><li><code>DualStackPlainSocketImpl.c</code>\u6587\u4EF6</li></ol><p><img src="'+an+'" alt="\u5728\u8FD9\u91CC\u63D2\u5165\u56FE\u7247\u63CF\u8FF0"></p><ol start="8"><li><code>net_util_md.c</code>\u6587\u4EF6</li></ol><p><img src="'+tn+'" alt="\u5728\u8FD9\u91CC\u63D2\u5165\u56FE\u7247\u63CF\u8FF0"></p><p><code>socket(domain,type,protocol)</code>\u53C8\u662F\u600E\u4E48\u5B9E\u73B0\u7684\u5462\uFF1F</p><p>\u4F46\u662F\u8BE5\u65B9\u6CD5\u7684\u5B9E\u73B0\uFF0C\u662F\u5728<code>open jdk</code>\u4E2D\u627E\u4E0D\u5230\u7684\u3002\u90A3\u4E48\u5B83\u5230\u5E95\u5728\u54EA\u91CC\u5B9E\u73B0\u7684</p><ol start="9"><li>\u770B\u5230<code>net_util_md.c</code>\u6587\u4EF6\u7684\u5934\u6587\u4EF6</li></ol><p><img src="'+pn+'" alt="\u5728\u8FD9\u91CC\u63D2\u5165\u56FE\u7247\u63CF\u8FF0"></p><p>\u90A3\u4E48\uFF0C\u5728\u5F53\u524D\u7684<code>windows</code>\u64CD\u4F5C\u7CFB\u7EDF\u4E2D\u627E\u627E\u6709\u6CA1\u6709\u8FD9\u4E2A\u5934\u6587\u4EF6</p><p><code>win10</code>\u5982\u4E0B\uFF1A</p><p><img src="'+en+'" alt="\u5728\u8FD9\u91CC\u63D2\u5165\u56FE\u7247\u63CF\u8FF0"></p><p>\u8FD9\u4E2A\u5C31\u662F\u4E0A\u9762<code>socket(domain,type,protocol)</code>\u7684\u771F\u6B63\u5B9E\u73B0</p><p><img src="'+on+'" alt="\u5728\u8FD9\u91CC\u63D2\u5165\u56FE\u7247\u63CF\u8FF0"></p><ol start="10"><li>\u56DE\u5934\u770B<code>Java</code>\u5728\u521B\u5EFA\u4E00\u4E2A<code>Socket</code>\u8FDE\u63A5\u7684\u65F6\u5019,<code>socket.connect(new InetSocketAddress(&quot;localhost&quot;,9090))</code>\u8FD9\u884C\u4EE3\u7801\uFF0C\u4F1A\u5148\u53BB\u8C03\u7528<code>Jdk</code>\u4EE3\u7801\uFF0C<code>jdk</code>\u6700\u7EC8\u8C03\u7528\u7684\u662F\u64CD\u4F5C\u7CFB\u7EDF\u7684\u4EE3\u7801</li></ol></blockquote><h3 id="connector\u7EC4\u4EF6"><a class="header-anchor" href="#connector\u7EC4\u4EF6" aria-hidden="true">#</a> Connector\u7EC4\u4EF6</h3><blockquote><p>https://blog.csdn.net/weixin_42412601/article/details/113925346</p></blockquote><p>\u56DE\u5230<code>Tomcat</code>\u67B6\u6784\u5E73\u89C6\u56FE\u4E2D\u7684<code>8</code>\uFF0C\u6D4F\u89C8\u5668\u4F1A\u8D1F\u8D23\u53BB\u6784\u9020\u6570\u636E\uFF0C\u53D1\u9001\u6570\u636E\uFF0C\u90A3\u4E48<code>Tomcat</code>\u63A5\u53D7\u6570\u636E\u540E\uFF0C\u9700\u8981\u89E3\u6790\u6570\u636E\uFF0C\u8FD9\u4E2A\u65F6\u5019\u5C31\u8981\u53BB\u5B9E\u73B0<code>Http</code>\u534F\u8BAE</p><p><code>Tomcat</code>\u4F7F\u7528<code>socket</code>\u63A5\u53D7\u6570\u636E\uFF0C\u7136\u540E\u5C31\u8981\u53D6\u6570\u636E\uFF0C\u8FD9\u91CC\u5C31\u6D89\u53CA\u5230\u4E00\u4E2A\u6982\u5FF5\uFF0C\u53EB\u505A<code>IO</code>\u6A21\u578B\uFF0C\u5C31\u662F\u4F60\u901A\u8FC7\u4EC0\u4E48\u65B9\u5F0F\u53BB\u53D6\u6570\u636E\u7684\u5462\uFF0C\u662F\u4EE5<code>BIO</code>\u8FD8\u662F<code>NIO</code>\u5462\uFF1F</p><p><code>Connector</code>\u7EC4\u4EF6\uFF0C\u4F1A\u4ECE<code>socket</code>\u4E2D\u53BB\u53D6\u6570\u636E\uFF0C\u7136\u540E\u6839\u636E<code>Http</code>\u534F\u8BAE\u53BB\u89E3\u6790\u6570\u636E\uFF0C\u89E3\u6790\u6210<code>Request</code>\u5BF9\u8C61</p><p><img src="'+cn+`" alt="image-20220220174117241"></p><h4 id="bio\u7684\u65B9\u5F0F\u53D6\u6570\u636E"><a class="header-anchor" href="#bio\u7684\u65B9\u5F0F\u53D6\u6570\u636E" aria-hidden="true">#</a> BIO\u7684\u65B9\u5F0F\u53D6\u6570\u636E</h4><p>\u8FD9\u4E2A<code>Connector</code>\u7EC4\u4EF6\uFF0C\u5728<code>Tomcat</code>\u4E2D\u5BF9\u5E94\u6709\u4E00\u4E2A\u7C7B<code>Connector</code>\uFF0C\u6709\u4E00\u4E2A\u65B9\u6CD5<code>setProtocol</code>\uFF0C\u5165\u53C2\u5C31\u662F\u4E0A\u56FE\u7684<code>protocol</code>\u5C5E\u6027\uFF08<code>Tomcat</code>\u542F\u52A8\u4F1A\u53BB\u89E3\u6790<code>server.xml</code>\uFF09</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setProtocol</span><span class="token punctuation">(</span><span class="token class-name">String</span> protocol<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">AprLifecycleListener</span><span class="token punctuation">.</span><span class="token function">isAprAvailable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;HTTP/1.1&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>protocol<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      setProtocolHandlerClassName
        <span class="token punctuation">(</span><span class="token string">&quot;org.apache.coyote.http11.Http11AprProtocol&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;AJP/1.3&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>protocol<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      setProtocolHandlerClassName
        <span class="token punctuation">(</span><span class="token string">&quot;org.apache.coyote.ajp.AjpAprProtocol&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>protocol <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setProtocolHandlerClassName</span><span class="token punctuation">(</span>protocol<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      setProtocolHandlerClassName
        <span class="token punctuation">(</span><span class="token string">&quot;org.apache.coyote.http11.Http11AprProtocol&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u5F53\`protocol\` \u5C5E\u6027\u8BBE\u7F6E\u4E3A\`Http1.1\`\u65F6,\u5BF9\u5E94\u7684\u7C7B\u662F\`org.apache.coyote.http11.Http11Protocol\`</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;HTTP/1.1&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>protocol<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      setProtocolHandlerClassName
        <span class="token punctuation">(</span><span class="token string">&quot;org.apache.coyote.http11.Http11Protocol&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;AJP/1.3&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>protocol<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      setProtocolHandlerClassName
        <span class="token punctuation">(</span><span class="token string">&quot;org.apache.coyote.ajp.AjpProtocol&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>protocol <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setProtocolHandlerClassName</span><span class="token punctuation">(</span>protocol<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53<code>protocol</code> \u5C5E\u6027\u8BBE\u7F6E\u4E3A<code>Http1.1</code>\u65F6\uFF0C\u4EE3\u7801\u91CC\u5BF9\u5E94\u7684\u7C7B\u662F<code>org.apache.coyote.http11.Http11Protocol</code>\uFF0C\u5B83\u5BF9\u5E94\u7684\u534F\u8BAE\u662F<code>Http1.1</code>,\u5BF9\u5E94\u7684<code>io</code>\u6A21\u578B\u662F<code>BIO</code></p><ol><li>\u770B\u770B<code>Http11Protocol</code>\u6E90\u7801\uFF0C\u4E3A\u5565\u8BF4\u5B83\u5BF9\u5E94\u7684\u662F<code>BIO</code></li></ol><p><img src="`+ln+'" alt="\u5728\u8FD9\u91CC\u63D2\u5165\u56FE\u7247\u63CF\u8FF0"></p><ol start="2"><li>\u770B\u770B<code>JIoEndpoint</code></li></ol><p><img src="'+un+`" alt="\u5728\u8FD9\u91CC\u63D2\u5165\u56FE\u7247\u63CF\u8FF0"></p><p>\u4F7F\u7528\u7684\u5DE5\u5382\u6A21\u5F0F\u521B\u5EFA<code>socket</code>\u5BF9\u8C61</p><h4 id="nio\u7684\u65B9\u5F0F\u53D6\u6570\u636E"><a class="header-anchor" href="#nio\u7684\u65B9\u5F0F\u53D6\u6570\u636E" aria-hidden="true">#</a> NIO\u7684\u65B9\u5F0F\u53D6\u6570\u636E</h4><p>\u5982\u679C\u60F3\u4F7F\u7528<code>NIO</code>,\u53EA\u9700\u8981\u4FEE\u6539\uFF1A<code>protocol=&quot;HTTP/1.1&quot;</code>\u53D8\u4E3A<code>org.apache.coyote.http11.Http11NioProtocol</code></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token operator">&lt;</span><span class="token class-name">Connector</span> port<span class="token operator">=</span><span class="token string">&quot;8080&quot;</span> protocol<span class="token operator">=</span><span class="token string">&quot;org.apache.coyote.http11.Http11NioProtocol&quot;</span>
           connectionTimeout<span class="token operator">=</span><span class="token string">&quot;20000&quot;</span>
           redirectPort<span class="token operator">=</span><span class="token string">&quot;8443&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u542F\u52A8<code>Tomcat</code>\u5C31\u6237\u53D1\u73B0\u8D70\u7684\u662F\u4E0B\u9762\u7684\u7EA2\u6846\u4E86</p><p><img src="`+kn+'" alt="\u5728\u8FD9\u91CC\u63D2\u5165\u56FE\u7247\u63CF\u8FF0"></p><p><img src="'+rn+'" alt="\u5728\u8FD9\u91CC\u63D2\u5165\u56FE\u7247\u63CF\u8FF0"></p><ol><li>\u770B\u770B<code>Http11NioProtocol</code>\u3002\u67E5\u770B\u65B9\u6CD5\u7C7B\u4F3C\u4E0A\u9762\u67E5\u770B<code>BIO</code></li></ol><p><img src="'+dn+'" alt="\u5728\u8FD9\u91CC\u63D2\u5165\u56FE\u7247\u63CF\u8FF0"></p><ol start="2"><li>\u770B\u770B<code>NioEndpoint</code></li></ol><p><img src="'+vn+'" alt="\u5728\u8FD9\u91CC\u63D2\u5165\u56FE\u7247\u63CF\u8FF0"></p><p>\u4F7F\u7528\u7684\u662F<code>SocketChannel</code>\uFF0C\u660E\u663E\u4F7F\u7528\u7684\u662F<code>NIO</code>\uFF0C\u5B66\u8FC7<code>nio</code>\u5C31\u77E5\u9053\u4E86</p><h4 id="\u89E3\u6790\u6570\u636E"><a class="header-anchor" href="#\u89E3\u6790\u6570\u636E" aria-hidden="true">#</a> \u89E3\u6790\u6570\u636E</h4><p>\u4E0D\u7BA1\u662FBIO\u8FD8\u662FNIO\u65B9\u5F0F\u53D6\u6570\u636E\uFF0C\u53CD\u6B63\u662F\u83B7\u53D6\u5230\u4E86\u5BF9\u5E94\u7684Socket\u3002\u63A5\u4E0B\u6765\u5C31\u662F\u89E3\u6790\u6570\u636E\u4E86\u3002</p><p>\u5BF9\u4E8EBIO\u65B9\u5F0F\uFF1A\u4F1A\u5728processSocket\u65B9\u6CD5\u4E2D\u5904\u7406\u6570\u636E\uFF0C\u5BF9\u5E94nio\u65B9\u5F0F\u3002\u731C\u60F3Tomcat\u53D6\u6570\u636E\uFF0C\u5E94\u8BE5\u662Fsocket.getInputStream()\u6765\u53D6\u6570\u636E\uFF0C\u7136\u540E\u6309\u7167Http1.1\u7684\u683C\u5F0F\u89E3\u6790\u6570\u636E</p><ol><li><code>processSocket</code>\u65B9\u6CD5</li></ol><p><img src="'+mn+'" alt="\u5728\u8FD9\u91CC\u63D2\u5165\u56FE\u7247\u63CF\u8FF0"></p><p><code>Http</code>\u534F\u8BAE\u7684\u683C\u5F0F\uFF1A</p><p><img src="'+bn+'" alt="\u5728\u8FD9\u91CC\u63D2\u5165\u56FE\u7247\u63CF\u8FF0"></p><ol start="2"><li>\u5305\u88C5<code>socket</code>\uFF0C\u7136\u540E\u628A\u8FD9\u4E2A<code>socket</code>\u8FDE\u63A5\u4EA4\u7ED9\u7EBF\u7A0B\u6C60\uFF0C\u53BB\u5904\u7406\u3002\u8FD9\u4E2A\u7EBF\u7A0B\u6C60\u5728<code>Tomcat7</code>\u4E2D\u9ED8\u8BA4<code>10</code>\u6761\u7EBF\u7A0B\uFF0C<code>private int minSpareThreads = 10</code></li></ol><p><img src="'+fn+'" alt="\u5728\u8FD9\u91CC\u63D2\u5165\u56FE\u7247\u63CF\u8FF0"></p><ol start="3"><li>\u8FDB\u5165<code>SocketProcessor</code>\uFF0C\u662F\u4E00\u4E2A\u7EBF\u7A0B</li></ol><p><img src="'+gn+'" alt="\u5728\u8FD9\u91CC\u63D2\u5165\u56FE\u7247\u63CF\u8FF0"></p><ol start="4"><li><code>process</code>\u65B9\u6CD5</li></ol><p><img src="'+hn+'" alt="\u5728\u8FD9\u91CC\u63D2\u5165\u56FE\u7247\u63CF\u8FF0"></p><ol start="5"><li><code>AbstractHttp11Processor</code>\u7684<code>process</code>\uFF0C\u56E0\u4E3A<code>BIO</code>\u5BF9\u5E94\u7684\u662F<code>Http11</code></li></ol><p><img src="'+wn+'" alt="\u5728\u8FD9\u91CC\u63D2\u5165\u56FE\u7247\u63CF\u8FF0"></p><p><img src="'+yn+`" alt="\u5728\u8FD9\u91CC\u63D2\u5165\u56FE\u7247\u63CF\u8FF0"></p><p>\u89E3\u6790\u8BF7\u6C42\u884C\u548C\u8BF7\u6C42\u5934\u7684\u65B9\u6CD5\u91CC\uFF0C\u90FD\u4F1A\u628A\u89E3\u6790\u51FA\u6765\u7684\u6570\u636E\uFF0C\u8BBE\u7F6E\u5230<code>Request</code>\u5BF9\u8C61\u91CC</p><p><code>socket.getInputStream()</code>\u53D6\u51FA\u6765\u7684\u6570\u636E\uFF0C\u4E0D\u662F\u76F4\u63A5\u4F7F\u7528\u7684\uFF0C\u4F1A\u653E\u5230\u7F13\u5B58\u4E2D</p><h2 id="\u957F\u8FDE\u63A5\u5B9E\u73B0\u539F\u7406"><a class="header-anchor" href="#\u957F\u8FDE\u63A5\u5B9E\u73B0\u539F\u7406" aria-hidden="true">#</a> \u957F\u8FDE\u63A5\u5B9E\u73B0\u539F\u7406</h2><h3 id="\u57FA\u672C\u601D\u60F3"><a class="header-anchor" href="#\u57FA\u672C\u601D\u60F3" aria-hidden="true">#</a> \u57FA\u672C\u601D\u60F3</h3><p>\u5C31\u662FHttp\u957F\u8FDE\u63A5\uFF0C\u5728http\u8BF7\u6C42\u5934\u91CC\u9762\u6709\u4E00\u4E2A\u975E\u5E38\u91CD\u8981\u7684\u53C2\u6570Connection:keep-alive,\u5982\u679C\u4E00\u4E2Ahttp\u8BF7\u6C42\u5E26\u4E0A\u4E86\u8FD9\u4E2A\u53C2\u6570\u5C31\u4EE3\u8868\u4E86\u8FD9\u662F\u4E00\u4E2A\u957F\u8FDE\u63A5</p><p>\u5728HTTP1.1\u4E2D\uFF0C\u957F\u8FDE\u63A5\u7684\u6807\u5FD7\u5C31\u662F</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>Connection:keep-alive
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5047\u5982\u5728\u6D4F\u89C8\u5668\u4E0ETomcat\u670D\u52A1\u5668\u7684\u4EA4\u4E92\u4E2D\uFF0C\u57FA\u672C\u6309\u7167\u5982\u4E0B\u7684\u6D41\u7A0B\u6765\u8D70\uFF0C\u4E8C\u8005\u4E4B\u95F4\u7684\u6570\u636E\u662F\u901A\u8FC7socket\u8FDE\u63A5\u7684\uFF0C\u5E76\u901A\u8FC7HTTP\u534F\u8BAE\u89E3\u6790\u7684\uFF0C\u4F46\u662FHTTP\u534F\u8BAE\u662F\u6CA1\u6709\u72B6\u6001\u7684\uFF0C\u4E3A\u4E86\u4FDD\u6301\u957F\u65F6\u95F4\u8FDE\u63A5\uFF0C\u9700\u8981\u4F7F\u7528Connection\u8BBE\u7F6E\u4E3Akeep-alive\u6765\u544A\u8BC9Tomact\u8BA9\u8FD9\u4E2A\u8FDE\u63A5\u4FDD\u6301\u6D3B\u8DC3\uFF0C\u4E0D\u8981\u5173\u95ED</p><p>Connection\u8FD8\u6709\u53E6\u5916\u4E00\u4E2A\u503C\uFF1Aclose\uFF0C\u8868\u793A\u5EFA\u7ACB\u672C\u6B21\u8FDE\u63A5\u5E76\u4F20\u8F93\u6570\u636E\u4E4B\u540E\uFF0C\u5C31\u4F1A\u5173\u95ED\u8FD9\u4E2A\u8FDE\u63A5</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u56E0\u4E3A\u670D\u52A1\u5668\u4E3A\u4E86\u4FDD\u6301\u66F4\u5408\u7406\u7684\u8D44\u6E90\u6D88\u8017\uFF0C\u4E00\u65E6\u4E0D\u8BBE\u7F6E\u8FD9\u4E2A\u6807\u5FD7\uFF0C\u5C31\u4F1A\u5173\u95ED\u5F53\u524D\u8FDE\u63A5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+Sn+'" alt="image-20220220221922392"></p><p>\u6D4F\u89C8\u5668\u53D1\u9001\u8BF7\u6C42\u7ED9Tomcat\u5982\u679C\u5E26\u6709keep-alive\u53C2\u6570\u4EE3\u8868tomcat\u63A5\u53D7\u8BF7\u6C42\u540E\u4E0D\u5173\u95EDSocket\u8FDE\u63A5\uFF0C\u5982\u679C\u662Fclose\u53C2\u6570\u4EE3\u8868\u63A5\u53D7\u8BF7\u6C42\u540E\u5173\u95EDSocket\u8FDE\u63A5</p><p><img src="'+Cn+`" alt="image-20220220223734675"></p><p>\u670D\u52A1\u7AEF\u63A5\u6536\u6570\u636E\u7684\u8FD9\u4E00\u7AEF\u662F\u901A\u8FC7RecvBuf\u5B58\u50A8\u6570\u636E\u7684\uFF0C\u4E00\u65E6RecvBuf\u5B58\u50A8\u6EE1\uFF0C\u90A3\u4E48\u5BA2\u6237\u7AEF\u5C31\u4E0D\u80FD\u53D1\u9001\u6570\u636E\u4E86\uFF0C\u5BFC\u81F4\u963B\u585E</p><h3 id="\u6E90\u7801\u5B9E\u73B0"><a class="header-anchor" href="#\u6E90\u7801\u5B9E\u73B0" aria-hidden="true">#</a> \u6E90\u7801\u5B9E\u73B0</h3><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> socket\u89E3\u6790\u6B65\u9AA4</span>
<span class="token list punctuation">1.</span> \u63A5\u6536\u5230socket
<span class="token list punctuation">2.</span> \u5C06socket\u4EA4\u7ED9socket\u8FDE\u63A5
<span class="token list punctuation">3.</span> \u4E00\u4E2A\u7EBF\u7A0B\u5904\u7406\u4E00\u4E2Asocket\u8FDE\u63A5
<span class="token list punctuation">4.</span> \u5F00\u59CB\u4ECEsocket\u4E2D\u83B7\u53D6\u6570\u636E
<span class="token list punctuation">5.</span> \u89E3\u6790\u8BF7\u6C42\u884C
<span class="token list punctuation">6.</span> \u89E3\u6790\u8BF7\u6C42\u5934
<span class="token list punctuation">7.</span> \u6839\u636E\u8BF7\u6C42\u5934\u89E3\u6790Connection\u5BF9\u5E94\u7684\u503C\u662Fkeepalive\u8FD8\u662Fclose
<span class="token list punctuation">8.</span> \u8BF7\u6C42\u884C\u548C\u8BF7\u6C42\u5934\u89E3\u6790\u540E\u4F1A\u8BBE\u7F6E\u5230Request\u5BF9\u8C61\u4E2D
<span class="token list punctuation">9.</span> \u5C06Request\u5151\u73B0\u4EA4\u7ED9\u5BB9\u5668\u8FDB\u884C\u5904\u7406
<span class="token list punctuation">10.</span> \u5BB9\u5668\u6700\u7EC8\u4F1A\u4EA4\u7ED9\u5BF9\u5E94\u7684servlet\u8FDB\u884C\u5904\u7406
<span class="token list punctuation">11.</span> servlet\u4E2D\u53EF\u4EE5\u83B7\u53D6\u8BF7\u6C42\u4E2D\u7684\u5404\u79CD\u4FE1\u606F\uFF0C\u5305\u62EC\u83B7\u53D6\u8BF7\u6C42 \u4F53
<span class="token list punctuation">12.</span> servlet\u4E2D\u4E5F\u53EF\u4EE5\u4F7F\u7528Response\u5BF9\u8C61\u5411\u5BA2\u6237\u7AEF\u8FD4\u56DE\u54CD\u5E94
<span class="token list punctuation">13.</span> servlet\u4E2D\u7684\u4EE3\u7801\u90FD\u6267\u884C\u5B8C\u4E4B\u540E\uFF0C\u76F8\u5F53\u4E8E\u5BB9\u5668\u4E2D\u5DF2\u7ECF\u5904\u7406\u5B8C\u6210\u4E86\u8BF7\u6C42\uFF0C\u76F8\u5F53\u4E8E\u8BF7\u6C42\u7684\u6838\u5FC3\u903B\u8F91\u5DF2\u7ECF\u6267\u884C\u5B8C\u4E86
<span class="token list punctuation">14.</span> \u5904\u7406InputBuffer\u4E2D\u7684pos\u548ClastValid\uFF0C\u4EE5\u4FBF\u80FD\u591F\u5904\u7406\u4E0B\u4E00\u4E2A\u8BF7\u6C42
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="acceptor-\u8BFB\u53D6\u6570\u636E"><a class="header-anchor" href="#acceptor-\u8BFB\u53D6\u6570\u636E" aria-hidden="true">#</a> Acceptor \u8BFB\u53D6\u6570\u636E</h4><p>Acceptor\u63A5\u6536\u5230\u64CD\u4F5C\u7CFB\u7EDF\u7684Socket\u4E4B\u540E\uFF0C\u5728\u7EBF\u7A0B\u4E2D\u7684run\u51FD\u6570\u8FDB\u884C\u5904\u7406</p><p>Acceptor\u7C7B\u5728<code>org.apache.tomcat.util.net.JIoEndpoint</code>\u7C7B\u4E2D</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">class</span> <span class="token class-name">Acceptor</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractEndpoint<span class="token punctuation">.</span>Acceptor</span> <span class="token punctuation">{</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">int</span> errorDelay <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token comment">// Loop until we receive a shutdown command</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>running<span class="token punctuation">)</span> <span class="token punctuation">{</span>

      <span class="token comment">// Loop if endpoint is paused</span>
      <span class="token comment">// \u5982\u679CEndpoint\u4ECD\u7136\u5728\u8FD0\u884C\uFF0C\u4F46\u662F\u88AB\u6682\u505C\u4E86\uFF0C\u90A3\u4E48\u5C31\u65E0\u9650\u5FAA\u73AF\uFF0C\u4ECE\u800C\u4E0D\u80FD\u63A5\u53D7\u8BF7\u6C42</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span>paused <span class="token operator">&amp;&amp;</span> running<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        state <span class="token operator">=</span> <span class="token class-name">AcceptorState</span><span class="token punctuation">.</span>PAUSED<span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
          <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// Ignore</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>running<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      state <span class="token operator">=</span> <span class="token class-name">AcceptorState</span><span class="token punctuation">.</span>RUNNING<span class="token punctuation">;</span>

      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">//if we have reached max connections, wait</span>
        <span class="token comment">//\u8FBE\u5230\u4E86\u6700\u5927\u8FDE\u63A5\u6570\u9650\u5236\u5219\u7B49\u5F85</span>
        <span class="token function">countUpOrAwaitConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Socket</span> socket <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>  <span class="token comment">// bio\uFF0Cnio</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
          <span class="token comment">// Accept the next incoming connection from the server</span>
          <span class="token comment">// bio socket</span>
          <span class="token comment">// \u6B64\u5904\u662F\u963B\u585E\u7684\uFF0C\u90A3\u4E48running\u5C5E\u6027\u5C31\u7B97\u5DF2\u7ECF\u88AB\u6539\u6210false\uFF0C\u90A3\u4E48\u600E\u4E48\u8FDB\u5165\u5230\u4E0B\u4E00\u6B21\u5FAA\u73AF\u5462\uFF1F</span>
          socket <span class="token operator">=</span> serverSocketFactory<span class="token punctuation">.</span><span class="token function">acceptSocket</span><span class="token punctuation">(</span>serverSocket<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//</span>
          <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u63A5\u6536\u5230\u4E86\u4E00\u4E2Asocket\u8FDE\u63A5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> ioe<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">countDownConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token comment">// Introduce delay if necessary</span>
          errorDelay <span class="token operator">=</span> <span class="token function">handleExceptionWithDelay</span><span class="token punctuation">(</span>errorDelay<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token comment">// re-throw</span>
          <span class="token keyword">throw</span> ioe<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// Successful accept, reset the error delay</span>
        errorDelay <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

        <span class="token comment">// Configure the socket</span>
        <span class="token comment">// \u5982\u679CEndpoint\u6B63\u5728\u8FD0\u884C\u5E76\u4E14\u6CA1\u6709\u88AB\u6682\u505C\uFF0C\u90A3\u4E48\u5C31\u5904\u7406\u8BE5socket</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>running <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>paused <span class="token operator">&amp;&amp;</span> <span class="token function">setSocketOptions</span><span class="token punctuation">(</span>socket<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// Hand this socket off to an appropriate processor</span>
          <span class="token comment">// socket\u88AB\u6B63\u5E38\u7684\u4EA4\u7ED9\u4E86\u7EBF\u7A0B\u6C60\uFF0CprocessSocket\u5C31\u4F1A\u8FD4\u56DEtrue</span>
          <span class="token comment">// \u5982\u679C\u6CA1\u6709\u88AB\u4EA4\u7ED9\u7EBF\u7A0B\u6C60\u6216\u8005\u4E2D\u9014Endpoint\u88AB\u505C\u6B62\u4E86\uFF0C\u5219\u8FD4\u56DEfalse</span>
          <span class="token comment">// \u8FD4\u56DEfalse\u5219\u5173\u95ED\u8BE5socket</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">processSocket</span><span class="token punctuation">(</span>socket<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">countDownConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// Close socket right away</span>
            <span class="token function">closeSocket</span><span class="token punctuation">(</span>socket<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token function">countDownConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token comment">// Close socket right away</span>
          <span class="token function">closeSocket</span><span class="token punctuation">(</span>socket<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>running<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;endpoint.accept.fail&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NullPointerException</span> npe<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>running<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;endpoint.accept.fail&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> npe<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ExceptionUtils</span><span class="token punctuation">.</span><span class="token function">handleThrowable</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;endpoint.accept.fail&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    state <span class="token operator">=</span> <span class="token class-name">AcceptorState</span><span class="token punctuation">.</span>ENDED<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><code>socket = serverSocketFactory.acceptSocket(serverSocket);</code>\u4F7F\u7528\u83B7\u53D6\u5230Socket\u4E4B\u540E\uFF0C\u4F7F\u7528<code>setSocketOptions(socket)</code>\u8BBE\u7F6ESocket\u53C2\u6570\uFF0C\u5177\u4F53\u5982\u4E0B</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setProperties</span><span class="token punctuation">(</span><span class="token class-name">Socket</span> socket<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SocketException</span><span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>rxBufSize <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
    socket<span class="token punctuation">.</span><span class="token function">setReceiveBufferSize</span><span class="token punctuation">(</span>rxBufSize<span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>txBufSize <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
    socket<span class="token punctuation">.</span><span class="token function">setSendBufferSize</span><span class="token punctuation">(</span>txBufSize<span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>ooBInline <span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span>
    socket<span class="token punctuation">.</span><span class="token function">setOOBInline</span><span class="token punctuation">(</span>ooBInline<span class="token punctuation">.</span><span class="token function">booleanValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>soKeepAlive <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
    socket<span class="token punctuation">.</span><span class="token function">setKeepAlive</span><span class="token punctuation">(</span>soKeepAlive<span class="token punctuation">.</span><span class="token function">booleanValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>performanceConnectionTime <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> performanceLatency <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
      performanceBandwidth <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
    socket<span class="token punctuation">.</span><span class="token function">setPerformancePreferences</span><span class="token punctuation">(</span>
    performanceConnectionTime<span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    performanceLatency<span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    performanceBandwidth<span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>soReuseAddress <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
    socket<span class="token punctuation">.</span><span class="token function">setReuseAddress</span><span class="token punctuation">(</span>soReuseAddress<span class="token punctuation">.</span><span class="token function">booleanValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>soLingerOn <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> soLingerTime <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
    socket<span class="token punctuation">.</span><span class="token function">setSoLinger</span><span class="token punctuation">(</span>soLingerOn<span class="token punctuation">.</span><span class="token function">booleanValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                       soLingerTime<span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>soTimeout <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> soTimeout<span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>
    socket<span class="token punctuation">.</span><span class="token function">setSoTimeout</span><span class="token punctuation">(</span>soTimeout<span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>tcpNoDelay <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      socket<span class="token punctuation">.</span><span class="token function">setTcpNoDelay</span><span class="token punctuation">(</span>tcpNoDelay<span class="token punctuation">.</span><span class="token function">booleanValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SocketException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// Some socket types may not support this option which is set by default</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>soTimeout</code>\uFF0C\u73B0\u5728Tomcat\u662F\u4F7F\u7528java\u5B9E\u73B0\u7684\uFF0C\u90A3\u4E48\u5C31\u662F\u8BF4\u901A\u8FC7InputStream\u53BBread\u6570\u636E\uFF0C\u90A3\u4E48\u5982\u679CRecvBuf\u5982\u679C\u662F\u7A7A\u7684\u8BDD\uFF0C\u90A3\u4E48read\u5C31\u4F1A\u963B\u585E\u4F4F\uFF0C\u8FD9\u91CC\u7684soTimeout\u5C31\u662F\u963B\u585E\u7684\u65F6\u95F4</li></ul><h4 id="processsocket-\u5904\u7406socket"><a class="header-anchor" href="#processsocket-\u5904\u7406socket" aria-hidden="true">#</a> processSocket \u5904\u7406Socket</h4><p>\u901A\u8FC7BIO\u7684\u65B9\u5F0F\u6765\u5904\u7406Socket\uFF0C\u90A3\u4E48\u5BF9\u4E8EBIO\u6765\u8BF4\uFF0C\u5C31\u662F\u6BCF\u62FF\u5230\u4E00\u4E2ASocket\u5C31\u4EA4\u7ED9\u4E00\u4E2A\u7EBF\u7A0B<code>getExecutor().execute(new SocketProcessor(wrapper));</code>\uFF0C\u90A3\u4E48\u4E5F\u5C31\u8BF4\uFF0C\u5728BIO\u7684\u5904\u7406\u8FC7\u7A0B\u4E2D\uFF0C\u4E00\u4E2A\u8BF7\u6C42\u5BF9\u5E94\u4E00\u4E2A\u7EBF\u7A0B</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>NIO \u662F\u4E00\u4E2A\u7EBF\u5C42\u5904\u7406\u591A\u4E2A\u8BF7\u6C42\u7684
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">boolean</span> <span class="token function">processSocket</span><span class="token punctuation">(</span><span class="token class-name">Socket</span> socket<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Process the request from this socket</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token class-name">SocketWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Socket</span><span class="token punctuation">&gt;</span></span> wrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SocketWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Socket</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>socket<span class="token punctuation">)</span><span class="token punctuation">;</span>
    wrapper<span class="token punctuation">.</span><span class="token function">setKeepAliveLeft</span><span class="token punctuation">(</span><span class="token function">getMaxKeepAliveRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    wrapper<span class="token punctuation">.</span><span class="token function">setSecure</span><span class="token punctuation">(</span><span class="token function">isSSLEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// During shutdown, executor may be null - avoid NPE</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>running<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// bio\uFF0C \u4E00\u4E2Asocket\u8FDE\u63A5\u5BF9\u5E94\u4E00\u4E2A\u7EBF\u7A0B</span>
    <span class="token comment">// \u4E00\u4E2Ahttp\u8BF7\u6C42\u5BF9\u5E94\u4E00\u4E2A\u7EBF\u7A0B\uFF1F</span>
    <span class="token function">getExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SocketProcessor</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RejectedExecutionException</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;Socket processing request was rejected for:&quot;</span><span class="token operator">+</span>socket<span class="token punctuation">,</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ExceptionUtils</span><span class="token punctuation">.</span><span class="token function">handleThrowable</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// This means we got an OOM or similar creating a thread, or that</span>
    <span class="token comment">// the pool and its queue are full</span>
    log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;endpoint.process.fail&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>SocketProcessor</code>\u5B9E\u73B0\u4E86Runnable\u63A5\u53E3\uFF0C\u4E3B\u8981\u8D1F\u8D23\u5904\u7406Socket</p><p>\u63A5\u7740\u8C03\u7528<code>state = handler.process(socket,status);</code>\u65B9\u6CD5\u8FDB\u884C\u5904\u7406\uFF0CHandler\u662F\u4E00\u4E2A\u63A5\u53E3\uFF0C\u6211\u4EEC\u63A5\u7740\u5F80\u4E0B\u627E\uFF0C\u53EF\u4EE5\u627E\u5230\u5B83\u7684\u5B9E\u73B0\u7C7B<code>AbstractProtocol#process</code></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">SocketState</span> <span class="token function">process</span><span class="token punctuation">(</span><span class="token class-name">SocketWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">S</span><span class="token punctuation">&gt;</span></span> wrapper<span class="token punctuation">,</span>
                <span class="token class-name">SocketStatus</span> status<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>wrapper <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Nothing to do. Socket has been closed.</span>
    <span class="token keyword">return</span> <span class="token class-name">SocketState</span><span class="token punctuation">.</span>CLOSED<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token class-name">S</span> socket <span class="token operator">=</span> wrapper<span class="token punctuation">.</span><span class="token function">getSocket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>socket <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Nothing to do. Socket has been closed.</span>
    <span class="token keyword">return</span> <span class="token class-name">SocketState</span><span class="token punctuation">.</span>CLOSED<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token class-name">Processor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">S</span><span class="token punctuation">&gt;</span></span> processor <span class="token operator">=</span> connections<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>socket<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">==</span> <span class="token class-name">SocketStatus</span><span class="token punctuation">.</span>DISCONNECT <span class="token operator">&amp;&amp;</span> processor <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Nothing to do. Endpoint requested a close and there is no</span>
    <span class="token comment">// longer a processor associated with this socket.</span>
    <span class="token keyword">return</span> <span class="token class-name">SocketState</span><span class="token punctuation">.</span>CLOSED<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u8BBE\u7F6E\u4E3A\u975E\u5F02\u6B65\uFF0C\u5C31\u662F\u540C\u6B65</span>
  wrapper<span class="token punctuation">.</span><span class="token function">setAsync</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">ContainerThreadMarker</span><span class="token punctuation">.</span><span class="token function">markAsContainerThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>processor <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u4ECE\u88AB\u56DE\u6536\u7684processor\u4E2D\u83B7\u53D6processor</span>
      processor <span class="token operator">=</span> recycledProcessors<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>processor <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      processor <span class="token operator">=</span> <span class="token function">createProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// HTTP11NIOProce</span>
    <span class="token punctuation">}</span>

    <span class="token function">initSsl</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">,</span> processor<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">SocketState</span> state <span class="token operator">=</span> <span class="token class-name">SocketState</span><span class="token punctuation">.</span>CLOSED<span class="token punctuation">;</span>
    <span class="token keyword">do</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">==</span> <span class="token class-name">SocketStatus</span><span class="token punctuation">.</span>DISCONNECT <span class="token operator">&amp;&amp;</span>
          <span class="token operator">!</span>processor<span class="token punctuation">.</span><span class="token function">isComet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Do nothing here, just wait for it to get recycled</span>
        <span class="token comment">// Don&#39;t do this for Comet we need to generate an end</span>
        <span class="token comment">// event (see BZ 54022)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>processor<span class="token punctuation">.</span><span class="token function">isAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> state <span class="token operator">==</span> <span class="token class-name">SocketState</span><span class="token punctuation">.</span>ASYNC_END<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u8981\u4E48Tomcat\u7EBF\u7A0B\u8FD8\u6CA1\u7ED3\u675F\uFF0C\u4E1A\u52A1\u7EBF\u7A0B\u5C31\u5DF2\u7ECF\u8C03\u7528\u8FC7complete\u65B9\u6CD5\u4E86\uFF0C\u7136\u540E\u5229\u7528while\u8D70\u5230\u8FD9\u4E2A\u5206\u652F</span>
        <span class="token comment">// \u8981\u4E48Tomcat\u7EBF\u7A0B\u7ED3\u675F\u540E\uFF0C\u5728\u8D85\u65F6\u65F6\u95F4\u5185\u4E1A\u52A1\u7EBF\u7A0B\u8C03\u7528complete\u65B9\u6CD5\uFF0C\u7136\u540E\u6784\u9020\u4E00\u4E2A\u65B0\u7684SocketProcessor\u5BF9\u8C61\u6254\u5230\u7EBF\u7A0B\u6C60\u91CC\u8D70\u5230\u8FD9\u4E2A\u5206\u652F</span>
        <span class="token comment">// \u8981\u4E48Tomcat\u7EBF\u7A0B\u7ED3\u675F\u540E\uFF0C\u8D85\u8FC7\u8D85\u65F6\u65F6\u95F4\u4E86\uFF0C\u7531AsyncTimeout\u7EBF\u7A0B\u6765\u6784\u9020\u4E00\u4E2ASocketProcessor\u5BF9\u8C61\u6254\u5230\u7EBF\u7A0B\u6C60\u91CC\u8D70\u5230\u8FD9\u4E2A\u5206\u652F</span>
        <span class="token comment">// \u4E0D\u7BA1\u600E\u4E48\u6837\uFF0C\u5728\u6574\u4E2A\u8C03\u7528\u5F02\u6B65servlet\u7684\u6D41\u7A0B\u4E2D\uFF0C\u6B64\u5206\u652F\u53EA\u7ECF\u5386\u4E00\u6B21\uFF0C\u7528\u6765\u5C06output\u7F13\u51B2\u533A\u4E2D\u7684\u5185\u5BB9\u53D1\u9001\u51FA\u53BB</span>

        state <span class="token operator">=</span> processor<span class="token punctuation">.</span><span class="token function">asyncDispatch</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>state <span class="token operator">==</span> <span class="token class-name">SocketState</span><span class="token punctuation">.</span>OPEN<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// release() won&#39;t get called so in case this request</span>
          <span class="token comment">// takes a long time to process, remove the socket from</span>
          <span class="token comment">// the waiting requests now else the async timeout will</span>
          <span class="token comment">// fire</span>
          <span class="token function">getProtocol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>endpoint<span class="token punctuation">.</span><span class="token function">removeWaitingRequest</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token comment">// There may be pipe-lined data to read. If the data</span>
          <span class="token comment">// isn&#39;t processed now, execution will exit this</span>
          <span class="token comment">// loop and call release() which will recycle the</span>
          <span class="token comment">// processor (and input buffer) deleting any</span>
          <span class="token comment">// pipe-lined data. To avoid this, process it now.</span>
          state <span class="token operator">=</span> processor<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>processor<span class="token punctuation">.</span><span class="token function">isComet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        state <span class="token operator">=</span> processor<span class="token punctuation">.</span><span class="token function">event</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>processor<span class="token punctuation">.</span><span class="token function">getUpgradeInbound</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        state <span class="token operator">=</span> processor<span class="token punctuation">.</span><span class="token function">upgradeDispatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>processor<span class="token punctuation">.</span><span class="token function">isUpgrade</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        state <span class="token operator">=</span> processor<span class="token punctuation">.</span><span class="token function">upgradeDispatch</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5927\u591A\u6570\u60C5\u51B5\u4E0B\u8D70\u8FD9\u4E2A\u5206\u652F</span>
        state <span class="token operator">=</span> processor<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>state <span class="token operator">!=</span> <span class="token class-name">SocketState</span><span class="token punctuation">.</span>CLOSED <span class="token operator">&amp;&amp;</span> processor<span class="token punctuation">.</span><span class="token function">isAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4EE3\u7801\u6267\u884C\u5230\u8FD9\u91CC\uFF0C\u5C31\u53BB\u5224\u65AD\u4E00\u4E0B\u4E4B\u524D\u6709\u6CA1\u6709\u8C03\u7528\u8FC7complete\u65B9\u6CD5</span>
        <span class="token comment">// \u5982\u679C\u8C03\u7528\uFF0C\u90A3\u4E48\u5F53\u524D\u7684AsyncState\u5C31\u4F1A\u4ECECOMPLETE_PENDING--&gt;\u8C03\u7528doComplete\u65B9\u6CD5\u6539\u4E3ACOMPLETING\uFF0CSocketState\u4E3AASYNC_END</span>
        <span class="token comment">// \u5982\u679C\u6CA1\u6709\u8C03\u7528\uFF0C\u90A3\u4E48\u5F53\u524D\u7684AsyncState\u5C31\u4F1A\u4ECESTARTING--&gt;STARTED\uFF0CSocketState\u4E3ALONG</span>
        <span class="token comment">//</span>
        <span class="token comment">// \u72B6\u6001\u8F6C\u6362\uFF0C\u6709\u4E09\u79CD\u60C5\u51B5</span>
        <span class="token comment">// 1. COMPLETE_PENDING---&gt;COMPLETING\uFF0CCOMPLETE_PENDING\u662F\u5728\u8C03\u7528complete\u65B9\u6CD5\u65F6\u5019\u7531STARTING\u6539\u53D8\u8FC7\u6765\u7684</span>
        <span class="token comment">// 2. STARTING----&gt;STARTED\uFF0CSTARTED\u7684\u4E0B\u4E00\u4E2A\u72B6\u6001\u9700\u8981\u6709complete\u65B9\u6CD5\u6765\u6539\u53D8\uFF0C\u4F1A\u6539\u6210COMPLETING</span>
        <span class="token comment">// 3. COMPLETING----&gt;DISPATCHED</span>
        state <span class="token operator">=</span> processor<span class="token punctuation">.</span><span class="token function">asyncPostProcess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>state <span class="token operator">==</span> <span class="token class-name">SocketState</span><span class="token punctuation">.</span>UPGRADING<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Get the HTTP upgrade handler</span>
        <span class="token class-name">HttpUpgradeHandler</span> httpUpgradeHandler <span class="token operator">=</span>
          processor<span class="token punctuation">.</span><span class="token function">getHttpUpgradeHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Release the Http11 processor to be re-used</span>
        <span class="token function">release</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">,</span> processor<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Create the upgrade processor</span>
        processor <span class="token operator">=</span> <span class="token function">createUpgradeProcessor</span><span class="token punctuation">(</span>
          wrapper<span class="token punctuation">,</span> httpUpgradeHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Mark the connection as upgraded</span>
        wrapper<span class="token punctuation">.</span><span class="token function">setUpgraded</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Associate with the processor with the connection</span>
        connections<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>socket<span class="token punctuation">,</span> processor<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Initialise the upgrade handler (which may trigger</span>
        <span class="token comment">// some IO using the new protocol which is why the lines</span>
        <span class="token comment">// above are necessary)</span>
        <span class="token comment">// This cast should be safe. If it fails the error</span>
        <span class="token comment">// handling for the surrounding try/catch will deal with</span>
        <span class="token comment">// it.</span>
        httpUpgradeHandler<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">WebConnection</span><span class="token punctuation">)</span> processor<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>state <span class="token operator">==</span> <span class="token class-name">SocketState</span><span class="token punctuation">.</span>UPGRADING_TOMCAT<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Get the UpgradeInbound handler</span>
        <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span>http11<span class="token punctuation">.</span>upgrade<span class="token punctuation">.</span></span>UpgradeInbound</span> inbound <span class="token operator">=</span>
          processor<span class="token punctuation">.</span><span class="token function">getUpgradeInbound</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Release the Http11 processor to be re-used</span>
        <span class="token function">release</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">,</span> processor<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Create the light-weight upgrade processor</span>
        processor <span class="token operator">=</span> <span class="token function">createUpgradeProcessor</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">,</span> inbound<span class="token punctuation">)</span><span class="token punctuation">;</span>
        inbound<span class="token punctuation">.</span><span class="token function">onUpgradeComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">getLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Socket: [&quot;</span> <span class="token operator">+</span> wrapper <span class="token operator">+</span>
                       <span class="token string">&quot;], Status in: [&quot;</span> <span class="token operator">+</span> status <span class="token operator">+</span>
                       <span class="token string">&quot;], State out: [&quot;</span> <span class="token operator">+</span> state <span class="token operator">+</span> <span class="token string">&quot;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u5982\u679C\u5728\u8BBF\u95EE\u5F02\u6B65servlet\u65F6\uFF0C\u4EE3\u7801\u6267\u884C\u5230\u8FD9\u91CC\uFF0C\u5DF2\u7ECF\u8C03\u7528\u8FC7complete\u65B9\u6CD5\u4E86\uFF0C\u90A3\u4E48\u72B6\u6001\u5C31\u662FSocketState.ASYNC_END</span>
    <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>state <span class="token operator">==</span> <span class="token class-name">SocketState</span><span class="token punctuation">.</span>ASYNC_END <span class="token operator">||</span>
             state <span class="token operator">==</span> <span class="token class-name">SocketState</span><span class="token punctuation">.</span>UPGRADING <span class="token operator">||</span>
             state <span class="token operator">==</span> <span class="token class-name">SocketState</span><span class="token punctuation">.</span>UPGRADING_TOMCAT<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>state <span class="token operator">==</span> <span class="token class-name">SocketState</span><span class="token punctuation">.</span>LONG<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// In the middle of processing a request/response. Keep the</span>
      <span class="token comment">// socket associated with the processor. Exact requirements</span>
      <span class="token comment">// depend on type of long poll</span>
      connections<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>socket<span class="token punctuation">,</span> processor<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">longPoll</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">,</span> processor<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>state <span class="token operator">==</span> <span class="token class-name">SocketState</span><span class="token punctuation">.</span>OPEN<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// In keep-alive but between requests. OK to recycle</span>
      <span class="token comment">// processor. Continue to poll for the next request.</span>
      connections<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>socket<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">release</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">,</span> processor<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>state <span class="token operator">==</span> <span class="token class-name">SocketState</span><span class="token punctuation">.</span>SENDFILE<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// Sendfile in progress. If it fails, the socket will be</span>
      <span class="token comment">// closed. If it works, the socket either be added to the</span>
      <span class="token comment">// poller (or equivalent) to await more data or processed</span>
      <span class="token comment">// if there are any pipe-lined requests remaining.</span>
      connections<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>socket<span class="token punctuation">,</span> processor<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>state <span class="token operator">==</span> <span class="token class-name">SocketState</span><span class="token punctuation">.</span>UPGRADED<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// Need to keep the connection associated with the processor</span>
      connections<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>socket<span class="token punctuation">,</span> processor<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// Don&#39;t add sockets back to the poller if this was a</span>
      <span class="token comment">// non-blocking write otherwise the poller may trigger</span>
      <span class="token comment">// multiple read events which may lead to thread starvation</span>
      <span class="token comment">// in the connector. The write() method will add this socket</span>
      <span class="token comment">// to the poller if necessary.</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">!=</span> <span class="token class-name">SocketStatus</span><span class="token punctuation">.</span>OPEN_WRITE<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">longPoll</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">,</span> processor<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// Connection closed. OK to recycle the processor. Upgrade</span>
      <span class="token comment">// processors are not recycled.</span>
      connections<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>socket<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>processor<span class="token punctuation">.</span><span class="token function">isUpgrade</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        processor<span class="token punctuation">.</span><span class="token function">getHttpUpgradeHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>processor <span class="token keyword">instanceof</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span>http11<span class="token punctuation">.</span>upgrade<span class="token punctuation">.</span></span>UpgradeProcessor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// NO-OP</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">release</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">,</span> processor<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> state<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span>SocketException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// SocketExceptions are normal</span>
    <span class="token function">getLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>
      <span class="token string">&quot;abstractConnectionHandler.socketexception.debug&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// IOExceptions are normal</span>
    <span class="token function">getLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>
      <span class="token string">&quot;abstractConnectionHandler.ioexception.debug&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// Future developers: if you discover any other</span>
  <span class="token comment">// rare-but-nonfatal exceptions, catch them here, and log as</span>
  <span class="token comment">// above.</span>
  <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ExceptionUtils</span><span class="token punctuation">.</span><span class="token function">handleThrowable</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// any other exception or error is odd. Here we log it</span>
    <span class="token comment">// with &quot;ERROR&quot; level, so it will show up even on</span>
    <span class="token comment">// less-than-verbose logs.</span>
    <span class="token function">getLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>
      sm<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;abstractConnectionHandler.error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// Make sure socket/processor is removed from the list of current</span>
  <span class="token comment">// connections</span>
  connections<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>socket<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// Don&#39;t try to add upgrade processors back into the pool</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>processor <span class="token keyword">instanceof</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span>http11<span class="token punctuation">.</span>upgrade<span class="token punctuation">.</span></span>UpgradeProcessor</span><span class="token punctuation">)</span>
      <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>processor<span class="token punctuation">.</span><span class="token function">isUpgrade</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">release</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">,</span> processor<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token class-name">SocketState</span><span class="token punctuation">.</span>CLOSED<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><code>processor = createProcessor();</code>\u5982\u679C\u9700\u8981\u5904\u7406Socket\uFF0C\u90A3\u4E48\u5C31\u9700\u8981\u5148\u521B\u5EFA\u4E00\u4E2A\u5904\u7406\u5668\uFF0C\u73B0\u5728\u6211\u4EEC\u4E3B\u8981\u662F\u8BB2\u7684\u662F<code>Http11ConnectionHandler</code></li></ol><p><img src="`+qn+`" alt="image-20220221001358665"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token class-name">Http11Processor</span> <span class="token function">createProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">Http11Processor</span> processor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Http11Processor</span><span class="token punctuation">(</span>
    proto<span class="token punctuation">.</span><span class="token function">getMaxHttpHeaderSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> proto<span class="token punctuation">.</span><span class="token function">getRejectIllegalHeaderName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token class-name">JIoEndpoint</span><span class="token punctuation">)</span>proto<span class="token punctuation">.</span>endpoint<span class="token punctuation">,</span> proto<span class="token punctuation">.</span><span class="token function">getMaxTrailerSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    proto<span class="token punctuation">.</span><span class="token function">getAllowedTrailerHeadersAsSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> proto<span class="token punctuation">.</span><span class="token function">getMaxExtensionSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    proto<span class="token punctuation">.</span><span class="token function">getMaxSwallowSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> proto<span class="token punctuation">.</span><span class="token function">getRelaxedPathChars</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    proto<span class="token punctuation">.</span><span class="token function">getRelaxedQueryChars</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  processor<span class="token punctuation">.</span><span class="token function">setAdapter</span><span class="token punctuation">(</span>proto<span class="token punctuation">.</span>adapter<span class="token punctuation">)</span><span class="token punctuation">;</span>
  processor<span class="token punctuation">.</span><span class="token function">setMaxKeepAliveRequests</span><span class="token punctuation">(</span>proto<span class="token punctuation">.</span><span class="token function">getMaxKeepAliveRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  processor<span class="token punctuation">.</span><span class="token function">setKeepAliveTimeout</span><span class="token punctuation">(</span>proto<span class="token punctuation">.</span><span class="token function">getKeepAliveTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  processor<span class="token punctuation">.</span><span class="token function">setConnectionUploadTimeout</span><span class="token punctuation">(</span>
    proto<span class="token punctuation">.</span><span class="token function">getConnectionUploadTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  processor<span class="token punctuation">.</span><span class="token function">setDisableUploadTimeout</span><span class="token punctuation">(</span>proto<span class="token punctuation">.</span><span class="token function">getDisableUploadTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  processor<span class="token punctuation">.</span><span class="token function">setCompressionMinSize</span><span class="token punctuation">(</span>proto<span class="token punctuation">.</span><span class="token function">getCompressionMinSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  processor<span class="token punctuation">.</span><span class="token function">setCompression</span><span class="token punctuation">(</span>proto<span class="token punctuation">.</span><span class="token function">getCompression</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  processor<span class="token punctuation">.</span><span class="token function">setNoCompressionUserAgents</span><span class="token punctuation">(</span>proto<span class="token punctuation">.</span><span class="token function">getNoCompressionUserAgents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  processor<span class="token punctuation">.</span><span class="token function">setCompressableMimeTypes</span><span class="token punctuation">(</span>proto<span class="token punctuation">.</span><span class="token function">getCompressableMimeTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  processor<span class="token punctuation">.</span><span class="token function">setRestrictedUserAgents</span><span class="token punctuation">(</span>proto<span class="token punctuation">.</span><span class="token function">getRestrictedUserAgents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  processor<span class="token punctuation">.</span><span class="token function">setSocketBuffer</span><span class="token punctuation">(</span>proto<span class="token punctuation">.</span><span class="token function">getSocketBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  processor<span class="token punctuation">.</span><span class="token function">setMaxSavePostSize</span><span class="token punctuation">(</span>proto<span class="token punctuation">.</span><span class="token function">getMaxSavePostSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  processor<span class="token punctuation">.</span><span class="token function">setServer</span><span class="token punctuation">(</span>proto<span class="token punctuation">.</span><span class="token function">getServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  processor<span class="token punctuation">.</span><span class="token function">setDisableKeepAlivePercentage</span><span class="token punctuation">(</span>
    proto<span class="token punctuation">.</span><span class="token function">getDisableKeepAlivePercentage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  processor<span class="token punctuation">.</span><span class="token function">setMaxCookieCount</span><span class="token punctuation">(</span>proto<span class="token punctuation">.</span><span class="token function">getMaxCookieCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">register</span><span class="token punctuation">(</span>processor<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> processor<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7\u8FD9\u4E2A\u51FD\u6570\u4E2D\u7684<code>getMaxHttpHeaderSize</code>\u6211\u4EEC\u53EF\u4EE5\u77E5\u9053\uFF0C\u5982\u679C\u6211\u4EEC\u60F3\u8981\u8BBE\u7F6EHTTP\u5B57\u8282\u5934\u7684\u5927\u5C0F\uFF0C\u53EF\u4EE5\u5728server.xml\u4E2D\u7684Connector\u8282\u70B9\u4E2D\u8BBE\u7F6E</p><p><img src="`+En+'" alt="image-20220221001655198"></p><p>\u9ED8\u8BA4\u7684\u5927\u5C0F\u662F</p><p><img src="'+xn+`" alt="image-20220221001744008"></p><p>\u5F53\u7136\u4E86\uFF0C\u901A\u8FC7\u4E0A\u9762\u7684\u914D\u7F6E\u83B7\u53D6\u53EF\u4EE5\u77E5\u9053\uFF0C\u6211\u4EEC\u8FD8\u53EF\u4EE5\u8BBE\u7F6E\u66F4\u591A\u7684\u4E1C\u897F\uFF0C\u6BD4\u5982\u6211\u4EEC\u4ECA\u5929\u8BB2\u7684\u957F\u8FDE\u63A5\u4E2D\u6D89\u53CA\u5230\u7684\u4E24\u4E2A\u6BD4\u8F83\u91CD\u8981\u7684\u914D\u7F6E</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>processor<span class="token punctuation">.</span><span class="token function">setMaxKeepAliveRequests</span><span class="token punctuation">(</span>proto<span class="token punctuation">.</span><span class="token function">getMaxKeepAliveRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
processor<span class="token punctuation">.</span><span class="token function">setKeepAliveTimeout</span><span class="token punctuation">(</span>proto<span class="token punctuation">.</span><span class="token function">getKeepAliveTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>MaxKeepAliveRequests</code> \u6BCF\u4E2A\u957F\u8FDE\u63A5\u4E0A\u80FD\u591F\u5904\u7406HTTP\u8BF7\u6C42\u7684\u6700\u5927\u503C\uFF0C\u5982\u679C\u6700\u5927\u7684\u6D3B\u8DC3\u7684http\u8BF7\u6C42\u6570\u91CF\u4EC5\u4EC5\u4E3A1 \u7684\u8BDD\uFF0C\u90A3\u4E48\u8BBE\u7F6Ekeepalive\u4E3Afalse\uFF0C\u5219\u4E0D\u4F1A\u7EE7\u7EED\u4ECEsocket\u4E2D\u83B7\u53D6http\u8BF7\u6C42\u4E86\uFF0C\u9ED8\u8BA4\u662F100\uFF0C\u5F53\u8FBE\u523075%\u4E4B\u540E\uFF0C\u4E00\u65E6\u7B2C\u4E00\u4E2ASocket\u5904\u7406\u5B8C\u6210\uFF0C\u5C31\u4F1A\u5173\u95ED\uFF0C\u56DE\u6536\u8D44\u6E90</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
  * The percentage of threads that have to be in use before keep-alive is
  * disabled to aid scalability.
  */</span>
<span class="token keyword">private</span> <span class="token keyword">int</span> disableKeepAlivePercentage <span class="token operator">=</span> <span class="token number">75</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u5728server.xml\u4E2D\u7684Connector\u4E2D\u8BBE\u7F6E</p><p><img src="`+Tn+`" alt="image-20220221131106506"></p><ul><li><code>KeepAliveTimeout</code> \u957F\u8FDE\u63A5\u8D85\u65F6\u5927\u5C0F</li></ul><ol start="2"><li>\u521B\u5EFA\u5B8C\u5904\u7406\u5668\u4E4B\u540E\uFF0C\u5C31\u5F00\u59CB\u5904\u7406Socket</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u5927\u591A\u6570\u60C5\u51B5\u4E0B\u8D70\u8FD9\u4E2A\u5206\u652F</span>
state <span class="token operator">=</span> processor<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8C03\u7528process\u5904\u7406\u957F\u8FDE\u63A5\uFF0C\u8FD8\u662F\u4E00\u6837\uFF0C\u8C03\u7528\u7684\u662F\u5B9E\u73B0\u7C7B<code>AbstractHttp11Processor#process</code>\u51FD\u6570</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">SocketState</span> <span class="token function">process</span><span class="token punctuation">(</span><span class="token class-name">SocketWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">S</span><span class="token punctuation">&gt;</span></span> socketWrapper<span class="token punctuation">)</span>
        <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
  <span class="token class-name">RequestInfo</span> rp <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getRequestProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  rp<span class="token punctuation">.</span><span class="token function">setStage</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span></span>Constants</span><span class="token punctuation">.</span>STAGE_PARSE<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// \u8BBE\u7F6E\u8BF7\u6C42\u72B6\u6001\u4E3A\u89E3\u6790\u72B6\u6001</span>

  <span class="token comment">// Setting up the I/O</span>
  <span class="token function">setSocketWrapper</span><span class="token punctuation">(</span>socketWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">getInputBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>socketWrapper<span class="token punctuation">,</span> endpoint<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// \u5C06socket\u7684InputStream\u4E0EInternalInputBuffer\u8FDB\u884C\u7ED1\u5B9A</span>
  <span class="token function">getOutputBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>socketWrapper<span class="token punctuation">,</span> endpoint<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// \u5C06socket\u7684OutputStream\u4E0EInternalOutputBuffer\u8FDB\u884C\u7ED1\u5B9A</span>

  <span class="token comment">// Flags</span>
  keepAlive <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  comet <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  openSocket <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  sendfileInProgress <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  readComplete <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token comment">// NioEndpoint\u8FD4\u56DEtrue, Bio\u8FD4\u56DEfalse</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>endpoint<span class="token punctuation">.</span><span class="token function">getUsePolling</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    keptAlive <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    keptAlive <span class="token operator">=</span> socketWrapper<span class="token punctuation">.</span><span class="token function">isKeptAlive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u5982\u679C\u5F53\u524D\u6D3B\u8DC3\u7684\u7EBF\u7A0B\u6570\u5360\u7EBF\u7A0B\u6C60\u6700\u5927\u7EBF\u7A0B\u6570\u7684\u6BD4\u4F8B\u5927\u4E8E75%\uFF0C\u90A3\u4E48\u5219\u5173\u95EDKeepAlive\uFF0C\u4E0D\u518D\u652F\u6301\u957F\u8FDE\u63A5</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">disableKeepAlive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    socketWrapper<span class="token punctuation">.</span><span class="token function">setKeepAliveLeft</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// keepAlive\u9ED8\u8BA4\u4E3Atrue,\u5B83\u7684\u503C\u4F1A\u4ECE\u8BF7\u6C42\u4E2D\u8BFB\u53D6</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">getErrorState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isError</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> keepAlive <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>comet <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
         upgradeInbound <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
         httpUpgradeHandler <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>endpoint<span class="token punctuation">.</span><span class="token function">isPaused</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// keepAlive\u5982\u679C\u4E3Atrue,\u63A5\u4E0B\u6765\u9700\u8981\u4ECEsocket\u4E2D\u4E0D\u505C\u7684\u83B7\u53D6http\u8BF7\u6C42</span>

    <span class="token comment">// Parsing the request header</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u7B2C\u4E00\u6B21\u4ECEsocket\u4E2D\u8BFB\u53D6\u6570\u636E\uFF0C\u5E76\u8BBE\u7F6Esocket\u7684\u8BFB\u53D6\u6570\u636E\u7684\u8D85\u65F6\u65F6\u95F4</span>
      <span class="token comment">// \u5BF9\u4E8EBIO\uFF0C\u4E00\u4E2Asocket\u8FDE\u63A5\u5EFA\u7ACB\u597D\u540E\uFF0C\u4E0D\u4E00\u5B9A\u9A6C\u4E0A\u5C31\u88ABTomcat\u5904\u7406\u4E86\uFF0C\u5176\u4E2D\u9700\u8981\u7EBF\u7A0B\u6C60\u7684\u8C03\u5EA6\uFF0C\u6240\u4EE5\u8FD9\u6BB5\u7B49\u5F85\u7684\u65F6\u95F4\u8981\u7B97\u5728socket\u8BFB\u53D6\u6570\u636E\u7684\u65F6\u95F4\u5185</span>
      <span class="token comment">// \u800C\u5BF9\u4E8ENIO\u800C\u8A00\uFF0C\u6CA1\u6709\u963B\u585E</span>
      <span class="token function">setRequestLineReadTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// \u89E3\u6790\u8BF7\u6C42\u884C</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">getInputBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parseRequestLine</span><span class="token punctuation">(</span>keptAlive<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4E0B\u9762\u8FD9\u4E2A\u65B9\u6CD5\u5728NIO\u65F6\u6709\u7528\uFF0C\u6BD4\u5982\u5728\u89E3\u6790\u8BF7\u6C42\u884C\u65F6\uFF0C\u5982\u679C\u6CA1\u6709\u4ECE\u64CD\u4F5C\u7CFB\u7EDF\u8BFB\u5230\u6570\u636E\uFF0C\u5219\u4E0A\u9762\u7684\u65B9\u6CD5\u4F1A\u8FD4\u56DEfalse</span>
        <span class="token comment">// \u800C\u4E0B\u9762\u8FD9\u4E2A\u65B9\u6CD5\u4F1A\u8FD4\u56DEtrue\uFF0C\u4ECE\u800C\u9000\u51FAwhile\uFF0C\u8868\u793A\u6B64\u5904read\u4E8B\u4EF6\u5904\u7406\u7ED3\u675F</span>
        <span class="token comment">// \u5230\u4E0B\u4E00\u6B21read\u4E8B\u4EF6\u53D1\u751F\u4E86\uFF0C\u5C31\u4F1A\u4ECE\u5C0F\u8FDB\u5165\u5230while\u4E2D</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">handleIncompleteRequestLineRead</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>endpoint<span class="token punctuation">.</span><span class="token function">isPaused</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 503 - Service unavailable</span>
        <span class="token comment">// \u5982\u679CEndpoint\u88AB\u6682\u505C\u4E86\uFF0C\u5219\u8FD4\u56DE503</span>
        response<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token number">503</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setErrorState</span><span class="token punctuation">(</span><span class="token class-name">ErrorState</span><span class="token punctuation">.</span>CLOSE_CLEAN<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        keptAlive <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token comment">// Set this every time in case limit has been changed via JMX</span>
        <span class="token comment">// \u6BCF\u6B21\u5904\u7406\u4E00\u4E2A\u8BF7\u6C42\u5C31\u91CD\u65B0\u83B7\u53D6\u4E00\u4E0B\u8BF7\u6C42\u5934\u548Ccookies\u7684\u6700\u5927\u9650\u5236</span>
        request<span class="token punctuation">.</span><span class="token function">getMimeHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setLimit</span><span class="token punctuation">(</span>endpoint<span class="token punctuation">.</span><span class="token function">getMaxHeaderCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        request<span class="token punctuation">.</span><span class="token function">getCookies</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setLimit</span><span class="token punctuation">(</span><span class="token function">getMaxCookieCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Currently only NIO will ever return false here</span>
        <span class="token comment">// \u89E3\u6790\u8BF7\u6C42\u5934</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">getInputBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parseHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// We&#39;ve read part of the request, don&#39;t recycle it</span>
          <span class="token comment">// instead associate it with the socket</span>
          openSocket <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
          readComplete <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
          <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>disableUploadTimeout<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">setSocketTimeout</span><span class="token punctuation">(</span>connectionUploadTimeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">getLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span>
          sm<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;http11processor.header.parse&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token function">setErrorState</span><span class="token punctuation">(</span><span class="token class-name">ErrorState</span><span class="token punctuation">.</span>CLOSE_NOW<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">ExceptionUtils</span><span class="token punctuation">.</span><span class="token function">handleThrowable</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">UserDataHelper<span class="token punctuation">.</span>Mode</span> logMode <span class="token operator">=</span> userDataHelper<span class="token punctuation">.</span><span class="token function">getNextMode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>logMode <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> message <span class="token operator">=</span> sm<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>
          <span class="token string">&quot;http11processor.header.parse&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>logMode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">case</span> INFO_THEN_DEBUG<span class="token operator">:</span>
            message <span class="token operator">+=</span> sm<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>
              <span class="token string">&quot;http11processor.fallToDebug&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//$FALL-THROUGH$</span>
          <span class="token keyword">case</span> INFO<span class="token operator">:</span>
            <span class="token function">getLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
          <span class="token keyword">case</span> DEBUG<span class="token operator">:</span>
            <span class="token function">getLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// 400 - Bad Request</span>
      response<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">setErrorState</span><span class="token punctuation">(</span><span class="token class-name">ErrorState</span><span class="token punctuation">.</span>CLOSE_CLEAN<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">getAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">getErrorState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// Setting up filters, and parse some request headers</span>
      rp<span class="token punctuation">.</span><span class="token function">setStage</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span></span>Constants</span><span class="token punctuation">.</span>STAGE_PREPARE<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u8BBE\u7F6E\u8BF7\u6C42\u72B6\u6001\u4E3A\u9884\u5904\u7406\u72B6\u6001</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token function">prepareRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// \u9884\u5904\u7406, \u4E3B\u8981\u4ECE\u8BF7\u6C42\u4E2D\u5904\u7406\u5904keepAlive\u5C5E\u6027\uFF0C\u4EE5\u53CA\u8FDB\u884C\u4E00\u4E9B\u9A8C\u8BC1\uFF0C\u4EE5\u53CA\u6839\u636E\u8BF7\u6C42\u5206\u6790\u5F97\u5230ActiveInputFilter</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ExceptionUtils</span><span class="token punctuation">.</span><span class="token function">handleThrowable</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">getLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>
            <span class="token string">&quot;http11processor.request.prepare&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 500 - Internal Server Error</span>
        response<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setErrorState</span><span class="token punctuation">(</span><span class="token class-name">ErrorState</span><span class="token punctuation">.</span>CLOSE_CLEAN<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">getAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>maxKeepAliveRequests <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C\u6700\u5927\u7684\u6D3B\u8DC3http\u8BF7\u6C42\u6570\u91CF\u4EC5\u4EC5\u53EA\u80FD\u4E3A1\u7684\u8BDD\uFF0C\u90A3\u4E48\u8BBE\u7F6EkeepAlive\u4E3Afalse\uFF0C\u5219\u4E0D\u4F1A\u7EE7\u7EED\u4ECEsocket\u4E2D\u83B7\u53D6Http\u8BF7\u6C42\u4E86</span>
      keepAlive <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>maxKeepAliveRequests <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>
               socketWrapper<span class="token punctuation">.</span><span class="token function">decrementKeepAlive</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C\u5DF2\u7ECF\u8FBE\u5230\u4E86keepAlive\u7684\u6700\u5927\u9650\u5236\uFF0C\u4E5F\u8BBE\u7F6E\u4E3Afalse\uFF0C\u5219\u4E0D\u4F1A\u7EE7\u7EED\u4ECEsocket\u4E2D\u83B7\u53D6Http\u8BF7\u6C42\u4E86</span>
      keepAlive <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Process the request in the adapter</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">getErrorState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        rp<span class="token punctuation">.</span><span class="token function">setStage</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span></span>Constants</span><span class="token punctuation">.</span>STAGE_SERVICE<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8BBE\u7F6E\u8BF7\u6C42\u7684\u72B6\u6001\u4E3A\u670D\u52A1\u72B6\u6001\uFF0C\u8868\u793A\u6B63\u5728\u5904\u7406\u8BF7\u6C42</span>
        adapter<span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4EA4\u7ED9\u5BB9\u5668\u5904\u7406\u8BF7\u6C42</span>
        <span class="token comment">// Handle when the response was committed before a serious</span>
        <span class="token comment">// error occurred.  Throwing a ServletException should both</span>
        <span class="token comment">// set the status to 500 and set the errorException.</span>
        <span class="token comment">// If we fail here, then the response is likely already</span>
        <span class="token comment">// committed, so we can&#39;t try and set headers.</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>keepAlive <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">getErrorState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isError</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>
          response<span class="token punctuation">.</span><span class="token function">getErrorException</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">||</span>
          <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
           <span class="token function">statusDropsConnection</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">setErrorState</span><span class="token punctuation">(</span><span class="token class-name">ErrorState</span><span class="token punctuation">.</span>CLOSE_CLEAN<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">setCometTimeouts</span><span class="token punctuation">(</span>socketWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedIOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">setErrorState</span><span class="token punctuation">(</span><span class="token class-name">ErrorState</span><span class="token punctuation">.</span>CLOSE_NOW<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">HeadersTooLargeException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">getLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;http11processor.request.process&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// The response should not have been committed but check it</span>
        <span class="token comment">// anyway to be safe</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">isCommitted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">setErrorState</span><span class="token punctuation">(</span><span class="token class-name">ErrorState</span><span class="token punctuation">.</span>CLOSE_NOW<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          response<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          response<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token function">setErrorState</span><span class="token punctuation">(</span><span class="token class-name">ErrorState</span><span class="token punctuation">.</span>CLOSE_CLEAN<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
          response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Connection&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;close&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// TODO: Remove</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ExceptionUtils</span><span class="token punctuation">.</span><span class="token function">handleThrowable</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">getLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;http11processor.request.process&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 500 - Internal Server Error</span>
        response<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setErrorState</span><span class="token punctuation">(</span><span class="token class-name">ErrorState</span><span class="token punctuation">.</span>CLOSE_CLEAN<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">getAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Finish the handling of the request</span>
    rp<span class="token punctuation">.</span><span class="token function">setStage</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span></span>Constants</span><span class="token punctuation">.</span>STAGE_ENDINPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u8BBE\u7F6E\u8BF7\u6C42\u7684\u72B6\u6001\u4E3A\u5904\u7406\u8BF7\u6C42\u7ED3\u675F</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>comet<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getErrorState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// If we know we are closing the connection, don&#39;t drain</span>
        <span class="token comment">// input. This way uploading a 100GB file doesn&#39;t tie up the</span>
        <span class="token comment">// thread if the servlet has rejected it.</span>
        <span class="token function">getInputBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setSwallowInput</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// Need to check this again here in case the response was</span>
        <span class="token comment">// committed before the error that requires the connection</span>
        <span class="token comment">// to be closed occurred.</span>
        <span class="token function">checkExpectationAndResponseStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u5F53\u524Dhttp\u8BF7\u6C42\u5DF2\u7ECF\u5904\u7406\u5B8C\u4E86\uFF0C\u505A\u4E00\u4E9B\u6536\u5C3E\u5DE5\u4F5C</span>
      <span class="token function">endRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    rp<span class="token punctuation">.</span><span class="token function">setStage</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span></span>Constants</span><span class="token punctuation">.</span>STAGE_ENDOUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8BF7\u6C42\u72B6\u6001\u4E3A\u8F93\u51FA\u7ED3\u675F</span>

    <span class="token comment">// If there was an error, make sure the request is counted as</span>
    <span class="token comment">// and error, and update the statistics counter</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getErrorState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      response<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    request<span class="token punctuation">.</span><span class="token function">updateCounters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>comet <span class="token operator">||</span> <span class="token function">getErrorState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getErrorState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isIoAllowed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u51C6\u5907\u5904\u7406\u4E0B\u4E00\u4E2A\u8BF7\u6C42</span>
        <span class="token function">getInputBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">getOutputBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>disableUploadTimeout<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>endpoint<span class="token punctuation">.</span><span class="token function">getSoTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">setSocketTimeout</span><span class="token punctuation">(</span>endpoint<span class="token punctuation">.</span><span class="token function">getSoTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">setSocketTimeout</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    rp<span class="token punctuation">.</span><span class="token function">setStage</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span></span>Constants</span><span class="token punctuation">.</span>STAGE_KEEPALIVE<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5982\u679C\u5904\u7406\u5B8C\u5F53\u524D\u8FD9\u4E2AHttp\u8BF7\u6C42\u4E4B\u540E\uFF0C\u53D1\u73B0socket\u91CC\u6CA1\u6709\u4E0B\u4E00\u4E2A\u8BF7\u6C42\u4E86,\u90A3\u4E48\u5C31\u9000\u51FA\u5F53\u524D\u5FAA\u73AF</span>
    <span class="token comment">// \u5982\u679C\u662Fkeepalive\uFF0C\u5C31\u4E0D\u4F1A\u5173\u95EDsocket, \u5982\u679C\u662Fclose\u5C31\u4F1A\u5173\u95EDsocket</span>
    <span class="token comment">// \u5BF9\u4E8Ekeepalive\u7684\u60C5\u51B5\uFF0C\u56E0\u4E3A\u662F\u4E00\u4E2A\u7EBF\u7A0B\u5904\u7406\u4E00\u4E2Asocket,\u5F53\u9000\u51FA\u8FD9\u4E2Awhile\u540E\uFF0C\u5F53\u524D\u7EBF\u7A0B\u5C31\u4F1A\u4ECB\u7ECD\uFF0C</span>
    <span class="token comment">// \u5F53\u65F6\u5BF9\u4E8Esocket\u6765\u8BF4\uFF0C\u5B83\u4ECD\u7136\u8981\u7EE7\u7EED\u4ECB\u7ECD\u8FDE\u63A5\uFF0C\u6240\u4EE5\u53C8\u4F1A\u65B0\u5F00\u4E00\u4E2A\u7EBF\u7A0B\u7EE7\u7EED\u6765\u5904\u7406\u8FD9\u4E2Asocket</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">breakKeepAliveLoop</span><span class="token punctuation">(</span>socketWrapper<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u81F3\u6B64\uFF0C\u5FAA\u73AF\u7ED3\u675F</span>

  rp<span class="token punctuation">.</span><span class="token function">setStage</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span></span>Constants</span><span class="token punctuation">.</span>STAGE_ENDED<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u4E3B\u8981\u6D41\u7A0B\u5C31\u662F\u5C06socket\u7684\u72B6\u6001\u8BBE\u7F6E\u4E3ACLOSED</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getErrorState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isError</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> endpoint<span class="token punctuation">.</span><span class="token function">isPaused</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">SocketState</span><span class="token punctuation">.</span>CLOSED<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> comet<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5F02\u6B65servlet</span>
    <span class="token keyword">return</span> <span class="token class-name">SocketState</span><span class="token punctuation">.</span>LONG<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUpgrade</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">SocketState</span><span class="token punctuation">.</span>UPGRADING<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getUpgradeInbound</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">SocketState</span><span class="token punctuation">.</span>UPGRADING_TOMCAT<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>sendfileInProgress<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token class-name">SocketState</span><span class="token punctuation">.</span>SENDFILE<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// openSocket\u4E3Atrue\uFF0C\u8868\u793A\u4E0D\u8981\u5173\u95EDsocket</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>openSocket<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// readComplete\u8868\u793A\u672C\u6B21\u8BFB\u6570\u636E\u662F\u5426\u5B8C\u6210\uFF0C\u6BD4\u5982nio\u4E2D\u53EF\u80FD\u5C31\u6CA1\u6709\u8BFB\u5B8C\u6570\u636E\uFF0C\u8FD8\u9700\u8981\u4ECEsocket\u4E2D\u8BFB\u6570\u636E</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>readComplete<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token class-name">SocketState</span><span class="token punctuation">.</span>OPEN<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token comment">// nio\u53EF\u80FD\u4F1A\u8D70\u5230\u8FD9\u91CC</span>
          <span class="token keyword">return</span> <span class="token class-name">SocketState</span><span class="token punctuation">.</span>LONG<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">SocketState</span><span class="token punctuation">.</span>CLOSED<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F1A\u5728\u5F00\u59CB\u5904\u7406\u4E4B\u524D\u8BBE\u7F6E\u4E00\u4E9B\u53C2\u6570\uFF0C\u6BD4\u5982\u9ED8\u8BA4\u8BBE\u7F6Ekeepalive\u662Ftrue\uFF0C\u7136\u540E\u5728\u6839\u636E\u8BF7\u6C42\u5934\u4E2DConnection\u6765\u8D4B\u503C</p><p>\u4E00\u65E6\u8BBE\u7F6Ekeepalive\u4E3Afalse\uFF0C\u90A3\u4E48\u6BCF\u4E2ARequest\u5C06\u4E0D\u4F1A\u5171\u7528socket\u8FDE\u63A5\uFF0C\u6BCF\u4E2ARequest\u90FD\u4F1A\u7533\u8BF7\u81EA\u5DF1\u7684\u8FDE\u63A5</p><p>\u6BD4\u5982\uFF0C\u8BBE\u7F6EmaxKeepAliveRequests\u4E3A1\uFF0C\u53EF\u4EE5\u95F4\u63A5\u5C06keepalvive\u8BBE\u7F6E\u4E3AFALSE</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>maxKeepAliveRequests <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679C\u6700\u5927\u7684\u6D3B\u8DC3http\u8BF7\u6C42\u6570\u91CF\u4EC5\u4EC5\u53EA\u80FD\u4E3A1\u7684\u8BDD\uFF0C\u90A3\u4E48\u8BBE\u7F6EkeepAlive\u4E3Afalse\uFF0C\u5219\u4E0D\u4F1A\u7EE7\u7EED\u4ECEsocket\u4E2D\u83B7\u53D6Http\u8BF7\u6C42\u4E86</span>
  keepAlive <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>maxKeepAliveRequests <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>
           socketWrapper<span class="token punctuation">.</span><span class="token function">decrementKeepAlive</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679C\u5DF2\u7ECF\u8FBE\u5230\u4E86keepAlive\u7684\u6700\u5927\u9650\u5236\uFF0C\u4E5F\u8BBE\u7F6E\u4E3Afalse\uFF0C\u5219\u4E0D\u4F1A\u7EE7\u7EED\u4ECEsocket\u4E2D\u83B7\u53D6Http\u8BF7\u6C42\u4E86</span>
  keepAlive <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u90A3\u4E48\uFF0Chttp Request\u8BF7\u6C42\u5C31\u4F1A\u5355\u72EC\u4F7F\u7528\u81EA\u5DF1\u7684socket\u8FDE\u63A5</p><p>\u6BD4\u5982\uFF0C\u6D4F\u89C8\u5668\u5411\u670D\u52A1\u5668\u53D1\u90017\u4E2A\u8BF7\u6C42</p><p><img src="`+In+'" alt="image-20220221133033026"></p><p>\u90A3\u4E48\u5C31\u4F1A\u521B\u5EFA7\u4E2Asocket\uFF0C\u5728BIO\u7684\u60C5\u51B5\u4E0B\uFF0CTomcat\u4E5F\u4F1A\u521B\u5EFA\u4E03\u4E2A\u7EBF\u7A0B\u6765\u5904\u7406\u8BF7\u6C42</p><p>\u5982\u679C\u6211\u4EEC\u5C06maxKeepAliveRequests\u8BBE\u7F6E\u4E3A\u5927\u4E8E1\u7684\u53C2\u6570\uFF0C\u95F4\u63A5\u8BBE\u7F6EKeepalive\u4E3ATRUE\uFF0C\u90A3\u4E48\u6709\u4E9B\u8BF7\u6C42\u5C31\u4F1A\u5171\u7528\u8FDE\u63A5\uFF0C\u5C31\u4F1A\u51FA\u73B0\u7EBF\u7A0B\u6570\u5C11\u4E8E7\u4E2A\u7684\u60C5\u51B5\uFF086\u4E2A\uFF09\uFF0C\u4F46\u662Fsocket\u8FD8\u662F7\u4E2A</p><p><img src="'+An+`" alt="image-20220221133508707"></p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u6D4F\u89C8\u5668\u6709\u4E00\u4E2A\u9650\u5236\uFF1A</span>
\u5728\u6211\u4EEC\u6253\u5F00\u4E00\u4E2A\u7F51\u9875\u7684\u65F6\u5019\uFF0C\u6D4F\u89C8\u5668\u5411\u670D\u52A1\u5668\u8BF7\u6C42\u5404\u79CD\u8D44\u6E90
\u6BD4\u5982\u6709100\u4E2A\u56FE\u7247\uFF0C\u90A3\u4E48\u6D4F\u89C8\u5668\u4E0D\u4F1A\u540C\u65F6\u5E76\u53D1\u7684\u53BB\u8BF7\u6C42100\u4E2A\u56FE\u7247
<span class="token blockquote punctuation">&gt;</span> \u540C\u4E00\u4E2A\u57DF\u540D\u4E0B\uFF0C\u6700\u591A\u5E76\u53D16\u4E2A\u8FDE\u63A5\u8BF7\u6C42\u8D44\u6E90\uFF0C\u6240\u4EE5\u5F53\u524D\u8D44\u6E90\u8BF7\u6C42\u7684\u65F6\u5019\uFF0C\u770B\u5F53\u524D\u6CA1\u6709\u7A7A\u7684socket\u7684\u8FDE\u63A5\uFF0C\u90A3\u4E48\u5C31\u4F1A\u53BB\u7533\u8BF7\u4E00\u4E2A\uFF0C\u5982\u679C\u5F53\u524D\u6709\u7A7A\u7684socket\u8FDE\u63A5\uFF0C\u90A3\u4E48\u5C31\u4F1A\u62FF\u8FC7\u6765\u4F7F\u7528\uFF0C\u5C31\u4F1A\u51FA\u73B0\u5171\u7528\u7684\u60C5\u51B5
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6839\u636E\u4E0A\u9762\u7684process\u51FD\u6570\uFF0C\u6211\u4EEC\u53EF\u4EE5\u62BD\u53D6\u51FA\u5927\u6982\u7684\u6D41\u7A0B\uFF0C\u5C31\u662F</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">while</span><span class="token punctuation">(</span>keepalive<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// while \u5FAA\u73AF\u4E0D\u65AD\u5904\u7406Socket</span>
  <span class="token comment">// \u7B2C\u4E00\u6B21\u4ECEsocket\u4E2D\u8BFB\u53D6\u6570\u636E\uFF0C\u5E76\u8BBE\u7F6Esocket\u7684\u8BFB\u53D6\u6570\u636E\u7684\u8D85\u65F6\u65F6\u95F4</span>
  <span class="token function">setRequestLineReadTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u89E3\u6790\u8BF7\u6C42\u884C</span>
  <span class="token function">getInputBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parseRequestLine</span><span class="token punctuation">(</span>keptAlive<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u9884\u5904\u7406, \u4E3B\u8981\u4ECE\u8BF7\u6C42\u4E2D\u5904\u7406\u5904keepAlive\u5C5E\u6027\uFF0C\u4EE5\u53CA\u8FDB\u884C\u4E00\u4E9B\u9A8C\u8BC1\uFF0C\u4EE5\u53CA\u6839\u636E\u8BF7\u6C42\u5206\u6790\u5F97\u5230ActiveInputFilter</span>
  <span class="token function">prepareRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u4EA4\u7ED9\u5BB9\u5668\u5904\u7406\u8BF7\u6C42</span>
  adapter<span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u5F53\u524Dhttp\u8BF7\u6C42\u5DF2\u7ECF\u5904\u7406\u5B8C\u4E86\uFF0C\u505A\u4E00\u4E9B\u6536\u5C3E\u5DE5\u4F5C</span>
  <span class="token function">endRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u51C6\u5907\u5904\u7406\u4E0B\u4E00\u4E2A\u8BF7\u6C42</span>
  <span class="token function">getInputBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u7814\u7A76\u4E00\u4E0B\u4E0A\u9762\u62BD\u53D6\u51FA\u6765\u7684\u5927\u6982\u6D41\u7A0B\uFF1A</p><ol><li><code>setRequestLineReadTimeout();</code></li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u7B2C\u4E00\u6B21\u4ECEsocket\u4E2D\u8BFB\u53D6\u6570\u636E\uFF0C\u5E76\u8BBE\u7F6Esocket\u7684\u8BFB\u53D6\u6570\u636E\u7684\u8D85\u65F6\u65F6\u95F4</span>
<span class="token comment">// \u5BF9\u4E8EBIO\uFF0C\u4E00\u4E2Asocket\u8FDE\u63A5\u5EFA\u7ACB\u597D\u540E\uFF0C\u4E0D\u4E00\u5B9A\u9A6C\u4E0A\u5C31\u88ABTomcat\u5904\u7406\u4E86\uFF0C\u5176\u4E2D\u9700\u8981\u7EBF\u7A0B\u6C60\u7684\u8C03\u5EA6\uFF0C\u6240\u4EE5\u8FD9\u6BB5\u7B49\u5F85\u7684\u65F6\u95F4\u8981\u7B97\u5728socket\u8BFB\u53D6\u6570\u636E\u7684\u65F6\u95F4\u5185</span>
<span class="token comment">// \u800C\u5BF9\u4E8ENIO\u800C\u8A00\uFF0C\u6CA1\u6709\u963B\u585E</span>
<span class="token function">setRequestLineReadTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">setRequestLineReadTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>

  <span class="token comment">/*
         * When there is no data in the buffer and this is not the first
         * request on this connection and timeouts are being used the
         * first read for this request may need a different timeout to
         * take account of time spent waiting for a processing thread.
         *
         * This is a little hacky but better than exposing the socket
         * and the timeout info to the InputBuffer
         */</span>
  <span class="token comment">// \u6700\u8FD1\u4E00\u6B21\u8BBF\u95EE\u7684\u65F6\u95F4</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>inputBuffer<span class="token punctuation">.</span>lastValid <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> socketWrapper<span class="token punctuation">.</span><span class="token function">getLastAccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> firstReadTimeout<span class="token punctuation">;</span>
    <span class="token comment">// \u5982\u679C\u957F\u8FDE\u63A5\u6CA1\u6709\u8D85\u65F6\u65F6\u95F4\uFF0C\u90A3\u4E48\u4ECEsocket\u4E2D\u8BFB\u6570\u636E\u4E5F\u6CA1\u6709\u8D85\u65F6\u65F6\u95F4</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>keepAliveTimeout <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      firstReadTimeout <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u4E00\u4E2Asocket\u5728\u88AB\u5904\u7406\u4E4B\u524D\u4F1A\u8C03\u7528\u4E00\u4E0Baccess\u65B9\u6CD5\uFF0C\u6240\u4EE5queueTime\u8868\u793A\u7684\u662Fsocket\u521B\u5EFA\u597D\u4E86\u5230\u771F\u6B63\u88AB\u5904\u7406\u8FD9\u6BB5\u8FC7\u7A0B\u7684\u6392\u961F\u65F6\u95F4</span>
      <span class="token keyword">long</span> queueTime <span class="token operator">=</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> socketWrapper<span class="token punctuation">.</span><span class="token function">getLastAccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// \u5982\u679C\u6392\u961F\u65F6\u95F4\u5927\u4E8EkeepAliveTimeout\uFF0C\u8868\u793A\u8BE5socket\u5DF2\u7ECF\u8D85\u65F6\u4E86\u4E0D\u9700\u8981\u88AB\u5904\u7406\u4E86\uFF0C\u8BBE\u7F6E\u4E00\u4E2A\u6700\u5C0F\u7684\u8D85\u65F6\u65F6\u95F4\uFF0C\u5F53\u4ECE\u8FD9\u4E2Asocket\u4E0A\u8BFB\u53D6\u6570\u636E\u65F6\u4F1A\u7ACB\u523B\u8D85\u65F6</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>queueTime <span class="token operator">&gt;=</span> keepAliveTimeout<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Queued for longer than timeout but there might be</span>
        <span class="token comment">// data so use shortest possible timeout</span>
        firstReadTimeout <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// Cast is safe since queueTime must be less than</span>
        <span class="token comment">// keepAliveTimeout which is an int</span>
        <span class="token comment">// \u5982\u679C\u6392\u961F\u65F6\u95F4\u8FD8\u6CA1\u6709\u8D85\u8FC7keepAliveTimeout\uFF0C\u90A3\u4E48\u7B2C\u4E00\u6B21\u4ECEsocket\u4E2D\u8BFB\u53D6\u6570\u636E\u7684\u8D85\u65F6\u65F6\u95F4\u5C31\u662F\u6240\u5269\u4E0B\u7684\u65F6\u95F4\u4E86</span>
        firstReadTimeout <span class="token operator">=</span> keepAliveTimeout <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> queueTime<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u8BBE\u7F6Esocket\u7684\u8D85\u65F6\u65F6\u95F4\uFF0C\u7136\u540E\u5F00\u59CB\u8BFB\u6570\u636E\uFF0C\u8BE5\u65F6\u95F4\u5C31\u662F\u6BCF\u6B21\u8BFB\u53D6\u6570\u636E\u7684\u8D85\u65F6\u65F6\u95F4</span>
    socketWrapper<span class="token punctuation">.</span><span class="token function">getSocket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setSoTimeout</span><span class="token punctuation">(</span>firstReadTimeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>inputBuffer<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token comment">// \u4F1A\u4ECEinputStream\u4E2D\u83B7\u53D6\u6570\u636E,\u4F1A\u963B\u585E\uFF0C\u5982\u679C\u5728firstReadTimeout\u7684\u65F6\u95F4\u5185\u6CA1\u6709\u8BFB\u5230\u6570\u636E\u5219\u629BEof\u5F02\u5E38 , \u6570\u636E\u4F1A\u88AB\u8BFB\u5230buf\u4E2D</span>
      <span class="token comment">// eof\u662FEnd Of File\u7684\u610F\u601D</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">EOFException</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;iib.eof.error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// Once the first byte has been read, the standard timeout should be</span>
    <span class="token comment">// used so restore it here.</span>
    <span class="token comment">// \u5F53\u7B2C\u4E00\u6B21\u8BFB\u53D6\u6570\u636E\u5B8C\u6210\u540E\uFF0C\u8BBE\u7F6Esocket\u7684\u8D85\u65F6\u65F6\u95F4\u4E3A\u539F\u672C\u7684\u8D85\u65F6\u65F6\u95F4</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>endpoint<span class="token punctuation">.</span><span class="token function">getSoTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setSocketTimeout</span><span class="token punctuation">(</span>endpoint<span class="token punctuation">.</span><span class="token function">getSoTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">setSocketTimeout</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u8FD9\u91CC\u7684\u573A\u666F\u6709\u70B9\u50CF\u5DE5\u4F5C\uFF0C\u6211\u73B0\u5728\u8981\u505A\u4E00\u4E2A\u4EFB\u52A1\uFF0C\u89C4\u5B9A\u662F5\u5929\u5185\u8981\u5B8C\u6210\uFF0C\u4F46\u662F\u5176\u4E2D\u7531\u4E8E\u5BA2\u89C2\u539F\u56E0\u67091\u5929\u4E0D\u80FD\u5DE5\u4F5C\uFF0C\u6240\u4EE5\u90A3\u4E00\u5929\u4E0D\u7B97\u57285\u5929\u4E4B\u5185\uFF0C\u800C\u5BA2\u89C2\u539F\u56E0\u89E3\u51B3\u4E4B\u540E\uFF0C\u4EE5\u540E\u6BCF\u6B21\u505A\u4EFB\u52A1\u5C31\u4ECD\u7136\u63095\u5929\u6765\u9650\u5236</span>
    <span class="token comment">// \u4EFB\u52A1\u7684\u5C31\u662Fread</span>
    <span class="token comment">// 5\u5929\u5C31\u662Ftimeout</span>
    <span class="token comment">// \u5BA2\u89C2\u539F\u56E0\u5C31\u662Ftomcat\u7684\u8C03\u5EA6</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u6211\u4EEC\u628Asocket\u53D1\u9001\u7ED9Tomcat\u4E4B\u540E\uFF0C\u5C31\u4F1A<code>sockettimeout(\u9ED8\u8BA4\u662F20\u79D2)</code>\u65F6\u95F4\u5185\u5904\u7406socket\uFF0C\u4F46\u662F\u5728Tomcat\u4E2D\uFF0C\u4E0D\u4E00\u5B9A\u80FD\u9A6C\u4E0A\u5904\u7406\uFF0C\u5176\u4E2D\u9700\u8981\u7EBF\u7A0B\u6C60\u7684\u8C03\u5EA6\uFF0C\u6240\u4EE5\u8FD9\u6BB5\u7B49\u5F85\u7684\u65F6\u95F4\u8981\u7B97\u5728socket\u8BFB\u53D6\u6570\u636E\u7684\u65F6\u95F4\u5185</p><p>Tomcat\u8BA4\u4E3A\u3002\u63A5\u6536\u5230\u4E00\u4E2Asocket\uFF0C\u5982\u679C\u662F\u7B2C\u4E00\u6B21\u4ECEsocket\u4E2D\u8BFB\u53D6\u6570\u636E\uFF0C\u7B2C\u4E00\u6B21\u7684read\u7684\u8D85\u65F6\u65F6\u95F4\uFF0C\u9700\u8981\u7B97\u4E0A\u7EBF\u7A0B\u6C60\u7684\u8C03\u5EA6\u65F6\u95F4\uFF08\u4ECE\u653E\u5165\u7EBF\u7A0B\u6C60\u5230\u5F00\u59CB\u6267\u884Crun\u65B9\u6CD5\u8C03\u7528read\u7684\u65F6\u95F4\uFF09\uFF0C\u4E5F\u5C31\u662F20S-\u8C03\u5EA6\u65F6\u95F4=socket\u5904\u7406\u65F6\u95F4</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u6B63\u5E38\u6765\u8BF4\uFF0C\u4E00\u65E6\u8FD9\u4E2Asocket\u6765\u4E86\uFF0C\u90A3\u4E48\u5C31\u5E94\u8BE5\u9A6C\u4E0A\u4ECERectBuf\u4E2D\u8BFB\u53D6\u6570\u636E</span>
\u4F46\u662F\u7B2C\u4E00\u6B21\u7684\u7EBF\u7A0B\u6C60\u8C03\u5EA6\u65F6\u95F4\u662F\u7279\u6B8A\u60C5\u51B5
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>inputBuffer.fill()</code>\u4F1A\u4ECEinputStream\u4E2D\u83B7\u53D6\u6570\u636E,\u4F1A\u963B\u585E\uFF0C\u5982\u679C\u5728firstReadTimeout\u7684\u65F6\u95F4\u5185\u6CA1\u6709\u8BFB\u5230\u6570\u636E\u5219\u629BEof\u5F02\u5E38 , \u6570\u636E\u4F1A\u88AB\u8BFB\u5230buf\u4E2D</p><p>\u5F53\u6211\u4EEC\u4ECERecvBuf\u4E2D\u8BFB\u53D6\u6570\u636E\u7684\u65F6\u5019\uFF0C\u4E0D\u4E00\u5B9A\u662F\u5C0F\u4E8ERecvBuf\u7684\u5BB9\u91CF\u7684\uFF0C\u6240\u4EE5\u6211\u4EEC\u9700\u8981\u6E90\u6E90\u4E0D\u65AD\u7684\u8BFB\u53D6\uFF0C\u77E5\u9053\u8BFB\u53D6\u5230\u6570\u636E\u7684\u6700\u540E\uFF0C\u8FD9\u4E9B\u8BFB\u53D6\u51FA\u6765\u7684\u6570\u636E\u4F1A\u88AB\u5B58\u50A8\u5230buf\u4E2D\uFF0C\u7136\u540E\u5F00\u59CB\u89E3\u6790</p><p><img src="`+Ln+`" alt="image-20220221142301604"></p><p>\u6BCF\u6B21\u4ECERecvBuf\u4E2D\u53D6\u51FA\u6570\u636E\uFF0ClastValid\u6807\u5FD7\u4F4D\u4E0D\u65AD\u79FB\u52A8\uFF0C\u76F4\u5230\u4ECERecvBuf\u4E2D\u53D6\u5230\u4E86\u672C\u6B21Socket\u7684\u5B8C\u6574\u6570\u636E\uFF0C\u624D\u5F00\u59CB\u89E3\u6790</p><ol start="2"><li><code>endRequest();</code></li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">endRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

  <span class="token comment">// Finish the handling of the request</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getErrorState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isIoAllowed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u628AInputBuffer\u7684pos\u4F4D\u7F6E\u79FB\u52A8\u5230\u7B2C\u4E8C\u4E2A\u8BF7\u6C42\u5F00\u59CB\u7684\u4F4D\u7F6E</span>
      <span class="token function">getInputBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">endRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setErrorState</span><span class="token punctuation">(</span><span class="token class-name">ErrorState</span><span class="token punctuation">.</span>CLOSE_NOW<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">ExceptionUtils</span><span class="token punctuation">.</span><span class="token function">handleThrowable</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// 500 - Internal Server Error</span>
      <span class="token comment">// Can&#39;t add a 500 to the access log since that has already been</span>
      <span class="token comment">// written in the Adapter.service method.</span>
      response<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">setErrorState</span><span class="token punctuation">(</span><span class="token class-name">ErrorState</span><span class="token punctuation">.</span>CLOSE_NOW<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">getLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;http11processor.request.finish&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getErrorState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isIoAllowed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token function">getOutputBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">endRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setErrorState</span><span class="token punctuation">(</span><span class="token class-name">ErrorState</span><span class="token punctuation">.</span>CLOSE_NOW<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">ExceptionUtils</span><span class="token punctuation">.</span><span class="token function">handleThrowable</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">setErrorState</span><span class="token punctuation">(</span><span class="token class-name">ErrorState</span><span class="token punctuation">.</span>CLOSE_NOW<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">getLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;http11processor.response.finish&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>getInputBuffer().endRequest();</code>\u8C03\u7528</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">endRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>swallowInput <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>lastActiveFilter <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u591A\u5EA6\u7684\u6570\u636E</span>
    <span class="token keyword">int</span> extraBytes <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> activeFilters<span class="token punctuation">[</span>lastActiveFilter<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u4E4B\u524D\u591A\u8BFB\u7684\u6570\u636E\u5BFC\u81F4pos\u4F4D\u7F6E\u5411\u540E\u79FB\u52A8\u4E86\uFF0C\u6240\u4EE5\u9700\u8981\u4FEE\u6B63\u628Apos\u5411\u524D\u79FB\u52A8</span>
    pos <span class="token operator">=</span> pos <span class="token operator">-</span> extraBytes<span class="token punctuation">;</span> <span class="token comment">// \u628Apos\u5411\u524D\u79FB\u52A8</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2D\uFF0CactiveFilters\u662FInputFilter\u7C7B\u578B\uFF0CInputFilter\u662F\u4E00\u4E2A\u63A5\u53E3\uFF0C\u4E13\u95E8\u7528\u6765\u5904\u7406\u8BF7\u6C42\u4F53\u7684\uFF0C\u8BF7\u6C42\u4F53\u7684\u6570\u636E\u662F\u975E\u5E38\u590D\u6742\u7684\uFF0C\u800C\u4E14\u6709\u591A\u79CD\u60C5\u51B5\u7684\uFF0C\u6BD4\u5982\uFF0C\u5F53\u6211\u4EEC\u8BBE\u7F6E\u5982\u4E0B\u7684\u8BF7\u6C42\u7684\u65F6\u5019</p><p><img src="`+_n+`" alt="image-20220222001143673"></p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u4E00\u4E2A\u8BF7\u6C42\u4F53\u7684\u5185\u5BB9\u7684\u957F\u5EA6\u90FD\u662F\u770BContent-Length\u503C\u5224\u65AD\u7684\uFF0C\u8D85\u8FC7Content-Length\u6807\u6CE8\u7684\u957F\u5EA6\uFF0C\u90A3\u4E48Tomcat\u5C31\u4F1A\u8BA4\u4E3A\u662F\u4E0B\u4E00\u4E2Asocket\u8BF7\u6C42\u7684\u5185\u5BB9</span>
\u4E5F\u5C31\u8BF4\uFF0CContent-Length\u4E00\u5B9A\u8981\u548C\u8BF7\u6C42\u4F53\u7684\u957F\u5EA6\u4E00\u81F4\uFF0C\u90A3\u4E48\u6211\u4EEC\u5982\u4F55\u8BA1\u7B97\u5462\uFF0C\u53EF\u4EE5\u4F7F\u7528<span class="token code-snippet code keyword">\`getBytes().length()\`</span>
\u5982\u679C\u6CA1\u6709Content-Length\u7684\u8BDD\uFF0C\u90A3\u4E48Tomcat\u5C31\u4F1A\u8BA4\u4E3A\u6CA1\u6709\u8BF7\u6C42\u4F53\uFF0C\u90A3\u4E48\u6211\u4EEC\u5982\u679C\u643A\u5E26\u4E86\u8BF7\u6C42\u4F53\uFF0C\u76F8\u5F53\u4E8E\u767D\u53D1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u524D\u8BBE\u7F6EContent-Length:3\uFF0C\u5373\u8BBE\u7F6E\u8BF7\u6C42\u4F53\u5185\u5BB9\u5B57\u8282\u957F\u5EA6\u4E3A3\uFF0C\u5982\u679C\u6211\u4EEC\u7684\u8BF7\u6C42\u4F53\u7684\u5185\u5BB9\u8D85\u51FA3\uFF0C\u90A3\u4E48Tomcat\u4F1A\u5FFD\u7565\u8D85\u8FC7\u7684\u5185\u5BB9</p><p>\u90A3\u4E48\uFF0CTomcat\u5728\u89E3\u6790\u7684\u65F6\u5019\uFF0Cpos\u5C31\u4F1A\u79FB\u52A8\u5230\u524D\u9762\u7684123\u4E3A\u6B62\uFF0C\u540E\u9762\u7684123\u4E0D\u4F1A\u88AB\u83B7\u53D6\u548C\u89E3\u6790\uFF0C\u6B64\u65F6\u5C31\u4F1A\u5B58\u5728\u5728Buf\u4E2D\uFF0C\u4F1A\u628A\u5B83\u5F53\u505A\u4E0B\u4E00\u4E2A\u8BF7\u6C42\u7684\u8BF7\u6C42\u884C</p><p><img src="`+Rn+`" alt="image-20220222001522956"></p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u5F53Tomcat\u5728\u4ECERecvBuf\u8BFB\u53D6\u6570\u636E\u7684\u65F6\u5019\uFF0C\u8BF7\u6C42\u884C\u548C\u8BF7\u6C42\u4F53\u90FD\u662F\u6309\u987A\u5E8F\u8BFB\u53D6\uFF0C\u4F46\u662F\u8BF7\u6C42\u4F53\u53EF\u4EE5\u5728\u8BFB\u53D6\u5F53\u524D\u5757\u5B8C\u6210\u4E4B\u540E\uFF0C\u5F53\u8981\u8BFB\u53D6\u4E0B\u4E00\u5757\u7684\u65F6\u5019\uFF0C\u53EF\u4EE5\u76F4\u63A5\u8986\u76D6\u4E4B\u524D\u5DF2\u7ECF\u8BFB\u53D6\u7684\u8BF7\u6C42\u4F53</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5F53\u5F53\u524D\u7684\u6570\u636E\u5757\u5904\u7406\u5B8C\u6210\u4E4B\u540E\uFF0CTomcat\u4F1A\u4F7F\u7528<code>InternalInputBuffer#fill</code>\u6765\u4ECERecvBuf\u4E2D\u83B7\u53D6\u4E0B\u4E00\u5757\u6570\u636E\u6DFB\u52A0\u5230Buf\u4E2D\u5904\u7406</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">boolean</span> <span class="token function">fill</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> block<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>

  <span class="token keyword">int</span> nRead <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>parsingHeader<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token comment">// \u5982\u679C\u8FD8\u5728\u89E3\u6790\u8BF7\u6C42\u5934\uFF0ClastValid\u8868\u793A\u5F53\u524D\u89E3\u6790\u6570\u636E\u7684\u4E0B\u6807\u4F4D\u7F6E\uFF0C\u5982\u679C\u8BE5\u4F4D\u7F6E\u7B49\u4E8Ebuf\u7684\u957F\u5EA6\u4E86\uFF0C\u8868\u793A\u8BF7\u6C42\u5934\u7684\u6570\u636E\u8D85\u8FC7buf\u4E86\u3002</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>lastValid <span class="token operator">==</span> buf<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span>
        <span class="token punctuation">(</span>sm<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;iib.requestheadertoolarge.error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u4ECEinputStream\u4E2D\u8BFB\u53D6\u6570\u636E\uFF0Clen\u8868\u793A\u8981\u8BFB\u53D6\u7684\u6570\u636E\u957F\u5EA6\uFF0Cpos\u8868\u793A\u628A\u4ECEinputStream\u8BFB\u5230\u7684\u6570\u636E\u653E\u5728buf\u7684pos\u4F4D\u7F6E</span>
    <span class="token comment">// nRead\u8868\u793A\u771F\u5B9E\u8BFB\u53D6\u5230\u7684\u6570\u636E</span>
    nRead <span class="token operator">=</span> inputStream<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> pos<span class="token punctuation">,</span> buf<span class="token punctuation">.</span>length <span class="token operator">-</span> lastValid<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nRead <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      lastValid <span class="token operator">=</span> pos <span class="token operator">+</span> nRead<span class="token punctuation">;</span> <span class="token comment">// \u79FB\u52A8lastValid</span>
    <span class="token punctuation">}</span>

  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5F53\u8BFB\u53D6\u8BF7\u6C42\u4F53\u7684\u6570\u636E\u65F6</span>
    <span class="token comment">// buf.length - end\u8868\u793A\u8FD8\u80FD\u5B58\u653E\u591A\u5C11\u8BF7\u6C42\u4F53\u6570\u636E\uFF0C\u5982\u679C\u5C0F\u4E8E4500\uFF0C\u90A3\u4E48\u5C31\u65B0\u751F\u6210\u4E00\u4E2Abyte\u6570\u7EC4\uFF0C\u8FD9\u4E2A\u65B0\u7684\u6570\u7EC4\u4E13\u95E8\u7528\u6765\u76DB\u653E\u8BF7\u6C42\u4F53</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>buf<span class="token punctuation">.</span>length <span class="token operator">-</span> end <span class="token operator">&lt;</span> <span class="token number">4500</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// In this case, the request header was really large, so we allocate a</span>
      <span class="token comment">// brand new one; the old one will get GCed when subsequent requests</span>
      <span class="token comment">// clear all references</span>
      buf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span>buf<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>
      end <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    pos <span class="token operator">=</span> end<span class="token punctuation">;</span>
    lastValid <span class="token operator">=</span> pos<span class="token punctuation">;</span>
    nRead <span class="token operator">=</span> inputStream<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> pos<span class="token punctuation">,</span> buf<span class="token punctuation">.</span>length <span class="token operator">-</span> lastValid<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nRead <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      lastValid <span class="token operator">=</span> pos <span class="token operator">+</span> nRead<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>nRead <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u6211\u4EEC\u628A\u8BF7\u6C42\u884C\u548C\u8BF7\u6C42\u5934\u8BFB\u53D6\u8FDB\u6765\u5E76\u5904\u7406\u4E4B\u540E\uFF0C\u5C31\u4F1A\u5F00\u59CB\u5904\u7406\u8BF7\u6C42\u4F53\uFF0CTomcat\u8BA4\u4E3A\uFF0C\u5982\u679C\u8BF7\u6C42\u4F53\u7684\u5B58\u653E\u4F4D\u7F6E\u5DF2\u7ECF\u5C0F\u4E8E4500\u7684\u8BDD\uFF0C\u5C31\u4F1A\u91CD\u65B0\u7533\u8BF7\u4E00\u4E2Abuf\u6765\u5B58\u50A8\u8BF7\u6C42\u4F53</p><p><img src="`+Bn+'" alt="image-20220222161243973"></p><h4 id="\u5206\u5757\u4F20\u8F93"><a class="header-anchor" href="#\u5206\u5757\u4F20\u8F93" aria-hidden="true">#</a> \u5206\u5757\u4F20\u8F93</h4><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u5982\u679C\u4E0D\u60F3\u7528Content-Length\uFF0C\u53C8\u60F3\u53D1\u9001\u8BF7\u6C42\u4F53?</span>\n\u53EF\u4EE5\u4F7F\u7528<span class="token code-snippet code keyword">`Transfer-Encoding:chunked`</span>\uFF0C\u8868\u793A\u5206\u5757\uFF0C\u672C\u6765\u5982\u679C\u4F7F\u7528Content-Length\u7684\u8BDD\uFF0C\u5C31\u662F\u4E00\u6B21\u6027\u7684\u53D1\u9001\uFF0C\u4F46\u662F\u4F7F\u7528Transfer-Encoding\u8868\u793A\u5206\u5757\u53D1\u9001\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5206\u5757\u7684\u8BF7\u6C42\u4F53\u683C\u5F0F\uFF0C\u5176\u4E2D\u6700\u540E\u4E00\u6BB5\u662F\u8981\u544A\u8BC9Tomcat\u5F53\u524D\u5206\u5757\u5DF2\u7ECF\u7ED3\u675F\uFF0C\u5982\u679C\u4E0D\u6DFB\u52A0\uFF0C\u5C31\u4F1A\u5BFC\u81F4Tomcat\u4E00\u76F4\u7B49\u5F85</p><p><img src="'+jn+'" alt="image-20220222010731724"></p><p>\u7136\u540E\u8BFB\u53D6\u7684\u65B9\u5F0F\u4E5F\u6709\u4E0D\u540C\uFF0C\u662F\u9700\u8981\u901A\u8FC7\u5FAA\u73AF\u4E0D\u65AD\u7684\u8BFB\u53D6\u51FA\u6570\u636E</p><p><img src="'+Pn+'" alt="image-20220222011001955"></p><h4 id="inputfilter"><a class="header-anchor" href="#inputfilter" aria-hidden="true">#</a> InputFilter</h4><p>\u4E0D\u540C\u7684\u8BF7\u6C42\u4F53\u5BF9\u5E94\u4E0D\u540C\u7684InputFilter\u8FDB\u884C\u89E3\u6790\uFF0CInputFilter\u6709\u597D\u51E0\u4E2A\u5B9E\u73B0\u7C7B\uFF0C\u5176\u4E2D\u6BD4\u8F83\u91CD\u8981\u7684\u6709</p><p><img src="'+On+`" alt="image-20220222000643932"></p><ol><li>ChunkedInputFilter \u5904\u7406<code>Transfer-Encoding</code>\u7684\u60C5\u51B5</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">doRead</span><span class="token punctuation">(</span><span class="token class-name">ByteChunk</span> chunk<span class="token punctuation">,</span> <span class="token class-name">Request</span> req<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>endChunk<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// chunk\u4F1A\u6807\u8BB0\u4E00\u4E2A\u6570\u636E\u5757\u7684\u5185\u5BB9\u533A\u57DF</span>

  <span class="token function">checkError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span><span class="token punctuation">(</span>needCRLFParse<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    needCRLFParse <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token function">parseCRLF</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>remaining <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">parseChunkHeader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">throwIOException</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;chunkedInputFilter.invalidHeader&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>endChunk<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">parseEndChunk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>pos <span class="token operator">&gt;=</span> lastValid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">readBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">throwIOException</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;chunkedInputFilter.eos&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u5982\u679C\u9700\u8981\u7684\u6570\u636E\u6BD4\u8BFB\u5230\u7684\u591A\uFF0C\u5219\u5148\u6807\u8BB0\u4E00\u4E0B\uFF0C\u5E76\u4E14\u7B97\u4E00\u4E0B\u8FD8\u9700\u8981\u8BFB\u591A\u5C11\u6570\u636E</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>remaining <span class="token operator">&gt;</span> <span class="token punctuation">(</span>lastValid <span class="token operator">-</span> pos<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    result <span class="token operator">=</span> lastValid <span class="token operator">-</span> pos<span class="token punctuation">;</span>
    remaining <span class="token operator">=</span> remaining <span class="token operator">-</span> result<span class="token punctuation">;</span>
    chunk<span class="token punctuation">.</span><span class="token function">setBytes</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> pos<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    pos <span class="token operator">=</span> lastValid<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u8BFB\u5230\u7684\u6570\u636E\u8D85\u8FC7\u4E86\u9700\u8981\u7684\u6570\u636E\uFF0C\u90A3\u4E48\u5219\u6807\u8BB0\u5230\u9700\u8981\u7684\u6570\u636E</span>
    result <span class="token operator">=</span> remaining<span class="token punctuation">;</span>
    chunk<span class="token punctuation">.</span><span class="token function">setBytes</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> pos<span class="token punctuation">,</span> remaining<span class="token punctuation">)</span><span class="token punctuation">;</span>
    pos <span class="token operator">=</span> pos <span class="token operator">+</span> remaining<span class="token punctuation">;</span>
    remaining <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token comment">//we need a CRLF</span>
    <span class="token comment">// \u5982\u679Cpos\u5411\u540E\u79FB\u4E00\u4F4D\u4E4B\u540E\u6CA1\u6709\u6570\u636E\u4E86</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>pos<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> lastValid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//if we call parseCRLF we overrun the buffer here</span>
      <span class="token comment">//so we defer it to the next call BZ 11117</span>
      needCRLFParse <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8FD8\u6709\u6570\u636E\u5219\u5224\u65AD\u7D27\u8DDF\u7740\u7684\u6570\u636E\u662F\u4E0D\u662FCRLF</span>
      <span class="token function">parseCRLF</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//parse the CRLF immediately</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6BCF\u4E00\u6B21\u8C03\u7528doRead\u65B9\u6CD5\uFF0C\u90FD\u4F1A\u83B7\u53D6\u5BA2\u6237\u7AEF\u53D1\u9001\u8FC7\u6765\u7684\u4E00\u5757\u6570\u636E\uFF0C\u76F4\u5230\u8BFB\u5230\u6807\u8BB0\u7684\u65F6\u5019\uFF0C\u624D\u4F1A\u505C\u6B62\u8BFB\u53D6</p><ol start="2"><li>IdentityInputFilter \u5904\u7406<code>Content-Length</code>\u7684\u60C5\u51B5</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">doRead</span><span class="token punctuation">(</span><span class="token class-name">ByteChunk</span> chunk<span class="token punctuation">,</span> <span class="token class-name">Request</span> req<span class="token punctuation">)</span>
    <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5F53servlet\u4E2D\u8BFB\u53D6\u8BF7\u6C42\u4F53\u65F6\uFF0C\u4F1A\u8FDB\u5165\u5230\u8FD9\u4E2A\u65B9\u6CD5\uFF0C\u8BE5\u65B9\u6CD5\u8FD4\u56DE</span>

  <span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>

  <span class="token comment">// contentLength\u8868\u793A\u8BF7\u6C42\u4F53\u7684\u957F\u5EA6\uFF0C\u5F53\u8BFB\u53D6\u8BF7\u6C42\u4F53\u65F6\uFF0C\u53EA\u4F1A\u8FD4\u56DE\u8FD9\u4E48\u957F\u7684\u6570\u636E</span>
  <span class="token comment">// remaining</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>contentLength <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// 100</span>
    <span class="token comment">// \u53EF\u80FD\u4F1A\u591A\u6B21\u8BFB\u53D6\u8BF7\u6C42\u4F53\uFF0C\u6240\u4EE5\u8BB0\u5F55\u4E00\u4E0B\u8BF7\u6C42\u4F53\u8FD8\u5269\u4E0B\u591A\u5C11</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>remaining <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 10</span>
      <span class="token comment">// \u8FD9\u91CC\u7684buffer\u662FInputSteamInputBuffer\uFF0C\u4F1A\u4ECE\u64CD\u4F5C\u7CFB\u7EDF\u7684RecvBuf\u4E2D\u8BFB\u53D6\u6570\u636E\uFF0CnRead\u8868\u793A\u8BFB\u5230\u4E86\u591A\u5C11\u4E86\u6570\u636E</span>
      <span class="token keyword">int</span> nRead <span class="token operator">=</span> buffer<span class="token punctuation">.</span><span class="token function">doRead</span><span class="token punctuation">(</span>chunk<span class="token punctuation">,</span> req<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 20</span>

      <span class="token comment">// \u5982\u679C\u8BFB\u5230\u7684\u6570\u636E\u8D85\u8FC7\u4E86\u5269\u4F59\u90E8\u5206\uFF0C\u90A3\u4E48\u5C06chunk\u7684\u6807\u8BB0\u7F29\u5C0F\uFF0C\u7F29\u5C0F\u4E3A\u5269\u4F59\u90E8\u5206\u7684\u6700\u540E\u4E00\u4E2A\u4F4D\u7F6E\uFF0C\u591A\u4F59\u6570\u636E\u4E0D\u5C5E\u4E8E\u8BF7\u6C42\u4F53\u4E86</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>nRead <span class="token operator">&gt;</span> remaining<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// The chunk is longer than the number of bytes remaining</span>
        <span class="token comment">// in the body; changing the chunk length to the number</span>
        <span class="token comment">// of bytes remaining</span>
        chunk<span class="token punctuation">.</span><span class="token function">setBytes</span><span class="token punctuation">(</span>chunk<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> chunk<span class="token punctuation">.</span><span class="token function">getStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                       <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> remaining<span class="token punctuation">)</span><span class="token punctuation">;</span>
        result <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> remaining<span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C\u771F\u5B9E\u8BFB\u5230\u7684\u6570\u636E\u5C0F\u4E8E\u5269\u4E0B\u7684</span>
        result <span class="token operator">=</span> nRead<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u8BB0\u5F55\u4E00\u4E0B\u8FD8\u9700\u8981\u8BFB\u591A\u5C11\u6570\u636E</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>nRead <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 10 - 20==10</span>
        remaining <span class="token operator">=</span> remaining <span class="token operator">-</span> nRead<span class="token punctuation">;</span> <span class="token comment">// \u5982\u679C\u5269\u4F59\u6570\u636E\u6BD4\u771F\u5B9E\u8BFB\u5230\u7684\u6570\u636E\u5C0F\uFF0Cremaining\u5C06\u4E3A\u8D1F\u6570</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C\u6CA1\u6709\u5269\u4F59\u6570\u636E\u4E86\uFF0C\u8FD4\u56DE-1</span>
      <span class="token comment">// No more bytes left to be read : return -1 and clear the</span>
      <span class="token comment">// buffer</span>
      chunk<span class="token punctuation">.</span><span class="token function">recycle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      result <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>VoidInputFilter</li></ol><p>\u4E3B\u8981\u662F\u5904\u7406\u7A7A\u7684\u8BF7\u6C42\u4F53</p><p><strong>\u90A3\u4E48Tomcat\u662F\u5982\u4F55\u5224\u65AD\u5E94\u8BE5\u5C06\u8BF7\u6C42\u4F53\u4EA4\u7ED9\u54EA\u4E00\u4E2A\u5904\u7406\u5462\uFF1F</strong></p><p>\u5728<code>AbstractHttp11Processor#prepareRequest</code>\u65B9\u6CD5\u8981\u6267\u884C\u4E4B\u524D\uFF0C\u8BF7\u6C42\u884C\u548C\u8BF7\u6C42\u5934\u90FD\u5DF2\u7ECF\u88AB\u89E3\u6790\u51FA\u6765\u4E86\uFF0C\u6B64\u65F6\u5C31\u4F1A\u8C03\u7528<code>AbstractHttp11Processor#prepareRequest</code>\u65B9\u6CD5\u6765\u89E3\u6790</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">prepareRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

  http11 <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  http09 <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  contentDelimitation <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  expectation <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

  <span class="token function">prepareRequestInternal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>endpoint<span class="token punctuation">.</span><span class="token function">isSSLEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    request<span class="token punctuation">.</span><span class="token function">scheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token string">&quot;https&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">//</span>
  <span class="token class-name">MessageBytes</span> protocolMB <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">protocol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>protocolMB<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Constants</span><span class="token punctuation">.</span>HTTP_11<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    http11 <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    protocolMB<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token class-name">Constants</span><span class="token punctuation">.</span>HTTP_11<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>protocolMB<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Constants</span><span class="token punctuation">.</span>HTTP_10<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// http1.0\u4E0D\u652F\u6301keepAlive</span>
    http11 <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    keepAlive <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    protocolMB<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token class-name">Constants</span><span class="token punctuation">.</span>HTTP_10<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>protocolMB<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// HTTP/0.9</span>
    <span class="token comment">// http0.9\u4E0D\u652F\u6301keepAlive</span>
    http09 <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    http11 <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    keepAlive <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// Unsupported protocol</span>
    http11 <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token comment">// Send 505; Unsupported HTTP version</span>
    response<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token number">505</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setErrorState</span><span class="token punctuation">(</span><span class="token class-name">ErrorState</span><span class="token punctuation">.</span>CLOSE_CLEAN<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">getLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;http11processor.request.prepare&quot;</span><span class="token punctuation">)</span><span class="token operator">+</span>
                     <span class="token string">&quot; Unsupported HTTP version \\&quot;&quot;</span><span class="token operator">+</span>protocolMB<span class="token operator">+</span><span class="token string">&quot;\\&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token class-name">MessageBytes</span> methodMB <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">method</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>methodMB<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Constants</span><span class="token punctuation">.</span>GET<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    methodMB<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token class-name">Constants</span><span class="token punctuation">.</span>GET<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>methodMB<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Constants</span><span class="token punctuation">.</span>POST<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    methodMB<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token class-name">Constants</span><span class="token punctuation">.</span>POST<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token class-name">MimeHeaders</span> headers <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getMimeHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Check connection header</span>
  <span class="token class-name">MessageBytes</span> connectionValueMB <span class="token operator">=</span> headers<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token class-name">Constants</span><span class="token punctuation">.</span>CONNECTION<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>connectionValueMB <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>connectionValueMB<span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ByteChunk</span> connectionValueBC <span class="token operator">=</span> connectionValueMB<span class="token punctuation">.</span><span class="token function">getByteChunk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">findBytes</span><span class="token punctuation">(</span>connectionValueBC<span class="token punctuation">,</span> <span class="token class-name">Constants</span><span class="token punctuation">.</span>CLOSE_BYTES<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C\u8BF7\u6C42\u5934\u4E2Dconnection=close\uFF0C\u8868\u793A\u4E0D\u662F\u957F\u8FDE\u63A5</span>
      keepAlive <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">findBytes</span><span class="token punctuation">(</span>connectionValueBC<span class="token punctuation">,</span>
                         <span class="token class-name">Constants</span><span class="token punctuation">.</span>KEEPALIVE_BYTES<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C\u8BF7\u6C42\u5934\u4E2Dconnection=keep-alive\uFF0C\u8868\u793A\u957F\u8FDE\u63A5</span>
      keepAlive <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>http11<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">MessageBytes</span> expectMB <span class="token operator">=</span> headers<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token string">&quot;expect&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>expectMB <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>expectMB<span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>expectMB<span class="token punctuation">.</span><span class="token function">indexOfIgnoreCase</span><span class="token punctuation">(</span><span class="token string">&quot;100-continue&quot;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">getInputBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setSwallowInput</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        expectation <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        response<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span><span class="token punctuation">.</span>SC_EXPECTATION_FAILED<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setErrorState</span><span class="token punctuation">(</span><span class="token class-name">ErrorState</span><span class="token punctuation">.</span>CLOSE_CLEAN<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Check user-agent header</span>
  <span class="token comment">// \u8BF7\u6C42\u672C\u6765\u662Fhttp1.1\u6216keepAlive\u7684\uFF0C\u5982\u679C\u8BF7\u6C42\u4E2D\u6240\u6307\u5B9A\u7684user-agent\u88AB\u9650\u5236\u4E86\uFF0C\u4E0D\u652F\u6301\u957F\u8FDE\u63A5</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>restrictedUserAgents <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>http11<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>keepAlive<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">MessageBytes</span> userAgentValueMB <span class="token operator">=</span> headers<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token string">&quot;user-agent&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Check in the restricted list, and adjust the http11</span>
    <span class="token comment">// and keepAlive flags accordingly</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>userAgentValueMB <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>userAgentValueMB<span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">String</span> userAgentValue <span class="token operator">=</span> userAgentValueMB<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>restrictedUserAgents<span class="token punctuation">.</span><span class="token function">matcher</span><span class="token punctuation">(</span>userAgentValue<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        http11 <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        keepAlive <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>


  <span class="token comment">// Check host header</span>
  <span class="token class-name">MessageBytes</span> hostValueMB <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u83B7\u53D6\u552F\u4E00\u7684host,\u8BF7\u6C42\u5934\u4E2D\u4E0D\u80FD\u6709\u591A\u4E2Akey\u4E3Ahost</span>
    hostValueMB <span class="token operator">=</span> headers<span class="token punctuation">.</span><span class="token function">getUniqueValue</span><span class="token punctuation">(</span><span class="token string">&quot;host&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IllegalArgumentException</span> iae<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Multiple Host headers are not permitted</span>
    <span class="token function">badRequest</span><span class="token punctuation">(</span><span class="token string">&quot;http11processor.request.multipleHosts&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>http11 <span class="token operator">&amp;&amp;</span> hostValueMB <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">badRequest</span><span class="token punctuation">(</span><span class="token string">&quot;http11processor.request.noHostHeader&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Check for an absolute-URI less the query string which has already</span>
  <span class="token comment">// been removed during the parsing of the request line</span>
  <span class="token comment">// URI\u683C\u5F0F\uFF1A[\u534F\u8BAE\u540D]://[\u7528\u6237\u540D]:[\u5BC6\u7801]@[\u670D\u52A1\u5668\u5730\u5740]:[\u670D\u52A1\u5668\u7AEF\u53E3\u53F7]/[\u8DEF\u5F84]?[\u67E5\u8BE2\u5B57\u7B26\u4E32]#[\u7247\u6BB5ID]</span>
  <span class="token class-name">ByteChunk</span> uriBC <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">requestURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getByteChunk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> uriB <span class="token operator">=</span> uriBC<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>uriBC<span class="token punctuation">.</span><span class="token function">startsWithIgnoreCase</span><span class="token punctuation">(</span><span class="token string">&quot;http&quot;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> pos <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
    <span class="token comment">// Check for https</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>uriBC<span class="token punctuation">.</span><span class="token function">startsWithIgnoreCase</span><span class="token punctuation">(</span><span class="token string">&quot;s&quot;</span><span class="token punctuation">,</span> pos<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      pos<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// Next 3 characters must be &quot;://&quot;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>uriBC<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;://&quot;</span><span class="token punctuation">,</span> pos<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      pos <span class="token operator">+=</span> <span class="token number">3</span><span class="token punctuation">;</span>
      <span class="token keyword">int</span> uriBCStart <span class="token operator">=</span> uriBC<span class="token punctuation">.</span><span class="token function">getStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// &#39;/&#39; does not appear in the authority so use the first</span>
      <span class="token comment">// instance to split the authority and the path segments</span>
      <span class="token keyword">int</span> slashPos <span class="token operator">=</span> uriBC<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token char">&#39;/&#39;</span><span class="token punctuation">,</span> pos<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// &#39;@&#39; in the authority delimits the userinfo</span>
      <span class="token keyword">int</span> atPos <span class="token operator">=</span> uriBC<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token char">&#39;@&#39;</span><span class="token punctuation">,</span> pos<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>slashPos <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> atPos <span class="token operator">&gt;</span> slashPos<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// First &#39;@&#39; is in the path segments so no userinfo</span>
        atPos <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>slashPos <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        slashPos <span class="token operator">=</span> uriBC<span class="token punctuation">.</span><span class="token function">getLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Set URI as &quot;/&quot;. Use 6 as it will always be a &#39;/&#39;.</span>
        <span class="token comment">// 01234567</span>
        <span class="token comment">// http://</span>
        <span class="token comment">// https://</span>
        request<span class="token punctuation">.</span><span class="token function">requestURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setBytes</span><span class="token punctuation">(</span>uriB<span class="token punctuation">,</span> uriBCStart <span class="token operator">+</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        request<span class="token punctuation">.</span><span class="token function">requestURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setBytes</span><span class="token punctuation">(</span>uriB<span class="token punctuation">,</span> uriBCStart <span class="token operator">+</span> slashPos<span class="token punctuation">,</span> uriBC<span class="token punctuation">.</span><span class="token function">getLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> slashPos<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token comment">// Skip any user info</span>
      <span class="token comment">// \u68C0\u9A8C\u7528\u6237\u4FE1\u606F\u683C\u5F0F\u662F\u5426\u6B63\u786E</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>atPos <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Validate the userinfo</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> pos <span class="token operator">&lt;</span> atPos<span class="token punctuation">;</span> pos<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">byte</span> c <span class="token operator">=</span> uriB<span class="token punctuation">[</span>uriBCStart <span class="token operator">+</span> pos<span class="token punctuation">]</span><span class="token punctuation">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">HttpParser</span><span class="token punctuation">.</span><span class="token function">isUserInfo</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Strictly there needs to be a check for valid %nn</span>
            <span class="token comment">// encoding here but skip it since it will never be</span>
            <span class="token comment">// decoded because the userinfo is ignored</span>
            <span class="token function">badRequest</span><span class="token punctuation">(</span><span class="token string">&quot;http11processor.request.invalidUserInfo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// Skip the &#39;@&#39;</span>
        pos <span class="token operator">=</span> atPos <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>http11<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Missing host header is illegal but handled above</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>hostValueMB <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// Any host in the request line must be consistent with</span>
          <span class="token comment">// the Host header</span>
          <span class="token comment">// uri\u4E2D\u7684\u4E3B\u673A\u540D\u662F\u4E0D\u662F\u548Cheader\u4E2D\u7684\u4E00\u81F4\uFF0C\u5982\u679C\u4E0D\u4E00\u81F4\uFF0C\u770B\u662F\u5426tomcat\u8FD0\u884C\u4E0D\u4E00\u81F4\uFF0C\u5982\u679C\u5141\u8BB8\u5219\u4FEE\u6539header\u4E2D\u7684\u4E3Auri\u4E2D\u7684</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>hostValueMB<span class="token punctuation">.</span><span class="token function">getByteChunk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>
            uriB<span class="token punctuation">,</span> uriBCStart <span class="token operator">+</span> pos<span class="token punctuation">,</span> slashPos <span class="token operator">-</span> pos<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>allowHostHeaderMismatch<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token comment">// The requirements of RFC 2616 are being</span>
              <span class="token comment">// applied. If the host header and the request</span>
              <span class="token comment">// line do not agree, the request line takes</span>
              <span class="token comment">// precedence</span>
              hostValueMB <span class="token operator">=</span> headers<span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span><span class="token string">&quot;host&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
              hostValueMB<span class="token punctuation">.</span><span class="token function">setBytes</span><span class="token punctuation">(</span>uriB<span class="token punctuation">,</span> uriBCStart <span class="token operator">+</span> pos<span class="token punctuation">,</span> slashPos <span class="token operator">-</span> pos<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
              <span class="token comment">// The requirements of RFC 7230 are being</span>
              <span class="token comment">// applied. If the host header and the request</span>
              <span class="token comment">// line do not agree, trigger a 400 response.</span>
              <span class="token function">badRequest</span><span class="token punctuation">(</span><span class="token string">&quot;http11processor.request.inconsistentHosts&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// Not HTTP/1.1 - no Host header so generate one since</span>
        <span class="token comment">// Tomcat internals assume it is set</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
          hostValueMB <span class="token operator">=</span> headers<span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span><span class="token string">&quot;host&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          hostValueMB<span class="token punctuation">.</span><span class="token function">setBytes</span><span class="token punctuation">(</span>uriB<span class="token punctuation">,</span> uriBCStart <span class="token operator">+</span> pos<span class="token punctuation">,</span> slashPos <span class="token operator">-</span> pos<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IllegalStateException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// Edge case</span>
          <span class="token comment">// If the request has too many headers it won&#39;t be</span>
          <span class="token comment">// possible to create the host header. Ignore this as</span>
          <span class="token comment">// processing won&#39;t reach the point where the Tomcat</span>
          <span class="token comment">// internals expect there to be a host header.</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">badRequest</span><span class="token punctuation">(</span><span class="token string">&quot;http11processor.request.invalidScheme&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Validate the characters in the URI. %nn decoding will be checked at</span>
  <span class="token comment">// the point of decoding.</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> uriBC<span class="token punctuation">.</span><span class="token function">getStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> uriBC<span class="token punctuation">.</span><span class="token function">getEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>httpParser<span class="token punctuation">.</span><span class="token function">isAbsolutePathRelaxed</span><span class="token punctuation">(</span>uriB<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">badRequest</span><span class="token punctuation">(</span><span class="token string">&quot;http11processor.request.invalidUri&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Input filter setup</span>
  <span class="token comment">// \u83B7\u53D6\u5904\u7406\u8BF7\u6C42\u4F53\u7684Tomcat\u9ED8\u8BA4\u7684InputFilter,\u9ED8\u8BA44\u4E2AInput\u7684</span>
  <span class="token class-name">InputFilter</span><span class="token punctuation">[</span><span class="token punctuation">]</span> inputFilters <span class="token operator">=</span> <span class="token function">getInputBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFilters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u6BCF\u4E2AInputFilter\u90FD\u6709\u4E00\u4E2AENCODING_NAME</span>
  <span class="token comment">// Parse transfer-encoding header</span>
  <span class="token class-name">MessageBytes</span> transferEncodingValueMB <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>http11<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    transferEncodingValueMB <span class="token operator">=</span> headers<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token string">&quot;transfer-encoding&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>transferEncodingValueMB <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>transferEncodingValueMB<span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> transferEncodingValue <span class="token operator">=</span> transferEncodingValueMB<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Parse the comma separated list. &quot;identity&quot; codings are ignored</span>
    <span class="token keyword">int</span> startPos <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> commaPos <span class="token operator">=</span> transferEncodingValue<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token char">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> encodingName <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token comment">// \u8BF7\u6C42\u4E2D\u8BBE\u7F6E\u4E86\u591A\u4E2AENCODING_NAME</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>commaPos <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      encodingName <span class="token operator">=</span> transferEncodingValue<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>startPos<span class="token punctuation">,</span> commaPos<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">addInputFilter</span><span class="token punctuation">(</span>inputFilters<span class="token punctuation">,</span> encodingName<span class="token punctuation">)</span><span class="token punctuation">;</span>
      startPos <span class="token operator">=</span> commaPos <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
      commaPos <span class="token operator">=</span> transferEncodingValue<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token char">&#39;,&#39;</span><span class="token punctuation">,</span> startPos<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    encodingName <span class="token operator">=</span> transferEncodingValue<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>startPos<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">addInputFilter</span><span class="token punctuation">(</span>inputFilters<span class="token punctuation">,</span> encodingName<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Parse content-length header</span>
  <span class="token comment">// inputFilters\u63D0\u4EA4\u8DDFcontextlength\u76F8\u5173\u7684IDENTITY_FILTER</span>
  <span class="token keyword">long</span> contentLength <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    contentLength <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getContentLengthLong</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NumberFormatException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">badRequest</span><span class="token punctuation">(</span><span class="token string">&quot;http11processor.request.nonNumericContentLength&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IllegalArgumentException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">badRequest</span><span class="token punctuation">(</span><span class="token string">&quot;http11processor.request.multipleContentLength&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>contentLength <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// transfer-encoding\u7B49\u4E8Echunked\u7684\u65F6\u5019\uFF0CcontentDelimitation\u4F1A\u8BBE\u7F6E\u4E3Atrue\uFF0C\u8868\u793A\u662F\u5206\u5757\u4F20\u8F93\uFF0C\u6240\u4EE5contentLength\u6CA1\u7528</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>contentDelimitation<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// contentDelimitation being true at this point indicates that</span>
      <span class="token comment">// chunked encoding is being used but chunked encoding should</span>
      <span class="token comment">// not be used with a content length. RFC 2616, section 4.4,</span>
      <span class="token comment">// bullet 3 states Content-Length must be ignored in this case -</span>
      <span class="token comment">// so remove it.</span>
      headers<span class="token punctuation">.</span><span class="token function">removeHeader</span><span class="token punctuation">(</span><span class="token string">&quot;content-length&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      request<span class="token punctuation">.</span><span class="token function">setContentLength</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5229\u7528IDENTITY_FILTER\u6765\u5904\u7406\u8BF7\u6C42\u4F53</span>
      <span class="token function">getInputBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addActiveFilter</span><span class="token punctuation">(</span>inputFilters<span class="token punctuation">[</span><span class="token class-name">Constants</span><span class="token punctuation">.</span>IDENTITY_FILTER<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      contentDelimitation <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Validate host name and extract port if present</span>
  <span class="token comment">// \u89E3\u6790hostname\u548Cport</span>
  <span class="token function">parseHost</span><span class="token punctuation">(</span>hostValueMB<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u5373\u6CA1\u6709content-length\u8BF7\u6C42\u5934\uFF0C\u4E5F\u6CA1\u6709transfer-encoding\u8BF7\u6C42\u5934\uFF0C\u90A3\u4E48\u7528VOID_FILTER\u6765\u5904\u7406\u8BF7\u6C42\u4F53\uFF0C\u5176\u5B9E\u5C31\u662F\u4E0D\u5904\u7406\u8BF7\u6C42\u4F53</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>contentDelimitation<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// If there&#39;s no content length</span>
    <span class="token comment">// (broken HTTP/1.0 or HTTP/1.1), assume</span>
    <span class="token comment">// the client is not broken and didn&#39;t send a body</span>
    <span class="token function">getInputBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addActiveFilter</span><span class="token punctuation">(</span>inputFilters<span class="token punctuation">[</span><span class="token class-name">Constants</span><span class="token punctuation">.</span>VOID_FILTER<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    contentDelimitation <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Advertise sendfile support through a request attribute</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>endpoint<span class="token punctuation">.</span><span class="token function">getUseSendfile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>
      <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span></span>Constants</span><span class="token punctuation">.</span>SENDFILE_SUPPORTED_ATTR<span class="token punctuation">,</span>
      <span class="token class-name">Boolean</span><span class="token punctuation">.</span>TRUE<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Advertise comet support through a request attribute</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>endpoint<span class="token punctuation">.</span><span class="token function">getUseComet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>
      <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span></span>Constants</span><span class="token punctuation">.</span>COMET_SUPPORTED_ATTR<span class="token punctuation">,</span>
      <span class="token class-name">Boolean</span><span class="token punctuation">.</span>TRUE<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// Advertise comet timeout support</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>endpoint<span class="token punctuation">.</span><span class="token function">getUseCometTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>
      <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span></span>Constants</span><span class="token punctuation">.</span>COMET_TIMEOUT_SUPPORTED_ATTR<span class="token punctuation">,</span>
      <span class="token class-name">Boolean</span><span class="token punctuation">.</span>TRUE<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getErrorState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    adapter<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u83B7\u53D6\u8FC7\u7A0B</span>
<span class="token list punctuation">1.</span> \u83B7\u53D6\u56DB\u4E2A\u9ED8\u8BA4\u7684InputFilter\u7684\u5B9E\u73B0\u7C7B
<span class="token list punctuation">2.</span> \u901A\u8FC7\u5224\u65AD\u8BF7\u6C42\u5934\u4E2D\u662F\u5426\u5B58\u5728\u9700\u8981\u7684\u53C2\u6570\uFF0Ccontent-length\u4F7F\u7528IdentityInputFilter\u3001transfer-encoding\u4F7F\u7528ChunkInputFilter\uFF0Ctransfer-encoding\u7B49\u4E8Echunked\u7684\u65F6\u5019\uFF0CcontentDelimitation\u4F1A\u8BBE\u7F6E\u4E3Atrue\uFF0C\u8868\u793A\u662F\u5206\u5757\u4F20\u8F93\uFF0C\u6240\u4EE5contentLength\u6CA1\u7528
<span class="token list punctuation">3.</span> \u65E2\u6CA1\u6709content-length\u8BF7\u6C42\u5934\uFF0C\u4E5F\u6CA1\u6709transfer-encoding\u8BF7\u6C42\u5934\uFF0C\u90A3\u4E48\u7528VOID_FILTER\u6765\u5904\u7406\u8BF7\u6C42\u4F53\uFF0C\u5176\u5B9E\u5C31\u662F\u4E0D\u5904\u7406\u8BF7\u6C42\u4F53
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5904\u7406\u8BF7\u6C42\u4F53\uFF0C\u5C06pos\u79FB\u52A8\u5230\u4E0B\u4E00\u4E2A\u4F4D\u7F6E\uFF0C\u5E76\u5904\u7406\u5269\u4F59\u7684\u6570\u636E</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u672C\u6B21http\u8BF7\u6C42\u5DF2\u7ECF\u5904\u7406\u5B8C\u4E86\uFF0C\u505A\u6536\u5C3E\u5DE5\u4F5C</span>
  <span class="token comment">// \u4E3B\u8981\u5904\u7406\u770B\u8BF7\u6C42\u4F53\u662F\u5426\u6709\u5269\u4F59\u6570\u636E\u6CA1\u6709\u8BFB\u5B8C</span>

  <span class="token comment">// \u5224\u65AD\u5269\u4F59\u6570\u636E\u662F\u5426\u8D85\u8FC7\u4E86\u9650\u5236</span>
  <span class="token keyword">final</span> <span class="token keyword">boolean</span> maxSwallowSizeExceeded <span class="token operator">=</span> <span class="token punctuation">(</span>maxSwallowSize <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> remaining <span class="token operator">&gt;</span> maxSwallowSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">long</span> swallowed <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

  <span class="token comment">// remaining==contentlengt</span>
  <span class="token comment">// Consume extra bytes.</span>
  <span class="token comment">// \u8FD8\u6709\u5269\u4F59\u6570\u636E</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>remaining <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token comment">// \u4ECE\u64CD\u4F5C\u7CFB\u7EDF\u8BFB\u53D6\u6570\u636E</span>
    <span class="token keyword">int</span> nread <span class="token operator">=</span> buffer<span class="token punctuation">.</span><span class="token function">doRead</span><span class="token punctuation">(</span>endChunk<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nread <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C\u8BFB\u5230\u4E86\u6570\u636E</span>
      swallowed <span class="token operator">+=</span> nread<span class="token punctuation">;</span>
      <span class="token comment">// \u66F4\u65B0\u5269\u4F59\u6570\u636E</span>
      remaining <span class="token operator">=</span> remaining <span class="token operator">-</span> nread<span class="token punctuation">;</span>
      <span class="token comment">// \u5982\u679C\u5728\u904D\u5386\u5269\u4F59\u6570\u636E\u65F6\uFF0C\u8BFB\u5230\u7684\u6570\u636E\u8D85\u8FC7\u4E86maxSwallowSize\uFF0C\u5219\u4F1A\u629B\u5F02\u5E38\uFF0C\u540E\u7EED\u903B\u8F91\u5C31\u4F1A\u628Asocket\u5173\u6389</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>maxSwallowSizeExceeded <span class="token operator">&amp;&amp;</span> swallowed <span class="token operator">&gt;</span> maxSwallowSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6211\u4EEC\u4E0D\u4F1A\u63D0\u65E9\u5931\u8D25\uFF0C\u56E0\u6B64\u5BA2\u6237\u7AEF\u53EF\u4EE5\u53BB\u8BFB\u53D6\u54CD\u5E94\u5728\u8FDE\u63A5\u5173\u95ED\u4E4B\u524D</span>
        <span class="token comment">// Note: We do not fail early so the client has a chance to</span>
        <span class="token comment">// read the response before the connection is closed. See:</span>
        <span class="token comment">// https://httpd.apache.org/docs/2.0/misc/fin_wait_2.html#appendix</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IOException</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;inputFilter.maxSwallow&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// errors are handled higher up.</span>
      <span class="token comment">// \u5982\u679C\u672C\u6765\u8BA4\u4E3A\u8FD8\u6709\u5269\u4F59\u6570\u636E\uFF0C\u4F46\u662F\u771F\u6B63\u53BB\u8BFB\u7684\u65F6\u5019\u6CA1\u6709\u6570\u636E\u4E86\uFF0Cnread\u7B49\u4E8E-1\uFF0C\u7D22\u5F15\u5269\u4F59\u6570\u636E\u4E3A0</span>
      remaining <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u8BFB\u5230\u7684\u771F\u5B9E\u6570\u636E\u8D85\u8FC7\u4E86\u5269\u4F59\u6570\u636E\uFF0C\u5219remaining\u4E3A\u8D1F\u6570</span>
  <span class="token comment">// If too many bytes were read, return the amount.</span>
  <span class="token keyword">return</span> <span class="token operator">-</span>remaining<span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E5F\u5C31\u662F\u8BF4\uFF0C\u5982\u679C\u5F53\u524D\u8BFB\u53D6\u5230\u7684\u6570\u636E\u5305\u542B\u4E86\u4E0B\u4E00\u6B21\u8BF7\u6C42\u7684\u6570\u636E\uFF08\u4E5F\u5C31\u662F\u5269\u4F59\u7684\u6570\u636E\uFF09\uFF0C\u90A3\u4E48\u8FD9\u4E9B\u6570\u636E\u9700\u8981\u548C\u4E0B\u4E00\u6B21\u7684\u6570\u636E\u5408\u5E76\uFF08\u6709\u53EF\u80FD\u662F\u4E0B\u6B21\u6570\u636E\u7684\u8BF7\u6C42\u884C\u3010\u6BD4\u5982\u662FPOST\u3011\uFF09</p><p>end\u65B9\u6CD5\u5C31\u662F\u8D1F\u8D23\u4FEE\u6B63\u5F53\u524Dsocket\u548C\u4E0B\u4E00\u6B21socket\u6570\u636E\u8BFB\u53D6\u7684\u4F4D\u7F6E\u504F\u79FB\uFF0C\u4E00\u65E6\u8BFB\u53D6\u5230\u4E0B\u6B21\u8BF7\u6C42\u7684\u6570\u636E\uFF0Cpos\u9700\u8981\u5F80\u524D\u79FB\u52A8</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u6D4F\u89C8\u5668\u53EF\u4EE5\u5E76\u884C\u53D1\u9001socket\u8BF7\u6C42\uFF0C\u4F46\u662FTomcat\u53EA\u80FD\u4E32\u884C\u5904\u7406</span>
\u53EA\u80FD\u4E32\u884C\u7684\u4ECERecvBuf\u4E2D\u8BFB\u53D6\u6570\u636E\uFF0C\u4F46\u662F\u5904\u7406\u7684\u90E8\u5206\u662F\u53EF\u4EE5\u5E76\u884C\u5B9E\u73B0\u7684
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> BIO\u548CNIO\u662F\u4ECERecvBuf\u4E2D\u53D6\u6570\u636E\u7684\u65B9\u5F0F\u4E0D\u540C</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5BA2\u6237\u7AEF\u6D4F\u89C8\u5668\u5728\u53D1\u9001\u6570\u636E\u7684\u65F6\u5019\uFF0C\u662F\u901A\u8FC7\u8FDE\u7EED\u7684socket\u6765\u53D1\u9001\u7684\uFF0C\u6240\u4EE5\u53EF\u80FD\u4F1A\u5806\u79EF\u5728RecvBuf\u4E2D</p><p><img src="`+Nn+'" alt="image-20220222152104907"></p><p>\u56E0\u4E3A\u63A5\u4E0B\u6765\u6D89\u53CA\u5230Request\u5BF9\u8C61\u5C5E\u6027\u7684\u586B\u5145\uFF0C\u6240\u4EE5\u6211\u4EEC\u5148\u4E86\u89E3Request\u5BF9\u8C61</p><h4 id="request\u5BF9\u8C61"><a class="header-anchor" href="#request\u5BF9\u8C61" aria-hidden="true">#</a> Request\u5BF9\u8C61</h4><p>\u5728Tomcat\u4E2D\u5176\u5B9E\u6709\u4E24\u4E2ARequest\u5BF9\u8C61</p><p><img src="'+Hn+`" alt="image-20220221201451969"></p><ul><li>connector.Request \u5B9E\u73B0\u4E86servlet\u89C4\u8303\u7684\uFF0C\u8FD8\u6709\u4E00\u4E2A\u95E8\u9762\u6A21\u5F0F\u7684\u7C7BRequestFacade</li><li>coyote.Request</li></ul><p>\u5B83\u4EEC\u4E8C\u8005\u4E2D\u7684\u5C5E\u6027\u65B9\u6CD5\u76F8\u4F3C\uFF0C\u6BD4\u5982\u5E73\u65F6\u6211\u4EEC\u8C03\u7528<code>request.getMethod()</code>\u83B7\u53D6\u8BF7\u6C42\u65B9\u6CD5\u7C7B\u578B\u7684\u65F6\u5019\uFF0C\u8C03\u7528\u7684\u987A\u5E8F\u662F\uFF1A</p><p><code>RequestFacade---connector.Request---coyote.Request</code></p><p>\u4ECE\u8FD9\u91CC\u6211\u4EEC\u53EF\u4EE5\u770B\u5F97\u51FA\u6765\uFF0C\u8FD9\u4E09\u8005\u7684\u5C42\u7EA7\u5173\u7CFB\uFF0C\u6240\u4EE5\u8BF4\u6211\u4EEC\u771F\u6B63\u83B7\u53D6\u6570\u636E\u662F\u5728coyote.Request\uFF0CTomcat\u4ECEsocket\u89E3\u6790\u51FA\u6765\u7684\u6570\u636E\uFF0C\u4E5F\u662F\u586B\u5145\u5230<code>coyote.Request</code></p><h5 id="coyote-request"><a class="header-anchor" href="#coyote-request" aria-hidden="true">#</a> coyote.Request</h5><p>\u6211\u4EEC\u6765\u4E86\u89E3\u4E00\u4E0B\u8FD9\u4E2A\u5E95\u5C42\u7684Request</p><p><strong>MessageBytes</strong></p><p>\u6211\u4EEC\u67E5\u770Bcoyote.Request\u4E2D\u6709\u5F88\u591A\u7684\u5C5E\u6027\u7684\u7C7B\u578B\u90FDMessageBytes\uFF0C\u4E86\u89E3\u4E00\u4E0B</p><p>\u6B64\u7C7B\u7528\u4E8E\u8868\u793A HTTP \u6D88\u606F\u4E2D\u7684\u5B57\u8282\u5B50\u6570\u7EC4\u3002\u5B83\u4EE3\u8868\u6240\u6709\u8BF7\u6C42\u54CD\u5E94\u5143\u7D20\u3002 bytechar \u8F6C\u6362\u88AB\u5EF6\u8FDF\u548C\u7F13\u5B58\u3002\u4E00\u5207\u90FD\u662F\u53EF\u56DE\u6536\u7684\u3002\u8BE5\u5BF9\u8C61\u53EF\u4EE5\u8868\u793A\u4E00\u4E2A\u5B57\u8282[]\u3001\u4E00\u4E2A\u5B57\u7B26[]\u6216\u4E00\u4E2A\uFF08\u5B50\uFF09\u5B57\u7B26\u4E32\u3002\u6240\u6709\u64CD\u4F5C\u90FD\u53EF\u4EE5\u5728\u533A\u5206\u5927\u5C0F\u5199\u7684\u6A21\u5F0F\u4E0B\u8FDB\u884C\uFF0C\u4E5F\u53EF\u4EE5\u4E0D\u8FDB\u884C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// Internal objects to represent array + offset, and specific methods</span>
<span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ByteChunk</span> byteC<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ByteChunk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>ByteChunk</code> \u5B57\u8282\u5757\uFF0C\u8FD9\u4E2A\u7C7B\u5728\u6211\u4EEC\u8BF7\u6C42\u7684\u65F6\u5019\uFF0C\u4F1A\u4F7F\u7528\u5230\uFF0C\u54CD\u5E94\u7684\u65F6\u5019\u4E5F\u4F1A\u4F7F\u7528\u5230\uFF0C\u8FD9\u4E2A\u7C7B\u91CC\u9762\u4F7F\u7528\u5B57\u8282\u6570\u7EC4\u5B58\u50A8\u6570\u636E\uFF0C\u5E76\u5C01\u88C5\u4E86\u5E38\u7528\u7684\u8BFB\u53D6\u3001\u6DFB\u52A0\u3001\u8FFD\u52A0\u3001\u5220\u9664\u3001\u6E05\u7A7A\u7B49\u9488\u5BF9\u6570\u636Ebyte\u7684\u64CD\u4F5C</p><p><img src="`+Dn+'" alt="image-20220221203906270"></p><p>\u6BCF\u4E00\u4E2AByteChunk\u901A\u8FC7\u5728\u6807\u8BB0byte\u4E0A\u4E0D\u540C\u7684\u4F4D\u7F6E\uFF0C\u6807\u8BB0\u51FA\u4E0D\u540C\u7684\u53C2\u6570</p><p><img src="'+Mn+`" alt="image-20220221205219692"></p><p>\u6BD4\u5982\uFF0C\u4ECE<code>coyote.Request</code>\u83B7\u53D6\u5230method\u4E4B\u540E\uFF0Cconnector.Request\u4F1A\u8C03\u7528toString\u65B9\u6CD5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> coyoteRequest<span class="token punctuation">.</span><span class="token function">method</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u90A3\u4E48\u5C31\u4F1A\u4ECEByteChunk\u4E2D\u89E3\u6790\u6210\u5B57\u7B26\u4E32\uFF0C<code>byteC\u5C31\u662FByteChunk</code>\u5B57\u8282\u5757</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span> hasStrValue <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> strValue<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> T_CHARS<span class="token operator">:</span>
      strValue<span class="token operator">=</span>charC<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      hasStrValue<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> strValue<span class="token punctuation">;</span>
    <span class="token keyword">case</span> T_BYTES<span class="token operator">:</span>
      strValue<span class="token operator">=</span>byteC<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      hasStrValue<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> strValue<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u4ECE\u8FD9\u91CC\u4E5F\u53EF\u4EE5\u770B\u5230\uFF0C\u8FD9\u91CC\u4E5F\u53EF\u4EE5\u4ECE\u5B57\u7B26\u8F6C\u6210\u5B57\u7B26\u4E32</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5F53\u4ECE\u5B57\u8282\u8F6C\u6362\u5230\u5B57\u7B26\u4E32\u7684\u65F6\u5019\u7ED9\u6211\u4EEC\u8FD4\u56DE\u7684\u65F6\u5019\uFF0C\u4E5F\u4F1A\u628A\u5B57\u7B26\u4E32\u5B58\u50A8\u5230StringCache\u4E2D\uFF0C\u5F53\u6211\u4EEC\u4E0B\u6B21\u5728\u83B7\u53D6\u7684\u65F6\u5019\uFF0C\u5C31\u4F1A\u4E0D\u7528\u8F6C\u6362\uFF0C\u76F4\u63A5\u4ECEStringCache\u4E2D\u83B7\u53D6</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span><span class="token punctuation">(</span> hasStrValue <span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> strValue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u4E0B\u6765\u5C31\u662F\u5C06\u5C01\u88C5\u597D\u7684Request\u4EA4\u7ED9servlet\u5904\u7406\u4E86\uFF0C\u7B49\u5230servlet\u5904\u7406\u5B8C\u6210\u4E4B\u540E\uFF0C\u5C31\u5F00\u59CB\u5C01\u88C5\u54CD\u5E94\u7684Response\u4E86</p><p>Tomcat\u5728\u5C06Request\u4EA4\u7ED9servlet\u4E4B\u540E\uFF0C\u5C31\u53EF\u4EE5\u5F00\u59CB\u5904\u7406\u4E0B\u4E00\u4E2Asocket\u8BF7\u6C42\u4E86</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u8FD9\u4E2A\u65F6\u5019\u53EF\u80FD\u4F1A\u51FA\u73B0\u4E00\u4E2A\u95EE\u9898\uFF0CTomcat\u5728\u5F53\u524D\u7684\u6570\u636E\u7684\u65F6\u5019\uFF0C\u53EF\u80FD\u4F1A\u628A\u4E0B\u4E00\u4E2Asocket\u7684\u6570\u636E\u4E5F\u52A0\u8F7D\u5230Buf\u4E2D\uFF0C\u6BD4\u5982\u5982\u4E0B\uFF0C\u9664\u4E86\u8BFB\u53D6\u5F53\u524D\u7684\u8BF7\u6C42\u5934+\u8BF7\u6C42\u4F53\u4E4B\u5916\uFF0C\u8FD8\u8BFB\u53D6\u4E86\u4E0B\u4E00\u4E2A\u8BF7\u6C42\u7684</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+Fn+'" alt="image-20220221213554025"></p><h2 id="\u54CD\u5E94\u6D41\u7A0B\u539F\u7406\u89E3\u6790"><a class="header-anchor" href="#\u54CD\u5E94\u6D41\u7A0B\u539F\u7406\u89E3\u6790" aria-hidden="true">#</a> \u54CD\u5E94\u6D41\u7A0B\u539F\u7406\u89E3\u6790</h2><h3 id="\u57FA\u672C\u70B9"><a class="header-anchor" href="#\u57FA\u672C\u70B9" aria-hidden="true">#</a> \u57FA\u672C\u70B9</h3><p>\u5728servlet\u4E2D\u6211\u4EEC\u5982\u4F55\u53BB\u54CD\u5E94\u7684\uFF0C\u5229\u7528response</p><p><img src="'+zn+'" alt="image-20220222174141156"></p><p>\u6216\u8005\u4F7F\u7528</p><p><img src="'+Vn+`" alt="image-20220222174238110"></p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u65E0\u8BBA\u662F\u5BA2\u6237\u7AEF\u8FD8\u662F\u670D\u52A1\u7AEF\uFF0C\u5982\u679C\u5E94\u7528\u7A0B\u5E8F\u9700\u8981\u53D1\u9001\u6570\u636E\uFF0C\u9700\u8981\u5148\u628A\u6570\u636E\u53D1\u9001\u7ED9SendBuf\uFF0C\u7136\u540E\u8BA9\u64CD\u4F5C\u7CFB\u7EDF\u53BB\u53D1\u9001</span>
\u5F53\u6211\u4EEC\u8981\u5C06\u6570\u636E\u653E\u5230SendBuf\u7684\u65F6\u5019\uFF0C\u5982\u679C\u8FD9\u4E2A\u65F6\u5019\u7F13\u51B2\u533A\u5DF2\u7ECF\u6EE1\u4E86\uFF0C\u64CD\u4F5C\u7CFB\u7EDF\u6682\u65F6\u8FD8\u6CA1\u6709\u5C06\u8FD9\u4E9B\u6EE1\u7684\u6570\u636E\u53D1\u9001\u51FA\u53BB\uFF0C\u8FD9\u4E2A\u65F6\u5019\u6211\u4EEC\u5C06\u6570\u636E\u653E\u5230SendBuf\u7684\u64CD\u4F5C\u5C31\u4F1A\u88AB\u963B\u585E\u4F4F\uFF0C\u4E5F\u5C31\u662Fwrite\u64CD\u4F5C\u4F1A\u88AB\u963B\u585E\u4F4F
Tomcat\u4E3A\u4E86\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\uFF0C\u5C31\u4F1A\u5728\u81EA\u5DF1\u548CSendBuf\u4E2D\u95F4\u52A0\u7F13\u51B2\u533A\uFF0C\u5148\u5199\u5230\u7F13\u51B2\u533A\uFF0C\u7136\u540Ewrite\u64CD\u4F5C\u5C31\u4E0D\u4F1A\u963B\u585E
Tomcat\u6709\u4E24\u4E2A\u7F13\u51B2\u533A\uFF0C\u8FD9\u91CC\u9762\u4F7F\u7528\u7684\u5B58\u50A8\u7C7B\u90FD\u662FByteChunk\u7C7B
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+Wn+`" alt="image-20220222180518776"></p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u5982\u679C\u7F13\u51B2\u533A\u6CA1\u6709\u6EE1\uFF0C\u4F46\u662F\u8C03\u7528\u4E86frush\u65B9\u6CD5\uFF0C\u5C31\u4F1A\u628A\u6570\u636E\u5199\u51FA\u53BB</span>
\u8FD9\u91CC\u5C31\u6D89\u53CA\u5230\u4E24\u6B65\uFF0C\u7B2C\u4E00\u6B65\uFF0C\u5C06\u7B2C\u4E00\u4E2A\u7F13\u51B2\u533A\u7684\u6570\u636E\u5199\u5230\u7B2C\u4E8C\u4E2A\u7F13\u51B2\u533A\uFF1B\u7B2C\u4E8C\u6B65\uFF0C\u5C06\u7B2C\u4E8C\u4E2A\u7F13\u51B2\u533A\u7684\u6570\u636E\u5199\u5230\u64CD\u4F5C\u7CFB\u7EDF\u7684SendBuf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doFlush</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> realFlush<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>suspended<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    doFlush <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>initial<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5148\u53D1\u9001\u8BF7\u6C42\u5934\uFF0C\u518D\u53D1\u9001\u8BF7\u6C42\u4F53</span>
      coyoteResponse<span class="token punctuation">.</span><span class="token function">sendHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      initial <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cb<span class="token punctuation">.</span><span class="token function">getLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      cb<span class="token punctuation">.</span><span class="token function">flushBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>bb<span class="token punctuation">.</span><span class="token function">getLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8FD9\u91CC\u53EA\u662F\u628A\u4E0A\u5C42\u7F13\u51B2\u533A\u4E2D\u7684\u6570\u636E\u53D1\u9001\u5230\u5E95\u5C42\u7F13\u51B2\u533A\u4E2D\uFF0C\u6240\u4EE5\u6570\u636E\u5230\u5E95\u4F1A\u4E0D\u4F1A\u53D1\u9001\u7ED9socket\u5E76\u4E0D\u786E\u5B9A</span>
      bb<span class="token punctuation">.</span><span class="token function">flushBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
    doFlush <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>realFlush<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u662F\u771F\u6B63flush\uFF0C\u628A\u5E95\u5C42\u7F13\u51B2\u533A\u4E2D\u7684\u6570\u636E\u53D1\u9001\u7ED9socket</span>
    coyoteResponse<span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token class-name">ActionCode</span><span class="token punctuation">.</span>CLIENT_FLUSH<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// If some exception occurred earlier, or if some IOE occurred</span>
    <span class="token comment">// here, notify the servlet with an IOE</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>coyoteResponse<span class="token punctuation">.</span><span class="token function">isExceptionPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ClientAbortException</span><span class="token punctuation">(</span>coyoteResponse<span class="token punctuation">.</span><span class="token function">getErrorException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u73B0\u5728\u5199\u7684\u6570\u636E\u53EB\u505A\u54CD\u5E94\u4F53\uFF0C\u800C\u6211\u4EEC\u771F\u6B63\u8981\u54CD\u5E94\u7684\u8BDD\uFF0C\u5E94\u8BE5\u8FD8\u8981\u54CD\u5E94\u5934</p><p>\u90A3\u4E48frush\u5C31\u4F1A\u53BB\u53D1\u9001\u54CD\u5E94\u5934\uFF0Cfrush\u51FD\u6570\u4E2D\u4F1A\u53BB\u5224\u65AD\uFF0C\u5982\u679C\u662F\u540C\u4E00\u4E2A\u54CD\u5E94\u7684\u8BDD\uFF0C\u5C31\u4E0D\u4F1A\u91CD\u590D\u53D1\u9001\u54CD\u5E94\u5934</p><p><img src="`+Un+`" alt="image-20220222181402064"></p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u54CD\u5E94\u4E5F\u6709content-length\u548Cchunk</span>
frush\u5C31\u662F\u5206\u5757chunk\uFF0C\u5148\u53D1\u9001\u4E86\u4E00\u5757\uFF0C\u7136\u540E\u5728\u53D1\u9001\u4E00\u5757
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EC0\u4E48\u8BF7\u6B3E\u4E0B\u4F7F\u7528content-length\uFF0C\u5F53\u6211\u4EEC\u76F4\u63A5\u5C06\u6570\u636E\u5199\u5165\u5230\u6D41\u91CC\u9762\u7684\u65F6\u5019\uFF0C\u5C31\u53EF\u4EE5\u786E\u5B9A\u5F53\u524D\u54CD\u5E94\u4F53\u7684\u6570\u636E\u91CF\u7684\u5927\u5C0F\u4E86</p><p><img src="`+Jn+`" alt="image-20220222183853851"></p><p>\u6240\u4EE5\u8BF4\uFF0C\u5F53\u5F53\u524D\u51FD\u6570\u6267\u884C\u5B8C\u6210\u4E4B\u540E\uFF0CTomcat\u5C31\u4F1A\u6839\u636E\u5F53\u524D\u5199\u5165\u7684\u6570\u636E\u91CF\u6765\u8BA1\u7B97\u51FAcontent-length\u7684\u503C\uFF0C\u5E76\u7ED9\u6211\u4EEC\u6784\u9020\u51FA\u54CD\u5E94\u5934</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u903B\u8F91\u662F\u8FD9\u6837\u7684</span>
\u9996\u5148\u5224\u65AD\u6211\u4EEC\u7684\u54CD\u5E94\u4F53\u6709\u6CA1\u6709\u53D1\u9001\u8FC7\uFF0C\u5982\u679C\u6CA1\u6709\u53D1\u9001\u8FC7\u7684\u8BDD\uFF0C\u90A3\u4E48\u5C31\u53D6\u51FA\u6240\u6709\u7F13\u51B2\u533A\u4E2D\u7684\u6570\u636E\u8BA1\u7B97content-length\uFF0C\u6784\u9020\u51FA\u54CD\u5E94\u5934\uFF0C\u6309\u7167\u6574\u4F53\u53D1\u9001\u51FA\u53BB
\u5982\u679C\u53D1\u9001\u8FC7\uFF0C\u6309\u7167chunk\u6765\u53D1\u9001
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> finishResponse\u548C\u8C03\u7528outputStream.close()\u65F6\u90FD\u4F1A\u5C06\u6570\u636E\u53D1\u9001\u51FA\u53BB</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="\u6E90\u7801\u89E3\u6790"><a class="header-anchor" href="#\u6E90\u7801\u89E3\u6790" aria-hidden="true">#</a> \u6E90\u7801\u89E3\u6790</h3><p>\u4E0A\u9762\u8BB2\u4E86\u5927\u6982\u7684\u6D41\u7A0B\u5185\u5BB9\uFF0C\u63A5\u4E0B\u6765\uFF0C\u6211\u4EEC\u770B\u4E00\u4E0B\u6E90\u7801\u7684\u5B9E\u73B0\u65B9\u5F0F</p><p>\u6211\u4EEC\u8FD9\u91CC\u7684OutputStream\u7684\u4E3B\u8981\u5B9E\u73B0\u7C7B\u662FCoyoteOutputStream\uFF0C\u6211\u4EEC\u73B0\u5728\u6765\u770B\u4E00\u4E0B\u5B83\u7684\u529F\u80FD\u548C\u6D41\u7A0B</p><p>OutputStream\u4E3B\u8981\u5B58\u50A8\u5B57\u8282\u7684\u5BF9\u8C61\u662F<code>ByteChunk</code>\uFF0C\u4E3B\u8981\u662F\u901A\u8FC7append\u6DFB\u52A0\u6570\u636E\u5230<code>ByteChunk</code></p><h4 id="coyoteoutputstream-write\u65B9\u6CD5"><a class="header-anchor" href="#coyoteoutputstream-write\u65B9\u6CD5" aria-hidden="true">#</a> <code>CoyoteOutputStream#write</code>\u65B9\u6CD5</h4><p>\u4E3B\u8981\u662F\u5C06\u6570\u636E\u5199\u5165\u5230\u7F13\u51B2\u533A\uFF0CTomcat\u4F1A\u81EA\u52A8\u6839\u636E\u5F53\u524D\u7F13\u51B2\u533A\u662F\u5426\u6EE1\uFF0C\u6765\u51B3\u5B9A\u662F\u5426\u5C06\u5F53\u524D\u6570\u636E\u79FB\u52A8\u5230\u4E0B\u4E00\u7EA7\u7F13\u51B2\u533A\uFF0C\u7136\u540E\u770B\u4E0B\u4E00\u7EA7\u662F\u5426\u6EE1\u6765\u51B3\u5B9A\u662F\u5426\u5C06\u6570\u636E\u53D1\u9001\u5230SendBuf\uFF0C\u4EA4\u7ED9\u7CFB\u7EDF\u53D1\u9001\u6570\u636E</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">writeBytes</span><span class="token punctuation">(</span><span class="token keyword">byte</span> b<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> off<span class="token punctuation">,</span> <span class="token keyword">int</span> len<span class="token punctuation">)</span>
        <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>closed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u5C06\u6570\u636E\u5148\u5199\u5165ByteChunk\u7684\u7F13\u51B2\u533A\u4E2D, \u5982\u679C\u7F13\u51B2\u533A\u6EE1\u4E86\uFF0C\u53EF\u80FD\u4F1A\u628A\u6570\u636E\u53D1\u9001\u51FA\u53BB</span>
  bb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> off<span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>
  bytesWritten <span class="token operator">+=</span> len<span class="token punctuation">;</span>

  <span class="token comment">// if called from within flush(), then immediately flush</span>
  <span class="token comment">// remaining bytes</span>
  <span class="token comment">// \u5982\u679C\u6B64\u524D\u5DF2\u7ECF\u8C03\u7528\u8FC7flush\u65B9\u6CD5</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>doFlush<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u90A3\u4E48\u6BCF\u6B21write\u90FD\u628A\u7F13\u51B2\u4E2D\u7684\u6570\u636E\u53D1\u9001\u51FA\u53BB</span>
    bb<span class="token punctuation">.</span><span class="token function">flushBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8C03\u7528<code>ByteChunk#append</code>\u65B9\u6CD5\u5C06\u6570\u636E\u586B\u5145\u5230<code>ByteChunk</code></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">append</span><span class="token punctuation">(</span><span class="token keyword">byte</span> src<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> off<span class="token punctuation">,</span> <span class="token keyword">int</span> len<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
  <span class="token comment">// will grow, up to limit</span>
  <span class="token comment">// \u5411\u7F13\u51B2\u533A\u4E2D\u6DFB\u52A0\u6570\u636E\uFF0C\u9700\u8981\u5F00\u8F9F\u7F13\u5B58\u533A\u7A7A\u95F4\uFF0C\u7F13\u5B58\u533A\u521D\u59CB\u5927\u5C0F\u4E3A256\uFF0C\u6700\u5927\u5927\u5C0F\u53EF\u4EE5\u8BBE\u7F6E\uFF0C\u9ED8\u8BA4\u4E3A8192</span>
  <span class="token comment">// \u610F\u601D\u662F\u73B0\u5728\u8981\u60F3\u7F13\u51B2\u533A\u5B58\u653E\u6570\u636E\uFF0C\u9996\u5148\u5F97\u53BB\u5F00\u8F9F\u7A7A\u95F4\uFF0C\u4F46\u662F\u7A7A\u95F4\u662F\u6709\u4E00\u4E2A\u6700\u5927\u9650\u5236\u7684\uFF0C\u6240\u4EE5\u8981\u5B58\u653E\u7684\u6570\u636E\u53EF\u80FD\u5C0F\u4E8E\u9650\u5236\uFF0C\u4E5F\u53EF\u80FD\u5927\u4E8E\u9650\u5236</span>
  <span class="token function">makeSpace</span><span class="token punctuation">(</span>len<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">int</span> limit <span class="token operator">=</span> <span class="token function">getLimitInternal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7F13\u51B2\u533A\u5927\u5C0F\u7684\u6700\u5927\u9650\u5236</span>

  <span class="token comment">// Optimize on a common case.</span>
  <span class="token comment">// If the buffer is empty and the source is going to fill up all the</span>
  <span class="token comment">// space in buffer, may as well write it directly to the output,</span>
  <span class="token comment">// and avoid an extra copy</span>
  <span class="token comment">// \u5982\u679C\u8981\u6DFB\u52A0\u5230\u7F13\u51B2\u533A\u4E2D\u7684\u6570\u636E\u5927\u5C0F\u6B63\u597D\u7B49\u4E8E\u6700\u5927\u9650\u5236\uFF0C\u5E76\u4E14\u7F13\u51B2\u533A\u662F\u7A7A\u7684\uFF0C\u90A3\u4E48\u5219\u76F4\u63A5\u628A\u6570\u636E\u53D1\u9001\u7ED9out\uFF0C\u4E0D\u8981\u5B58\u5728\u7F13\u51B2\u533A\u4E2D\u4E86</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>optimizedWrite <span class="token operator">&amp;&amp;</span> len <span class="token operator">==</span> limit <span class="token operator">&amp;&amp;</span> end <span class="token operator">==</span> start <span class="token operator">&amp;&amp;</span> out <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    out<span class="token punctuation">.</span><span class="token function">realWriteBytes</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> off<span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// if we are below the limit</span>
  <span class="token comment">// \u5982\u679C\u8981\u53D1\u9001\u7684\u6570\u636E\u957F\u5EA6\u5C0F\u4E8E\u7F13\u51B2\u533A\u4E2D\u5269\u4F59\u7A7A\u95F4\uFF0C\u5219\u628A\u6570\u636E\u586B\u5145\u5230\u5269\u4F59\u7A7A\u95F4</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>len <span class="token operator">&lt;=</span> limit <span class="token operator">-</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">arraycopy</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> off<span class="token punctuation">,</span> buff<span class="token punctuation">,</span> end<span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>
    end <span class="token operator">+=</span> len<span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u5982\u679C\u8981\u53D1\u9001\u7684\u6570\u636E\u957F\u5EA6\u5927\u4E8E\u7F13\u51B2\u533A\u4E2D\u5269\u4F59\u7A7A\u95F4\uFF0C</span>

  <span class="token comment">// Need more space than we can afford, need to flush buffer.</span>

  <span class="token comment">// The buffer is already at (or bigger than) limit.</span>

  <span class="token comment">// We chunk the data into slices fitting in the buffer limit, although</span>
  <span class="token comment">// if the data is written directly if it doesn&#39;t fit.</span>

  <span class="token comment">// \u7F13\u51B2\u533A\u4E2D\u8FD8\u80FD\u5BB9\u7EB3avail\u4E2A\u5B57\u8282\u7684\u6570\u636E</span>
  <span class="token keyword">int</span> avail <span class="token operator">=</span> limit <span class="token operator">-</span> end<span class="token punctuation">;</span>
  <span class="token comment">// \u5148\u5C06\u4E00\u90E8\u5206\u6570\u636E\u590D\u5236\u5230buff\uFF0C\u586B\u6EE1\u7F13\u51B2\u533A</span>
  <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">arraycopy</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> off<span class="token punctuation">,</span> buff<span class="token punctuation">,</span> end<span class="token punctuation">,</span> avail<span class="token punctuation">)</span><span class="token punctuation">;</span>
  end <span class="token operator">+=</span> avail<span class="token punctuation">;</span>

  <span class="token comment">// \u5C06\u7F13\u51B2\u533A\u7684\u6570\u636E\u53D1\u9001\u51FA\u53BB</span>
  <span class="token function">flushBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u8FD8\u5269\u4E0B\u4E00\u90E8\u5206\u6570\u636E\u6CA1\u6709\u653E\u5230\u7F13\u51B2\u533A\u4E2D\u7684</span>
  <span class="token keyword">int</span> remain <span class="token operator">=</span> len <span class="token operator">-</span> avail<span class="token punctuation">;</span>

  <span class="token comment">// \u5982\u679C\u5269\u4E0B\u7684\u6570\u636E \u8D85\u8FC7 \u7F13\u51B2\u533A\u5269\u4F59\u5927\u5C0F,\u90A3\u4E48\u5C31\u628A\u6570\u636E\u76F4\u63A5\u53D1\u9001\u51FA\u53BB</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>remain <span class="token operator">&gt;</span> <span class="token punctuation">(</span>limit <span class="token operator">-</span> end<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    out<span class="token punctuation">.</span><span class="token function">realWriteBytes</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> <span class="token punctuation">(</span>off <span class="token operator">+</span> len<span class="token punctuation">)</span> <span class="token operator">-</span> remain<span class="token punctuation">,</span> limit <span class="token operator">-</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>
    remain <span class="token operator">=</span> remain <span class="token operator">-</span> <span class="token punctuation">(</span>limit <span class="token operator">-</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u76F4\u5230\u6700\u540E\u5269\u4E0B\u7684\u6570\u636E\u80FD\u653E\u5165\u7F13\u51B2\u533A\uFF0C\u90A3\u4E48\u5C31\u653E\u5165\u5230\u7F13\u51B2\u533A</span>
  <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">arraycopy</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> <span class="token punctuation">(</span>off <span class="token operator">+</span> len<span class="token punctuation">)</span> <span class="token operator">-</span> remain<span class="token punctuation">,</span> buff<span class="token punctuation">,</span> end<span class="token punctuation">,</span> remain<span class="token punctuation">)</span><span class="token punctuation">;</span>
  end <span class="token operator">+=</span> remain<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u521B\u5EFA\u7A7A\u95F4\uFF0C\u5982\u679C\u5F53\u524D\u7F13\u51B2\u533A\u6CA1\u6709\u6EE1\uFF0C\u90A3\u4E48\u5C31\u5148\u586B\u6EE1\u5269\u4F59\u7684\u90E8\u5206\uFF0C\u5E76\u53D1\u9001\u51FA\u53BB\uFF0C\u7136\u540E\u5728\u5904\u7406\u5269\u4F59\u7684\u6570\u636E</p><ul><li>\u5982\u679C\u5269\u4E0B\u7684\u6570\u636E \u8D85\u8FC7 \u7F13\u51B2\u533A\u5269\u4F59\u5927\u5C0F,\u90A3\u4E48\u5C31\u628A\u6570\u636E\u76F4\u63A5\u53D1\u9001\u51FA\u53BB</li><li>\u76F4\u5230\u6700\u540E\u5269\u4E0B\u7684\u6570\u636E\u80FD\u653E\u5165\u7F13\u51B2\u533A\uFF0C\u90A3\u4E48\u5C31\u653E\u5165\u5230\u7F13\u51B2\u533A</li></ul><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u8FD9\u6837\u53D1\u4E00\u534A\u4E00\u534A\u7684\u51FA\u53BB\uFF0C\u53EA\u8981\u662F\u6309\u7167\u987A\u5E8F\u53D1\u9001\u7684\uFF0C\u5C31\u4E0D\u4F1A\u6709\u95EE\u9898</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>makeSpace\u521B\u5EFA\u51FA\u5B58\u50A8\u6570\u636E\u7684\u5185\u5B58\u7A7A\u95F4</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">makeSpace</span><span class="token punctuation">(</span><span class="token keyword">int</span> count<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> tmp <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

  <span class="token comment">// \u7F13\u51B2\u533A\u7684\u6700\u5927\u5927\u5C0F\uFF0C\u53EF\u4EE5\u8BBE\u7F6E\uFF0C\u9ED8\u8BA4\u4E3A8192</span>
  <span class="token keyword">int</span> limit <span class="token operator">=</span> <span class="token function">getLimitInternal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">long</span> newSize<span class="token punctuation">;</span>
  <span class="token comment">// end\u8868\u793A\u7F13\u51B2\u533A\u4E2D\u5DF2\u6709\u6570\u636E\u7684\u6700\u540E\u4E00\u4E2A\u4F4D\u7F6E\uFF0CdesiredSize\u8868\u793A\u65B0\u6570\u636E+\u5DF2\u6709\u6570\u636E\u5171\u591A\u5927</span>
  <span class="token keyword">long</span> desiredSize <span class="token operator">=</span> end <span class="token operator">+</span> count<span class="token punctuation">;</span>

  <span class="token comment">// Can&#39;t grow above the limit</span>
  <span class="token comment">// \u5982\u679C\u8D85\u8FC7\u9650\u5236\u4E86\uFF0C\u90A3\u5C31\u53EA\u80FD\u5F00\u8F9Flimit\u5927\u5C0F\u7684\u7F13\u51B2\u533A\u4E86</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>desiredSize <span class="token operator">&gt;</span> limit<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    desiredSize <span class="token operator">=</span> limit<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>buff <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u521D\u59CB\u5316\u5B57\u8282\u6570\u7EC4</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>desiredSize <span class="token operator">&lt;</span> <span class="token number">256</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      desiredSize <span class="token operator">=</span> <span class="token number">256</span><span class="token punctuation">;</span> <span class="token comment">// take a minimum</span>
    <span class="token punctuation">}</span>
    buff <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> desiredSize<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// limit &lt; buf.length (the buffer is already big)</span>
  <span class="token comment">// or we already have space XXX</span>
  <span class="token comment">// \u5982\u679C\u9700\u8981\u7684\u5927\u5C0F\u5C0F\u4E8Ebuff\u957F\u5EA6\uFF0C\u90A3\u4E48\u4E0D\u9700\u8981\u589E\u5927\u7F13\u51B2\u533A</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>desiredSize <span class="token operator">&lt;=</span> buff<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u4E0B\u9762\u4EE3\u7801\u7684\u524D\u63D0\u6761\u4EF6\u662F\uFF0C\u9700\u8981\u7684\u5927\u5C0F\u8D85\u8FC7\u4E86buff\u7684\u957F\u5EA6</span>

  <span class="token comment">// grow in larger chunks</span>
  <span class="token comment">// \u5982\u679C\u9700\u8981\u7684\u5927\u5C0F\u5927\u4E8Ebuff.length, \u5C0F\u4E8E2*buff.length\uFF0C\u5219\u7F13\u51B2\u533A\u7684\u65B0\u5927\u5C0F\u4E3A2*buff.length\uFF0C</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>desiredSize <span class="token operator">&lt;</span> <span class="token number">2L</span> <span class="token operator">*</span> buff<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    newSize <span class="token operator">=</span> buff<span class="token punctuation">.</span>length <span class="token operator">*</span> <span class="token number">2L</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5426\u5219\u4E3Abuff.length * 2L + count</span>
    newSize <span class="token operator">=</span> buff<span class="token punctuation">.</span>length <span class="token operator">*</span> <span class="token number">2L</span> <span class="token operator">+</span> count<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u6269\u5BB9\u524D\u6CA1\u6709\u8D85\u8FC7\u9650\u5236\uFF0C\u6269\u5BB9\u540E\u53EF\u80FD\u8D85\u8FC7\u9650\u5236</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>newSize <span class="token operator">&gt;</span> limit<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    newSize <span class="token operator">=</span> limit<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  tmp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> newSize<span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token comment">// Compacts buffer</span>
  <span class="token comment">// \u628A\u5F53\u524Dbuff\u4E2D\u7684\u5185\u5BB9\u590D\u5236\u5230tmp\u4E2D</span>
  <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">arraycopy</span><span class="token punctuation">(</span>buff<span class="token punctuation">,</span> start<span class="token punctuation">,</span> tmp<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> end <span class="token operator">-</span> start<span class="token punctuation">)</span><span class="token punctuation">;</span>
  buff <span class="token operator">=</span> tmp<span class="token punctuation">;</span>
  tmp <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  end <span class="token operator">=</span> end <span class="token operator">-</span> start<span class="token punctuation">;</span>
  start <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6269\u5BB9\u673A\u5236\uFF1A</p><ul><li><p><code>desiredSize</code>\u8868\u793A\u6240\u6709\u7684\u6570\u636E\u91CF\u7684\u5927\u5C0F=\u5F53\u524D\u5DF2\u7ECF\u5B58\u5728\u7F13\u51B2\u533A\u4E2D\u7684\u6570\u636E\u91CF+\u5C06\u8981\u653E\u5165\u7684\u6570\u636E\u91CF</p></li><li><p>\u5982\u679C\u5F53\u524D\u7684\u5DF2\u7ECF\u5728\u7F13\u51B2\u533A\u4E2D\u7684\u6570\u636E\u91CF+\u5C06\u8981\u653E\u5165\u7684\u6570\u636E\u91CF\u5C0F\u4E8E<code>\u7F13\u51B2\u533A\u7684\u6700\u5927\u5927\u5C0F\uFF0C\u53EF\u4EE5\u8BBE\u7F6E\uFF0C\u9ED8\u8BA4\u4E3A8192</code>\u90A3\u4E48\u5C31\u6309\u7167\u4F20\u5165\u7684\u6570\u636E\u91CF\u6765\u521B\u5EFA\u5BF9\u5E94\u5927\u5C0F\u7684\u5185\u5B58</p></li><li><p>\u5982\u679C\u5F53\u524D\u7684\u5DF2\u7ECF\u5728\u7F13\u51B2\u533A\u4E2D\u7684\u6570\u636E\u91CF+\u5C06\u8981\u653E\u5165\u7684\u6570\u636E\u91CF\u5927\u4E8E\u7F13\u51B2\u533A\u7684\u6700\u5927\u9650\u5236\uFF0C\u5C31\u6309\u7167\u6700\u5927\u9650\u5236\u6765\u521B\u5EFA\u5185\u5B58</p></li><li><p>\u5982\u679C\u6240\u6709\u7684\u6570\u636E\u91CF\u5DF2\u7ECF\u8D85\u8FC7\u7F13\u51B2\u533A\u7684\u6700\u5927\u5BB9\u91CF\uFF0C\u90A3\u4E48\u5C31\u770B\u662F\u5426\u8D85\u8FC7\u4E24\u500D\u7684buff\u7684\u957F\u5EA6\uFF0C\u4E0D\u8D85\u8FC7\u5C31\u521B\u5EFA\u4E24\u500D\u7684\u6700\u5927\u5BB9\u91CF\u7A7A\u95F4\uFF0C\u8D85\u8FC7\u4E86\u5C31\u521B\u5EFA\u4E24\u500D\u5F53\u524D\u5DF2\u7ECFbuff\u7684\u957F\u5EA6+\u5C06\u8981\u5B58\u50A8\u7684\u6570\u636E\u91CF</p></li></ul><h4 id="coyoteoutputstream-frush\u65B9\u6CD5"><a class="header-anchor" href="#coyoteoutputstream-frush\u65B9\u6CD5" aria-hidden="true">#</a> <code>CoyoteOutputStream#frush</code>\u65B9\u6CD5</h4><p>\u8868\u793A\u4E3B\u52A8\u5C06\u7F13\u51B2\u533A\u4E2D\u7684\u6570\u636E\u53D1\u9001\u5230SendBuf\uFF0C\u4EA4\u7ED9\u7CFB\u7EDF\u53D1\u9001\u51FA\u53BB\uFF0C<code>CoyoteOutputStream#frush</code>\u8C03\u7528<code>OutputBuffer#flush</code></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doFlush</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> realFlush<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>suspended<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    doFlush <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>initial<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5148\u53D1\u9001\u8BF7\u6C42\u5934\uFF0C\u518D\u53D1\u9001\u8BF7\u6C42\u4F53</span>
      coyoteResponse<span class="token punctuation">.</span><span class="token function">sendHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      initial <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cb<span class="token punctuation">.</span><span class="token function">getLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      cb<span class="token punctuation">.</span><span class="token function">flushBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>bb<span class="token punctuation">.</span><span class="token function">getLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8FD9\u91CC\u53EA\u662F\u628A\u4E0A\u5C42\u7F13\u51B2\u533A\u4E2D\u7684\u6570\u636E\u53D1\u9001\u5230\u5E95\u5C42\u7F13\u51B2\u533A\u4E2D\uFF0C\u6240\u4EE5\u6570\u636E\u5230\u5E95\u4F1A\u4E0D\u4F1A\u53D1\u9001\u7ED9socket\u5E76\u4E0D\u786E\u5B9A</span>
      bb<span class="token punctuation">.</span><span class="token function">flushBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
    doFlush <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>realFlush<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u662F\u771F\u6B63flush\uFF0C\u628A\u5E95\u5C42\u7F13\u51B2\u533A\u4E2D\u7684\u6570\u636E\u53D1\u9001\u7ED9socket</span>
    coyoteResponse<span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token class-name">ActionCode</span><span class="token punctuation">.</span>CLIENT_FLUSH<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// If some exception occurred earlier, or if some IOE occurred</span>
    <span class="token comment">// here, notify the servlet with an IOE</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>coyoteResponse<span class="token punctuation">.</span><span class="token function">isExceptionPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ClientAbortException</span><span class="token punctuation">(</span>coyoteResponse<span class="token punctuation">.</span><span class="token function">getErrorException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u903B\u8F91\uFF1A</p><ul><li><p>\u5982\u679C\u975E\u771F\u7684frush\uFF0C\u5C31\u53EA\u662F\u5C06\u5F53\u524D\u7684\u4E00\u7EA7\u7684\u6570\u636E\u79FB\u52A8\u5230\u4E8C\u7EA7</p><ul><li><p>\u5982\u679C\u54CD\u5E94\u5934\u8FD8\u6CA1\u6709\u53D1\u9001\uFF0C\u90A3\u4E48\u5C31\u5148\u53D1\u9001\u54CD\u5E94\u5934</p></li><li><p>\u5982\u679C\u53D1\u9001\u7684\u662F\u5B57\u7B26\u4E32\u7684\u8BDD\uFF0C\u5C31\u6309\u7167\u5B57\u7B26\u4E32\u7684\u65B9\u5F0F\u6765\u53D1\u9001</p></li><li><p>\u5982\u679C\u53D1\u9001\u7684\u662F\u5B57\u8282\u7684\u8BDD\uFF0C\u6309\u7167\u5B57\u8282\u7684\u65B9\u5F0F\u53D1\u9001</p></li></ul></li><li><p>\u5982\u679C\u662F\u771F\u6B63flush\uFF0C\u628A\u5E95\u5C42\u7F13\u51B2\u533A\u4E2D\u7684\u6570\u636E\u53D1\u9001\u7ED9socket</p></li></ul><p>\u89E3\u6790\uFF1A</p><ol><li><code>coyoteResponse.sendHeaders();</code>\u53D1\u9001\u8BF7\u6C42\u5934</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">action</span><span class="token punctuation">(</span><span class="token class-name">ActionCode</span><span class="token punctuation">.</span>COMMIT<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">setCommitted</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u4F7F\u7528\u547D\u4EE4\u6A21\u5F0F\uFF0C\u5C06\u5BF9\u5E94\u7684\u6267\u884C\u64CD\u4F5C\u548C\u6570\u636E\u53D1\u9001\u7ED9\u6267\u884C\u8005</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">action</span><span class="token punctuation">(</span><span class="token class-name">ActionCode</span> actionCode<span class="token punctuation">,</span> <span class="token class-name">Object</span> param<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>hook <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>param <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      hook<span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span>actionCode<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      hook<span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span>actionCode<span class="token punctuation">,</span> param<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+Gn+`" alt="image-20220223153833366"></p><p>\u7136\u540E\u8C03\u7528<code>prepareResponse()</code>\u9884\u5904\u7406\uFF0C\u4E5F\u5C31\u662F\u6574\u5408\u51FA\u54CD\u5E94\u5934</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">prepareResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

  <span class="token keyword">boolean</span> entityBody <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  contentDelimitation <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

  <span class="token class-name">OutputFilter</span><span class="token punctuation">[</span><span class="token punctuation">]</span> outputFilters <span class="token operator">=</span> <span class="token function">getOutputBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFilters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>http09 <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// HTTP/0.9</span>
    <span class="token function">getOutputBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>addActiveFilter
      <span class="token punctuation">(</span>outputFilters<span class="token punctuation">[</span><span class="token class-name">Constants</span><span class="token punctuation">.</span>IDENTITY_FILTER<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u5982\u679C\u662F\u8FD9\u4E9B\u72B6\u6001\uFF0C\u5219\u4E0D\u53D1\u9001\u54CD\u5E94\u4F53</span>
  <span class="token keyword">int</span> statusCode <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>statusCode <span class="token operator">&lt;</span> <span class="token number">200</span> <span class="token operator">||</span> statusCode <span class="token operator">==</span> <span class="token number">204</span> <span class="token operator">||</span> statusCode <span class="token operator">==</span> <span class="token number">205</span> <span class="token operator">||</span>
      statusCode <span class="token operator">==</span> <span class="token number">304</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// No entity body</span>
    <span class="token function">getOutputBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>addActiveFilter
      <span class="token punctuation">(</span>outputFilters<span class="token punctuation">[</span><span class="token class-name">Constants</span><span class="token punctuation">.</span>VOID_FILTER<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    entityBody <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    contentDelimitation <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>statusCode <span class="token operator">==</span> <span class="token number">205</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// RFC 7231 requires the server to explicitly signal an empty</span>
      <span class="token comment">// response in this case</span>
      response<span class="token punctuation">.</span><span class="token function">setContentLength</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      response<span class="token punctuation">.</span><span class="token function">setContentLength</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u5982\u679C\u8BF7\u6C42\u65B9\u6CD5\u662FHEAD\uFF0C\u4E5F\u4E0D\u53D1\u9001\u54CD\u5E94\u4F53</span>
  <span class="token class-name">MessageBytes</span> methodMB <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">method</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>methodMB<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;HEAD&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// No entity body</span>
    <span class="token function">getOutputBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>addActiveFilter
      <span class="token punctuation">(</span>outputFilters<span class="token punctuation">[</span><span class="token class-name">Constants</span><span class="token punctuation">.</span>VOID_FILTER<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    contentDelimitation <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Sendfile support</span>
  <span class="token keyword">boolean</span> sendingWithSendfile <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getEndpoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getUseSendfile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sendingWithSendfile <span class="token operator">=</span> <span class="token function">prepareSendfile</span><span class="token punctuation">(</span>outputFilters<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Check for compression</span>
  <span class="token keyword">boolean</span> isCompressible <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token keyword">boolean</span> useCompression <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>entityBody <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>compressionLevel <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>sendingWithSendfile<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    isCompressible <span class="token operator">=</span> <span class="token function">isCompressible</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isCompressible<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      useCompression <span class="token operator">=</span> <span class="token function">useCompression</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// Change content-length to -1 to force chunking</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>useCompression<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      response<span class="token punctuation">.</span><span class="token function">setContentLength</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token class-name">MimeHeaders</span> headers <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getMimeHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// A SC_NO_CONTENT response may include entity headers</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>entityBody <span class="token operator">||</span> statusCode <span class="token operator">==</span> <span class="token number">204</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> contentType <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getContentType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>contentType <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      headers<span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span>contentType<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">String</span> contentLanguage <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getContentLanguage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>contentLanguage <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      headers<span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Language&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span>contentLanguage<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u5982\u679Cresponse\u4E2D\u6709content-length\uFF0C\u5219\u901A\u8FC7IDENTITY_FILTER\u53D1\u9001</span>
  <span class="token keyword">long</span> contentLength <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getContentLengthLong</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">boolean</span> connectionClosePresent <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>contentLength <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    headers<span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Length&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setLong</span><span class="token punctuation">(</span>contentLength<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">getOutputBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>addActiveFilter
      <span class="token punctuation">(</span>outputFilters<span class="token punctuation">[</span><span class="token class-name">Constants</span><span class="token punctuation">.</span>IDENTITY_FILTER<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    contentDelimitation <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// If the response code supports an entity body and we&#39;re on</span>
    <span class="token comment">// HTTP 1.1 then we chunk unless we have a Connection: close header</span>
    connectionClosePresent <span class="token operator">=</span> <span class="token function">isConnectionClose</span><span class="token punctuation">(</span>headers<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>entityBody <span class="token operator">&amp;&amp;</span> http11 <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>connectionClosePresent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">getOutputBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>addActiveFilter
        <span class="token punctuation">(</span>outputFilters<span class="token punctuation">[</span><span class="token class-name">Constants</span><span class="token punctuation">.</span>CHUNKED_FILTER<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      contentDelimitation <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      headers<span class="token punctuation">.</span><span class="token function">addValue</span><span class="token punctuation">(</span><span class="token class-name">Constants</span><span class="token punctuation">.</span>TRANSFERENCODING<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token class-name">Constants</span><span class="token punctuation">.</span>CHUNKED<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">getOutputBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>addActiveFilter
        <span class="token punctuation">(</span>outputFilters<span class="token punctuation">[</span><span class="token class-name">Constants</span><span class="token punctuation">.</span>IDENTITY_FILTER<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>useCompression<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">getOutputBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addActiveFilter</span><span class="token punctuation">(</span>outputFilters<span class="token punctuation">[</span><span class="token class-name">Constants</span><span class="token punctuation">.</span>GZIP_FILTER<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    headers<span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Encoding&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token string">&quot;gzip&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// If it might be compressed, set the Vary header</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>isCompressible<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ResponseUtil</span><span class="token punctuation">.</span><span class="token function">addVaryFieldName</span><span class="token punctuation">(</span>headers<span class="token punctuation">,</span> <span class="token string">&quot;accept-encoding&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Add date header unless application has already set one (e.g. in a</span>
  <span class="token comment">// Caching Filter)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>headers<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token string">&quot;Date&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    headers<span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span><span class="token string">&quot;Date&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span>
      <span class="token class-name">FastHttpDateFormat</span><span class="token punctuation">.</span><span class="token function">getCurrentDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// FIXME: Add transfer encoding header</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>entityBody<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token operator">!</span>contentDelimitation<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Mark as close the connection after the request, and add the</span>
    <span class="token comment">// connection: close header</span>
    keepAlive <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// This may disabled keep-alive to check before working out the</span>
  <span class="token comment">// Connection header.</span>
  <span class="token function">checkExpectationAndResponseStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// If we know that the request is bad this early, add the</span>
  <span class="token comment">// Connection: close header.</span>
  keepAlive <span class="token operator">=</span> keepAlive <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">statusDropsConnection</span><span class="token punctuation">(</span>statusCode<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>keepAlive<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// socket\u8FDE\u63A5\u4E0D\u518D\u6D3B\u8DC3\u4E86\uFF0C\u4F1A\u5173\u95EDsocket</span>
    <span class="token comment">// Avoid adding the close header twice</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>connectionClosePresent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      headers<span class="token punctuation">.</span><span class="token function">addValue</span><span class="token punctuation">(</span><span class="token class-name">Constants</span><span class="token punctuation">.</span>CONNECTION<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span>
        <span class="token class-name">Constants</span><span class="token punctuation">.</span>CLOSE<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>http11 <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">getErrorState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    headers<span class="token punctuation">.</span><span class="token function">addValue</span><span class="token punctuation">(</span><span class="token class-name">Constants</span><span class="token punctuation">.</span>CONNECTION<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token class-name">Constants</span><span class="token punctuation">.</span>KEEPALIVE<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Build the response header</span>
  <span class="token comment">// \u5148\u53D1\u9001\u534F\u8BAE\u548C\u72B6\u6001 \u6BD4\u5982HTTP/1.1 200 OK</span>
  <span class="token function">getOutputBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sendStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u518D\u53D1\u9001\u54CD\u5E94\u5934\u4E2D\u7684Server</span>
  <span class="token comment">// Add server header</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>server <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Always overrides anything the app might set</span>
    headers<span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span><span class="token string">&quot;Server&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span>server<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>headers<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token string">&quot;Server&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// If app didn&#39;t set the header, use the default</span>
    <span class="token function">getOutputBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token class-name">Constants</span><span class="token punctuation">.</span>SERVER_BYTES<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">int</span> size <span class="token operator">=</span> headers<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">getOutputBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sendHeader</span><span class="token punctuation">(</span>headers<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> headers<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">getOutputBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">endHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5982\u679Cresponse\u4E2D\u6709content-length\uFF0C\u5219\u901A\u8FC7IDENTITY_FILTER\u53D1\u9001</li><li>\u5982\u679CkeepAlive\u662Ffalse\uFF0C\u5C31\u4F1A\u5173\u95ED\u8FDE\u63A5</li></ul><p>\u8C03\u7528<code>getOutputBuffer().commit()</code>\u63D0\u4EA4\u6570\u636E\uFF0C\u8FD9\u91CC\u63D0\u4EA4\u6570\u636E\u5982\u679C\u8BBE\u7F6E\u4E86\u4E8C\u7EA7\u7F13\u51B2\u533A\uFF0C\u90A3\u4E48\u5C31\u4F1A\u53D1\u9001\u5230\u4E8C\u7EA7\u7F13\u51B2\u533A\uFF0C\u5982\u679C\u6CA1\u6709\u8BBE\u7F6E\uFF0C\u5C31\u4F1A\u76F4\u63A5\u53D1\u9001\u5230SendBuf\uFF0C\u4EA4\u7ED9\u64CD\u4F5C\u7CFB\u7EDF\u53D1\u9001socket\u6570\u636E</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>

    <span class="token comment">// The response is now committed</span>
    committed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    response<span class="token punctuation">.</span><span class="token function">setCommitted</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>pos <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Sending the response header buffer</span>
        <span class="token comment">// \u5982\u679C\u7528\u4E86socketbuffer\u5219\u5199\u5199\u5230socketbuffer\u4E2D\uFF0C\u5982\u679C\u6CA1\u6709\u5219\u76F4\u63A5\u901A\u8FC7socketoutputstream\u8FD4\u56DE</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>useSocketBuffer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            socketBuffer<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> pos<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            outputStream<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> pos<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><code>bb.flushBuffer()</code>\u8C03\u7528\u5B57\u7B26\u4E32\u6216\u8005\u5B57\u8282\u53D1\u9001\u6570\u636E</li></ol><p>\u63A5\u7740\u8C03\u7528<code>OutputBuffer#realWriteBytes</code>\u65B9\u6CD5\uFF0C\u63A5\u7740\u8C03\u7528<code>coyoteResponse.doWrite(outputChunk)</code>\u53D1\u9001\u6570\u636E</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doWrite</span><span class="token punctuation">(</span><span class="token class-name">ByteChunk</span> chunk<span class="token punctuation">)</span>
        <span class="token keyword">throws</span> <span class="token class-name">IOException</span>
<span class="token punctuation">{</span>
  <span class="token comment">// \u628Achunk\u4E2D\u7684\u6570\u636E\u5199\u5165InternalOutputBuffer</span>
  outputBuffer<span class="token punctuation">.</span><span class="token function">doWrite</span><span class="token punctuation">(</span>chunk<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  contentWritten<span class="token operator">+=</span>chunk<span class="token punctuation">.</span><span class="token function">getLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>outputBuffer.doWrite(chunk, this)</code>\u4F1A\u6839\u636E\u4E0D\u540C\u7684\u6253\u5305\u65B9\u5F0F\u6765\u53D1\u9001\u6570\u636E</p><p><img src="`+Kn+'" alt="image-20220223161121862"></p><p><img src="'+Yn+'" alt="image-20220223162225511"></p><p>\u6700\u540E\u4F1A\u8C03\u7528socket\u7684\u672C\u5730\u65B9\u6CD5\u53D1\u9001\u6570\u636E</p><p><img src="'+Xn+'" alt="image-20220223162809888"></p><p><img src="'+$n+'" alt="image-20220223170841612"></p><h2 id="bio\u7684\u6574\u4E2A\u6D41\u7A0B\u603B\u7ED3"><a class="header-anchor" href="#bio\u7684\u6574\u4E2A\u6D41\u7A0B\u603B\u7ED3" aria-hidden="true">#</a> BIO\u7684\u6574\u4E2A\u6D41\u7A0B\u603B\u7ED3</h2><p>Tomcat\u7684\u542F\u52A8\u7684\u8BDD\uFF0C\u53EF\u4EE5\u6309\u7167server.xml\u7684\u5C42\u7EA7\u6765\u7406\u89E3\uFF0C\u56E0\u4E3Aserver.xml\u5DF2\u7ECF\u628ATomcat\u7684\u4E00\u4E9B\u57FA\u672C\u7684\u7ED3\u6784\u90FD\u5DF2\u7ECF\u5217\u4E3E\u51FA\u6765\u4E86</p><p>\u5148\u6709\u4E00\u4E2AService\uFF0C\u7136\u540E\u8C03\u7528\u4E00\u4E9BConnector\u7684\u65B9\u6CD5\u6765\u542F\u52A8\uFF0CConnector\u7C7B\u89C4\u5B9A\u89E3\u6790\u4EA4\u4E92\u7684\u534F\u8BAE\u3001\u7AEF\u53E3\u7B49\u5C5E\u6027\uFF0C\u7136\u540E\u8C03\u7528<code>startInternal</code>\u542F\u52A8\uFF0C\u5E76\u5728\u6700\u540E\u8C03\u7528<code>endPoint.start</code>\u65B9\u6CD5\uFF0CendPoint\u6709\u4E09\u4E2A\u5B9E\u73B0\u7C7B</p><p><img src="'+Zn+`" alt="image-20220223171848865"></p><p>\u4E4B\u524D\u7684BIO\u4E00\u76F4\u5C31\u662FJIO\u65B9\u5F0F\u7684EndPoint\uFF0C\u6240\u4EE5\u5C31\u4F1A\u6267\u884C\u5230<code>JIoEndPoint#startInternal</code>\uFF0C\u5982\u679C\u6CA1\u6709\u521B\u5EFA\u7EBF\u7A0B\u6C60\u7684\u8BDD\uFF0C\u5C31\u4F1A\u521B\u5EFA\u6700\u5C0F10\u4E2A\u7EBF\u7A0B\u3001\u6700\u5927200\u7EBF\u7A0B\u7684\u7EBF\u7A0B\u6C60</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">startInternal</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>running<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        running <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        paused <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

        <span class="token comment">// Create worker collection</span>
        <span class="token comment">// \u5982\u679C\u914D\u7F6E\u6587\u4EF6\u91CC\u6CA1\u6709\u914D\u7F6E\u7EBF\u7A0B\u6C60\uFF0C\u90A3\u4E48\u5C06\u521B\u5EFA\u4E00\u4E2A\u9ED8\u8BA4\u7684</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">createExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token function">initializeConnectionLatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">startAcceptorThreads</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Start async timeout thread</span>
        <span class="token class-name">Thread</span> timeoutThread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AsyncTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;-AsyncTimeout&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        timeoutThread<span class="token punctuation">.</span><span class="token function">setPriority</span><span class="token punctuation">(</span>threadPriority<span class="token punctuation">)</span><span class="token punctuation">;</span>
        timeoutThread<span class="token punctuation">.</span><span class="token function">setDaemon</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        timeoutThread<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>BIO\u4E00\u4E2A\u8FDE\u63A5\u8FC7\u6765\u5C31\u4EA4\u7ED9\u4E00\u4E2A\u7EBF\u7A0B\u5904\u7406\uFF0C\u8C03\u7528<code>startAcceptorThreads</code></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">startAcceptorThreads</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token function">getAcceptorThreadCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  acceptors <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Acceptor</span><span class="token punctuation">[</span>count<span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    acceptors<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">createAcceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> threadName <span class="token operator">=</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;-Acceptor-&quot;</span> <span class="token operator">+</span> i<span class="token punctuation">;</span>
    acceptors<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">setThreadName</span><span class="token punctuation">(</span>threadName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Thread</span> t <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>acceptors<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> threadName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    t<span class="token punctuation">.</span><span class="token function">setPriority</span><span class="token punctuation">(</span><span class="token function">getAcceptorThreadPriority</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    t<span class="token punctuation">.</span><span class="token function">setDaemon</span><span class="token punctuation">(</span><span class="token function">getDaemon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    t<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u524D\u9762\u67E5\u770B\u6E90\u7801\u7684\u65F6\u5019\uFF0C\u53EF\u4EE5\u77E5\u9053<code>Acceptor</code>\u4E3B\u8981\u7528\u6765\u5904\u7406\u8BF7\u6C42\u7684\uFF0C\u8C03\u7528<code>Acceptor#run</code>\u65B9\u6CD5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">int</span> errorDelay <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token comment">// Loop until we receive a shutdown command</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>running<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token comment">// Loop if endpoint is paused</span>
        <span class="token comment">// \u5982\u679CEndpoint\u4ECD\u7136\u5728\u8FD0\u884C\uFF0C\u4F46\u662F\u88AB\u6682\u505C\u4E86\uFF0C\u90A3\u4E48\u5C31\u65E0\u9650\u5FAA\u73AF\uFF0C\u4ECE\u800C\u4E0D\u80FD\u63A5\u53D7\u8BF7\u6C42</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>paused <span class="token operator">&amp;&amp;</span> running<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            state <span class="token operator">=</span> <span class="token class-name">AcceptorState</span><span class="token punctuation">.</span>PAUSED<span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// Ignore</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>running<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        state <span class="token operator">=</span> <span class="token class-name">AcceptorState</span><span class="token punctuation">.</span>RUNNING<span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">//if we have reached max connections, wait</span>
            <span class="token comment">//\u8FBE\u5230\u4E86\u6700\u5927\u8FDE\u63A5\u6570\u9650\u5236\u5219\u7B49\u5F85</span>
            <span class="token function">countUpOrAwaitConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">Socket</span> socket <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>  <span class="token comment">// bio\uFF0Cnio</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token comment">// Accept the next incoming connection from the server</span>
                <span class="token comment">// bio socket</span>
                <span class="token comment">// \u6B64\u5904\u662F\u963B\u585E\u7684\uFF0C\u90A3\u4E48running\u5C5E\u6027\u5C31\u7B97\u5DF2\u7ECF\u88AB\u6539\u6210false\uFF0C\u90A3\u4E48\u600E\u4E48\u8FDB\u5165\u5230\u4E0B\u4E00\u6B21\u5FAA\u73AF\u5462\uFF1F</span>
                socket <span class="token operator">=</span> serverSocketFactory<span class="token punctuation">.</span><span class="token function">acceptSocket</span><span class="token punctuation">(</span>serverSocket<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u63A5\u6536\u5230\u4E86\u4E00\u4E2Asocket\u8FDE\u63A5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> ioe<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">countDownConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// Introduce delay if necessary</span>
                errorDelay <span class="token operator">=</span> <span class="token function">handleExceptionWithDelay</span><span class="token punctuation">(</span>errorDelay<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// re-throw</span>
                <span class="token keyword">throw</span> ioe<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// Successful accept, reset the error delay</span>
            errorDelay <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

            <span class="token comment">// Configure the socket</span>
            <span class="token comment">// \u5982\u679CEndpoint\u6B63\u5728\u8FD0\u884C\u5E76\u4E14\u6CA1\u6709\u88AB\u6682\u505C\uFF0C\u90A3\u4E48\u5C31\u5904\u7406\u8BE5socket</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>running <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>paused <span class="token operator">&amp;&amp;</span> <span class="token function">setSocketOptions</span><span class="token punctuation">(</span>socket<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// Hand this socket off to an appropriate processor</span>
                <span class="token comment">// socket\u88AB\u6B63\u5E38\u7684\u4EA4\u7ED9\u4E86\u7EBF\u7A0B\u6C60\uFF0CprocessSocket\u5C31\u4F1A\u8FD4\u56DEtrue</span>
                <span class="token comment">// \u5982\u679C\u6CA1\u6709\u88AB\u4EA4\u7ED9\u7EBF\u7A0B\u6C60\u6216\u8005\u4E2D\u9014Endpoint\u88AB\u505C\u6B62\u4E86\uFF0C\u5219\u8FD4\u56DEfalse</span>
                <span class="token comment">// \u8FD4\u56DEfalse\u5219\u5173\u95ED\u8BE5socket</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">processSocket</span><span class="token punctuation">(</span>socket<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">countDownConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">// Close socket right away</span>
                    <span class="token function">closeSocket</span><span class="token punctuation">(</span>socket<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token function">countDownConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// Close socket right away</span>
                <span class="token function">closeSocket</span><span class="token punctuation">(</span>socket<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>running<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;endpoint.accept.fail&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NullPointerException</span> npe<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>running<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;endpoint.accept.fail&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> npe<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">ExceptionUtils</span><span class="token punctuation">.</span><span class="token function">handleThrowable</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;endpoint.accept.fail&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    state <span class="token operator">=</span> <span class="token class-name">AcceptorState</span><span class="token punctuation">.</span>ENDED<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8C03\u7528<code>processSocket</code>\u65B9\u6CD5\uFF0C\u5728<code>processSocket</code>\u65B9\u6CD5\u4E2D\u6267\u884C<code>getExecutor().execute(new SocketProcessor(wrapper));</code></p><p>\u63A5\u7740\u8C03\u7528<code>state = handler.process(socket,status);</code>\u5176\u4E2Dhandler\u662FAbstractProtocol</p><p>\u63A5\u7740\u662F<code>state = processor.process(wrapper);</code>\u5176\u4E2Dprocessor\u662FAbstractHttp11Processor</p><p>\u63A5\u7740\u662F<code>adapter.service(request, response); // \u4EA4\u7ED9\u5BB9\u5668\u5904\u7406\u8BF7\u6C42</code>adapter\u662FCoyoteAdapter</p><p>\u63A5\u7740\u662F<code>connector.getService().getContainer().getPipeline().getFirst().invoke(request, response);</code>\u8C03\u7528\u5BB9\u5668\u5904\u7406</p><p><img src="`+Qn+`" alt="image-20220223222904771"></p><h2 id="nio\u5904\u7406\u8BF7\u6C42\u6E90\u7801\u5B9E\u73B0"><a class="header-anchor" href="#nio\u5904\u7406\u8BF7\u6C42\u6E90\u7801\u5B9E\u73B0" aria-hidden="true">#</a> nio\u5904\u7406\u8BF7\u6C42\u6E90\u7801\u5B9E\u73B0</h2><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> NIO\u662F\u975E\u963B\u585E\u7684\uFF0C\u90A3\u4E9B\u5730\u65B9\u5462\uFF1F</span>
\u63A5\u6536socket\uFF0C\u8BFB\u5199socket
<span class="token title important"><span class="token punctuation">#</span> tomcat7\u4E2D\u662F\u5982\u4F55\u4F7F\u7528\u7684\u5462\uFF1F</span>
\u53EA\u6709\u5728\u63A5\u6536socket\u662F\u963B\u585E\u7684\uFF1B
\u8BFB\u53D6\u6570\u636E\u7684\u65F6\u5019\uFF1A
<span class="token list punctuation">-</span> \u8BFB\u53D6\u8BF7\u6C42\u884C\u3001\u8BF7\u6C42\u5934\u662F\u975E\u963B\u585E\u7684\uFF0C\u8BFB\u53D6\u8BF7\u6C42\u4F53\u662F\u963B\u585E\u7684
\u54CD\u5E94\u7684\u65F6\u5019\uFF1A
<span class="token list punctuation">-</span> \u963B\u585E\u7684
<span class="token title important"><span class="token punctuation">#</span> \u65E2\u7136Tomcat7\u5DF2\u7ECF\u5B9E\u73B0\u4E86NIO\uFF0C\u90A3\u4E3A\u4EC0\u4E48\u4E0D\u5168\u90E8\u5B9E\u73B0\u975E\u963B\u585E\u65B9\u5F0F</span>
\u8DDFservlet\u89C4\u8303\u6709\u5173\u7CFB\u7684\uFF0CTomcat7\u5B9E\u73B0\u7684servlet3.0\u7248\u672C\uFF1Btomcat8\u4E4B\u540E\u624D\u5B9E\u73B0servlet3.1\u89C4\u8303\uFF0C\u800Cservelet3.0\u4EE5\u53CA\u4EE5\u524D\u8BFB\u53D6\u6570\u636E\u662F\u901A\u8FC7inputStream.read\u65B9\u5F0F\u8BFB\u53D6\u7684
<span class="token code"><span class="token punctuation">\`\`\`</span><span class="token code-language">java</span>
<span class="token code-block language-java language-java language-java"><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>n<span class="token operator">=</span>inputStream<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token function">sout</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>bytes<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></span>
<span class="token punctuation">\`\`\`</span></span>
\u5728NIO\u4E2D\uFF0C\u5982\u679C\u60F3\u8981\u975E\u963B\u585E\u7684\u65B9\u5F0F\u8BFB\u53D6\u6570\u636E\uFF0C\u5C31\u8981\u5C06socketchannel\u5728selector\u6CE8\u518C\u4E00\u4E2A\u8BFB\u4E8B\u4EF6\uFF0C\u7136\u540E\u5C31\u9700\u8981\u6709\u4E00\u4E2A\u5355\u72EC\u7684\u7EBF\u7A0B\u4E0D\u505C\u7684while\u8F6E\u8BE2\u67E5\u770B\u6240\u6709\u7684\u901A\u9053\u4E0A\u6709\u6CA1\u6709\u5C31\u7EEA\u4E8B\u4EF6\uFF0C\u7136\u540E\u5728\u901A\u8FC7socketchannel.read()\u8BFB\u53D6\u6570\u636E\uFF0C\u4F2A\u4EE3\u7801\u5927\u6982\u662F
<span class="token code"><span class="token punctuation">\`\`\`</span><span class="token code-language">java</span>
<span class="token code-block language-java language-java language-java">selector<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>socketchannel<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>selector<span class="token punctuation">.</span><span class="token function">event</span><span class="token punctuation">(</span>socketchannel<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		socketchannel<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		socketchannel<span class="token operator">=</span>selector<span class="token punctuation">.</span><span class="token function">nextChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span></span>
<span class="token punctuation">\`\`\`</span></span>
\u90A3\u4E48\uFF0C\u51FA\u73B0\u7684\u95EE\u9898\u5C31\u662F\uFF0C\u600E\u4E48\u4F7F\u7528NIO\u963B\u585E\u7684\u8BFB\u53D6\u6570\u636E\u5462\uFF1F
Tomcat\u4E2D\u662F\u901A\u8FC7\u4E3B\u526FSelector\u6765\u5B9E\u73B0\u7684\uFF0C\u4E3Bselector\u7528\u6765\u6CE8\u518Csocketchannel\uFF0C\u8F85\u52A9selector\u4E5F\u662F\u6CE8\u518Csocketchannel\uFF0C\u4F46\u662F\u6709\u4E00\u4E2A\u7EBF\u7A0BPoller\u914D\u5408\u4E0D\u65AD\u7684while\u67E5\u770B\u662F\u5426\u6709\u5C31\u7EEA\u4E8B\u4EF6
<span class="token list punctuation">1.</span> \u5C1D\u8BD5\u8C03\u7528socketchannel.read()\u770B\u80FD\u4E0D\u80FD\u8BFB\u53D6\u5230\u6570\u636E\uFF0C\u5982\u679C\u80FD\u8BFB\u53D6\u5230\uFF0C\u76F4\u63A5\u8FD4\u56DE
<span class="token list punctuation">2.</span> \u6CE8\u518C\u4E00\u4E2A\u8BFB\u4E8B\u4EF6
<span class="token list punctuation">3.</span> \u52A0\u9501\uFF0C\u5BFC\u81F4read\u65B9\u6CD5\u963B\u585E\uFF0C\u5F53Poller\u53D1\u73B0\u6709\u5C31\u7EEA\u4E8B\u4EF6\u7684\u65F6\u5019\uFF0C\u5C31\u4F1A\u89E3\u9501\uFF0C\u52A0\u9501\u4E3B\u8981\u662F\u4E3A\u4E86\u963B\u585E
<span class="token list punctuation">4.</span> socketchannel.read()\u8BFB\u53D6\u6570\u636E
\u6240\u4EE5\u5305\u542B\u6709\u7684\u7C7B\u6709\uFF1A
Selector
Poller
PollerEvents
NioChannel\uFF0C\u4E5F\u5C31\u662F\u5BF9\u8C61socketChannel
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u4E4B\u524D\u6211\u4EEC\u8BF4\uFF0CTomcat\u4ECERecvBuf\u83B7\u53D6\u6570\u636E\u7684\u65F6\u5019\uFF0C\u662F\u4F7F\u7528fill()\u51FD\u6570\u6765\u83B7\u53D6\u7684\uFF0C\u5F53Tomcat\u770B\u81EA\u5DF1\u7684\u7F13\u51B2\u533A\u4E2D\u6CA1\u6709\u6570\u636E\u7684\u65F6\u5019\uFF0C\u5C31\u4F1A\u53BB\u83B7\u53D6RecvBuf\u4E2D\u7684\u6570\u636E\u5230\u7F13\u51B2\u533A\u4E2D\uFF0C\u8FD9\u662FBIO\u7684\u6D41\u7A0B\uFF0C\u8FD9\u4E2A\u83B7\u53D6\u7684\u8FC7\u7A0B\u662F\u963B\u585E\u7684\uFF0C\u53EA\u6709\u83B7\u53D6\u5230\u6570\u636E\u624D\u4F1A\u8FD4\u56DE</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">boolean</span> <span class="token function">fill</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> block<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>

    <span class="token keyword">int</span> nRead <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>parsingHeader<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token comment">// \u5982\u679C\u8FD8\u5728\u89E3\u6790\u8BF7\u6C42\u5934\uFF0ClastValid\u8868\u793A\u5F53\u524D\u89E3\u6790\u6570\u636E\u7684\u4E0B\u6807\u4F4D\u7F6E\uFF0C\u5982\u679C\u8BE5\u4F4D\u7F6E\u7B49\u4E8Ebuf\u7684\u957F\u5EA6\u4E86\uFF0C\u8868\u793A\u8BF7\u6C42\u5934\u7684\u6570\u636E\u8D85\u8FC7buf\u4E86\u3002</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>lastValid <span class="token operator">==</span> buf<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span>
                <span class="token punctuation">(</span>sm<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;iib.requestheadertoolarge.error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// \u4ECEinputStream\u4E2D\u8BFB\u53D6\u6570\u636E\uFF0Clen\u8868\u793A\u8981\u8BFB\u53D6\u7684\u6570\u636E\u957F\u5EA6\uFF0Cpos\u8868\u793A\u628A\u4ECEinputStream\u8BFB\u5230\u7684\u6570\u636E\u653E\u5728buf\u7684pos\u4F4D\u7F6E</span>
        <span class="token comment">// nRead\u8868\u793A\u771F\u5B9E\u8BFB\u53D6\u5230\u7684\u6570\u636E</span>
        nRead <span class="token operator">=</span> inputStream<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> pos<span class="token punctuation">,</span> buf<span class="token punctuation">.</span>length <span class="token operator">-</span> lastValid<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nRead <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            lastValid <span class="token operator">=</span> pos <span class="token operator">+</span> nRead<span class="token punctuation">;</span> <span class="token comment">// \u79FB\u52A8lastValid</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5F53\u8BFB\u53D6\u8BF7\u6C42\u4F53\u7684\u6570\u636E\u65F6</span>
        <span class="token comment">// buf.length - end\u8868\u793A\u8FD8\u80FD\u5B58\u653E\u591A\u5C11\u8BF7\u6C42\u4F53\u6570\u636E\uFF0C\u5982\u679C\u5C0F\u4E8E4500\uFF0C\u90A3\u4E48\u5C31\u65B0\u751F\u6210\u4E00\u4E2Abyte\u6570\u7EC4\uFF0C\u8FD9\u4E2A\u65B0\u7684\u6570\u7EC4\u4E13\u95E8\u7528\u6765\u76DB\u653E\u8BF7\u6C42\u4F53</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>buf<span class="token punctuation">.</span>length <span class="token operator">-</span> end <span class="token operator">&lt;</span> <span class="token number">4500</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// In this case, the request header was really large, so we allocate a</span>
            <span class="token comment">// brand new one; the old one will get GCed when subsequent requests</span>
            <span class="token comment">// clear all references</span>
            buf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span>buf<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>
            end <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        pos <span class="token operator">=</span> end<span class="token punctuation">;</span>
        lastValid <span class="token operator">=</span> pos<span class="token punctuation">;</span>
        nRead <span class="token operator">=</span> inputStream<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> pos<span class="token punctuation">,</span> buf<span class="token punctuation">.</span>length <span class="token operator">-</span> lastValid<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nRead <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            lastValid <span class="token operator">=</span> pos <span class="token operator">+</span> nRead<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token punctuation">(</span>nRead <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u90A3\u4E48NIO\u4EC0\u4E48\u65F6\u5019\u8C03\u7528fill\u65B9\u6CD5\u5462\uFF0C\u548CBIO\u7684\u8C03\u7528\u65B9\u6CD5\u4E00\u6837\u5417\uFF1F</p><blockquote><p>\u89C6\u9891\u6559\u7A0B\u662F\u8FD9\u4E48\u8BF4\u7684\uFF1A\u5E94\u8BE5\u662F\u53CD\u8FC7\u6765\uFF0CRecvBuf\u4E2D\u6709\u6570\u636E\u7684\u8BDD\uFF0C\u5C31\u8DDFTomcat\u8BF4\u4E00\u53E5\uFF0C\u8BA9Tomcat\u8C03\u7528fill\u65B9\u6CD5\uFF08\u8FC7\u6765\u53D6\u6570\u636E\uFF09</p><p>\u4F46\u662FNIO\u5E94\u8BE5\u662F\uFF1A\u7ED9\u4EFB\u52A1\u4E4B\u540E\uFF0C\u7136\u540E\u9694\u6BB5\u65F6\u95F4\u6765\u5FAA\u73AF\u662F\u5426\u5B8C\u6210\u624D\u662F</p></blockquote><p>\u5BF9\u4E8ETomcat\u6765\u8BF4\uFF0C\u4E0D\u7BA1\u662F\u4F7F\u7528BIO\u8FD8\u662FNIO\uFF0C\u5F53\u6211\u4EEC\u83B7\u53D6\u6570\u636E\u7684\u65F6\u5019\uFF0C\u90FD\u662F\u901A\u8FC7<code>inputStream.read()</code></p><p><img src="`+ns+`" alt="image-20220223230818607"></p><p>\u8FD9\u4E2A<code>inputStream.read</code>\u65B9\u6CD5\u5C31\u662F\u963B\u585E\u8BFB\u53D6\u7684</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> tomcat7\u4E2D\u5728\u5904\u7406\u8BF7\u6C42\u4F53\u548C\u54CD\u5E94\u4F53\u7684\u65F6\u5019\uFF0C\u662F\u963B\u585E\u7684\uFF1B\u800C\u8BF7\u6C42\u884C\u548C\u8BF7\u6C42\u5934\u662FNIO\u65B9\u5F0F\u53BB\u5904\u7406\u7684</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote><p><img src="`+ss+'" alt="image-20220224155519552"></p><p><code>NioEndPoint</code>\u4E2D\u7684\u7C7B<code>Acceptor</code>\u7528\u6765\u83B7\u53D6RecvBuf\u4E2D\u7684\u6570\u636E\uFF0C<code>serverSock.accept()</code>\u5C31\u662F\u4EE5\u963B\u585E\u7684\u65B9\u5F0F\u6765\u83B7\u53D6socket\u8FDE\u63A5\uFF0C\u53EA\u6709\u7B49\u5F85\u5230socket\u8FDE\u63A5\uFF0C\u624D\u80FD\u5F00\u59CB\u5904\u7406socket\u7684\u6570\u636E\uFF0C\u63A5\u7740\u5904\u7406socket\u6570\u636E\uFF0CNIO\u5C31\u4E0D\u662F\u963B\u585E\u4E86</p><p><img src="'+as+`" alt="image-20220223232309188"></p><p>\u8C03\u7528<code>setSocketOptions</code>\u65B9\u6CD5\uFF0C<code>socket.configureBlocking(false)</code>\u8BBE\u7F6E\u4E0D\u963B\u585E\u8BFB\u53D6\u6570\u636E\uFF0C\u6240\u4EE5\u4ECE\u8FD9\u91CC\u5F00\u59CB\u624D\u662F\u975E\u963B\u585E\u7684</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">boolean</span> <span class="token function">setSocketOptions</span><span class="token punctuation">(</span><span class="token class-name">SocketChannel</span> socket<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Process the connection</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">//disable blocking, APR style, we are gonna be polling it</span>
        <span class="token comment">// \u4ECE\u8BE5channel\u4E0A\u8BFB\u53D6\u6570\u636E\u4E0D\u963B\u585E</span>
        socket<span class="token punctuation">.</span><span class="token function">configureBlocking</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Socket</span> sock <span class="token operator">=</span> socket<span class="token punctuation">.</span><span class="token function">socket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        socketProperties<span class="token punctuation">.</span><span class="token function">setProperties</span><span class="token punctuation">(</span>sock<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u6BCF\u63A5\u6536\u5230\u4E00\u4E2Asocket\u8FDE\u63A5\u5C31\u83B7\u53D6\u4E00\u4E2ANioChannel\u6765\u5C01\u88C5\u8FD9\u4E2Asocket\uFF0CNioChannel\u662F\u53EF\u91CD\u7528\u7684\u5BF9\u8C61</span>
        <span class="token class-name">NioChannel</span> channel <span class="token operator">=</span> nioChannels<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u62FF\u51FA\u5BF9\u5934\u7684NioChannel</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span> channel <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// SSL setup</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>sslContext <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">SSLEngine</span> engine <span class="token operator">=</span> <span class="token function">createSSLEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">int</span> appbufsize <span class="token operator">=</span> engine<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getApplicationBufferSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">NioBufferHandler</span> bufhandler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NioBufferHandler</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>appbufsize<span class="token punctuation">,</span>socketProperties<span class="token punctuation">.</span><span class="token function">getAppReadBufSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                                                   <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>appbufsize<span class="token punctuation">,</span>socketProperties<span class="token punctuation">.</span><span class="token function">getAppWriteBufSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                                                   socketProperties<span class="token punctuation">.</span><span class="token function">getDirectBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                channel <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SecureNioChannel</span><span class="token punctuation">(</span>socket<span class="token punctuation">,</span> engine<span class="token punctuation">,</span> bufhandler<span class="token punctuation">,</span> selectorPool<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// normal tcp setup</span>
                <span class="token class-name">NioBufferHandler</span> bufhandler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NioBufferHandler</span><span class="token punctuation">(</span>socketProperties<span class="token punctuation">.</span><span class="token function">getAppReadBufSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                                                   socketProperties<span class="token punctuation">.</span><span class="token function">getAppWriteBufSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                                                   socketProperties<span class="token punctuation">.</span><span class="token function">getDirectBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                channel <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NioChannel</span><span class="token punctuation">(</span>socket<span class="token punctuation">,</span> bufhandler<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            channel<span class="token punctuation">.</span><span class="token function">setIOChannel</span><span class="token punctuation">(</span>socket<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span> channel <span class="token keyword">instanceof</span> <span class="token class-name">SecureNioChannel</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">SSLEngine</span> engine <span class="token operator">=</span> <span class="token function">createSSLEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">SecureNioChannel</span><span class="token punctuation">)</span>channel<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span>engine<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                channel<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u6BCF\u63A5\u6536\u5230\u4E00\u4E2A\u65B0socket\u8FDE\u63A5\uFF0C\u5C31\u4F1A\u83B7\u53D6\u5230\u4E00\u4E2APoller</span>
        <span class="token function">getPoller0</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>channel<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ExceptionUtils</span><span class="token punctuation">.</span><span class="token function">handleThrowable</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> tt<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">ExceptionUtils</span><span class="token punctuation">.</span><span class="token function">handleThrowable</span><span class="token punctuation">(</span>tt<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// Tell to close the socket</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>getPoller0().register(channel);</code>\uFF0C\u6BCF\u63A5\u6536\u5230\u4E00\u4E2A\u65B0socket\u8FDE\u63A5\uFF0C\u5C31\u4F1A\u83B7\u53D6\u5230\u4E00\u4E2APoller\uFF0C\u5E76\u5C06\u901A\u9053\u6CE8\u518C\u5230Poller\uFF0C\u5F53\u6709\u65B0\u7684\u6570\u636E\u7684\u65F6\u5019\uFF0CSelector\u5C31\u4F1A\u901A\u8FC7\u76D1\u542C\u4E8B\u4EF6\u6765\u83B7\u77E5\uFF0C\u867D\u7136\u53EF\u4EE5\u901A\u8FC7\u4E00\u4E2ASelector\u6765\u5904\u7406\u6240\u6709\u7684socketChannel\uFF0C\u4F46\u662F\u901A\u8FC7\u4E00\u4E2ASelector\uFF0C\u53EF\u80FD\u4F1A\u67E5\u8BE2\u5230\u591A\u4E2A\u5C31\u7EEA\u4E8B\u4EF6\uFF0C\u5C31\u4F1A\u5BFC\u81F4\u7B49\u5F85\u7684\u53D1\u751F\uFF0C\u6240\u4EE5\u6709\u591A\u4E2APoller</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> Poller\u662F\u4E00\u4E2A\u7EBF\u7A0B\uFF0Cevents\u4E2D\u7684\u4E5F\u662F\u7EBF\u7A0B</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Poller\u672C\u6765\u662F\u5E94\u8BE5\u4E0D\u65AD\u7684\u67E5\u8BE2Selector\u4E2D\u662F\u5426\u5DF2\u7ECF\u6709\u5C31\u7EEA\u4E8B\u4EF6\u7684\uFF0C\u67E5\u8BE2\u4E8B\u4EF6\u7684\u524D\u63D0\u7684\u5C31\u662F\u9700\u8981\u5148\u53BB\u6CE8\u518C\u4E8B\u4EF6\uFF0C\u67E5\u8BE2\u5230\u4E8B\u4EF6\u5C31\u56DE\u53BB\u8BFB\u53D6\u6570\u636E</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Loop until destroy() is called</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// Loop if endpoint is paused</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>paused <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token operator">!</span>close<span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// Ignore</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">boolean</span> hasEvents <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

            <span class="token comment">// Time to terminate?</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>close<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">events</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">timeout</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    selector<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> ioe<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>
                            <span class="token string">&quot;endpoint.nio.selectorCloseFail&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ioe<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u6267\u884CPollerEvent\u4E8B\u4EF6\uFF0C\u5411Selector\u6CE8\u518C\u8BFB\u5199\u4E8B\u4EF6</span>
                hasEvents <span class="token operator">=</span> <span class="token function">events</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u771F\u6B63\u7684\u5411selector\u6CE8\u518C</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">!</span>close <span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>wakeupCounter<span class="token punctuation">.</span><span class="token function">getAndSet</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token comment">//if we are here, means we have other stuff to do</span>
                        <span class="token comment">//do a non blocking select</span>
                        <span class="token comment">// \u4E0A\u9762\u7684events()\u4F1A\u53BB\u6CE8\u518C\u4E8B\u4EF6\uFF0C\u800C\u8FD9\u91CC\u662F\u53BB\u67E5\u8BE2\u662F\u5426\u6709\u4E8B\u4EF6\u5C31\u7EEA</span>
                        <span class="token comment">// \u4E0D\u963B\u585E</span>
                        keyCount <span class="token operator">=</span> selector<span class="token punctuation">.</span><span class="token function">selectNow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        <span class="token comment">// \u963B\u585E\uFF0C\u8D85\u65F6\u4F1A\u7EE7\u7EED\u6267\u884C\u4E0B\u9762\u7684\u4EE3\u7801\uFF0C\u4E0D\u4F1A\u62A5\u9519</span>
                        keyCount <span class="token operator">=</span> selector<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>selectorTimeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    wakeupCounter<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>close<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">events</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">timeout</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        selector<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> ioe<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>
                                <span class="token string">&quot;endpoint.nio.selectorCloseFail&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ioe<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span> <span class="token class-name">NullPointerException</span> x <span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//sun bug 5076772 on windows JDK 1.5</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span> log<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Possibly encountered sun bug 5076772 on windows JDK 1.5&quot;</span><span class="token punctuation">,</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span> wakeupCounter <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> selector <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token punctuation">)</span> <span class="token keyword">throw</span> x<span class="token punctuation">;</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span> <span class="token class-name">CancelledKeyException</span> x <span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//sun bug 5076772 on windows JDK 1.5</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span> log<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Possibly encountered sun bug 5076772 on windows JDK 1.5&quot;</span><span class="token punctuation">,</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span> wakeupCounter <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> selector <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token punctuation">)</span> <span class="token keyword">throw</span> x<span class="token punctuation">;</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">ExceptionUtils</span><span class="token punctuation">.</span><span class="token function">handleThrowable</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
                log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//either we timed out or we woke up, process events first</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span> keyCount <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">)</span> hasEvents <span class="token operator">=</span> <span class="token punctuation">(</span>hasEvents <span class="token operator">|</span> <span class="token function">events</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// \u5982\u679C\u5B58\u5728\u5C31\u7EEA\u4E8B\u4EF6\uFF0C\u90A3\u4E48\u5219\u904D\u5386\u5E76\u5904\u7406\u4E8B\u4EF6</span>
            <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SelectionKey</span><span class="token punctuation">&gt;</span></span> iterator <span class="token operator">=</span>
                keyCount <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> selector<span class="token punctuation">.</span><span class="token function">selectedKeys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token comment">// Walk through the collection of ready keys and dispatch</span>
            <span class="token comment">// any active event.</span>
            <span class="token comment">// \u5FAA\u73AF\u5904\u7406\u5F53\u524D\u5C31\u7EEA\u7684\u4E8B\u4EF6</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>iterator <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> iterator<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">SelectionKey</span> sk <span class="token operator">=</span> iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">KeyAttachment</span> attachment <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">KeyAttachment</span><span class="token punctuation">)</span>sk<span class="token punctuation">.</span><span class="token function">attachment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// Attachment may be null if another thread has called</span>
                <span class="token comment">// cancelledKey()</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>attachment <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    iterator<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    attachment<span class="token punctuation">.</span><span class="token function">access</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    iterator<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">// \u5904\u7406\u4E8B\u4EF6</span>
                    <span class="token function">processKey</span><span class="token punctuation">(</span>sk<span class="token punctuation">,</span> attachment<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token comment">//while</span>

            <span class="token comment">//process timeouts</span>
            <span class="token function">timeout</span><span class="token punctuation">(</span>keyCount<span class="token punctuation">,</span>hasEvents<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span> oomParachute <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> oomParachuteData <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token punctuation">)</span> <span class="token function">checkParachute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">OutOfMemoryError</span> oom<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                oomParachuteData <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                <span class="token function">releaseCaches</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> oom<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span> <span class="token class-name">Throwable</span> oomt <span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>oomParachuteMsg<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    oomt<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> letsHopeWeDontGetHere<span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token class-name">ExceptionUtils</span><span class="token punctuation">.</span><span class="token function">handleThrowable</span><span class="token punctuation">(</span>letsHopeWeDontGetHere<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token comment">//while</span>

    stopLatch<span class="token punctuation">.</span><span class="token function">countDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Poller\u7684events\u51FD\u6570\u5728\u4E8B\u4EF6\u6CE8\u518C\u7684\u65F6\u5019\uFF0C\u4F1A\u8C03\u7528\u8BE5\u51FD\u6570\u6765\u5904\u7406\uFF0C\u8FD9\u91CC\u8C03\u7528PollerEvent\u7C7B\u7684run\u51FD\u6570\u6765\u5904\u7406\uFF0C\u867D\u7136PollerEvent\u5B9E\u73B0\u4E86Runnable\u7C7B\uFF0C\u4F46\u662F\u5E76\u6CA1\u6709\u8C03\u7528start\u6765\u5F02\u6B65\u5904\u7406\uFF0C\u56E0\u4E3ANIO\u662F\u540C\u6B65\u975E\u963B\u585E\u65B9\u5F0F\uFF0C\u4E5F\u6709\u53EF\u80FD\u4E3A\u4E86\u65B9\u4FBF\u5904\u7406\uFF0C\u4E5F\u6709\u53EF\u80FD\u662F\u4E3A\u4E86\u4EE5\u540E\u80FD\u65B9\u4FBF\u7684\u6269\u5C55\u5F00\u4E00\u4E2A\u7EBF\u7A0B\u53BB\u5904\u7406\u4E8B\u4EF6\u800C\u5B9E\u73B0\u4E86Runnable\u63A5\u53E3</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">events</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">boolean</span> result <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

    <span class="token class-name">Runnable</span> r <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token comment">// poll\u4F1A\u628A\u5143\u7D20\u4ECE\u961F\u5217\u4E2D\u5220\u9664\u6389</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> size <span class="token operator">=</span> events<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>r <span class="token operator">=</span> events<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5982\u679C\u662FPollerEvent\uFF0C\u4F1A\u5C06\u8BFB\u4E8B\u4EF6\u6CE8\u518C\u5230\u5F53\u524Dpoller\u4E2D\u7684selector\u5BF9\u8C61\u4E0A</span>
            r<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span> r <span class="token keyword">instanceof</span> <span class="token class-name">PollerEvent</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">PollerEvent</span><span class="token punctuation">)</span>r<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                eventCache<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">PollerEvent</span><span class="token punctuation">)</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span> <span class="token class-name">Throwable</span> x <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u540E\u5728\u76D1\u542C\u5230\u4E8B\u4EF6\u4E4B\u540E\uFF0C\u5C31\u5F00\u59CB\u8C03\u7528<code>processKey</code>\u51FD\u6570\u6765\u4ECEchannel\u4E2D\u8BFB\u53D6\u6570\u636E</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">boolean</span> <span class="token function">processKey</span><span class="token punctuation">(</span><span class="token class-name">SelectionKey</span> sk<span class="token punctuation">,</span> <span class="token class-name">KeyAttachment</span> attachment<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">boolean</span> result <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span> close <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">cancelledKey</span><span class="token punctuation">(</span>sk<span class="token punctuation">,</span> <span class="token class-name">SocketStatus</span><span class="token punctuation">.</span>STOP<span class="token punctuation">,</span> attachment<span class="token punctuation">.</span>comet<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span> sk<span class="token punctuation">.</span><span class="token function">isValid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> attachment <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            attachment<span class="token punctuation">.</span><span class="token function">access</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//make sure we don&#39;t time out valid sockets</span>
            sk<span class="token punctuation">.</span><span class="token function">attach</span><span class="token punctuation">(</span>attachment<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//cant remember why this is here</span>

            <span class="token comment">// \u5F53\u524D\u5C31\u7EEA\u4E8B\u4EF6\u5BF9\u5E94\u7684channel</span>
            <span class="token class-name">NioChannel</span> channel <span class="token operator">=</span> attachment<span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u8BFB\u5C31\u7EEA\u6216\u5199\u5C31\u7EEA</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>sk<span class="token punctuation">.</span><span class="token function">isReadable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> sk<span class="token punctuation">.</span><span class="token function">isWritable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span> attachment<span class="token punctuation">.</span><span class="token function">getSendfileData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">processSendfile</span><span class="token punctuation">(</span>sk<span class="token punctuation">,</span>attachment<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">isWorkerAvailable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">unreg</span><span class="token punctuation">(</span>sk<span class="token punctuation">,</span> attachment<span class="token punctuation">,</span> sk<span class="token punctuation">.</span><span class="token function">readyOps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//</span>
                        <span class="token keyword">boolean</span> closeSocket <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                        <span class="token comment">// Read goes before write</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>sk<span class="token punctuation">.</span><span class="token function">isReadable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token comment">// \u4ECEchannel\u4E2D\u8BFB\u53D6\u6570\u636E</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">processSocket</span><span class="token punctuation">(</span>channel<span class="token punctuation">,</span> <span class="token class-name">SocketStatus</span><span class="token punctuation">.</span>OPEN_READ<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                closeSocket <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                        <span class="token punctuation">}</span>
                        <span class="token comment">// \u8BFB\u5B8C\u6570\u636E\u4E4B\u540E\u53EF\u80FD\u5C31\u8981\u5199\u6570\u636E</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>closeSocket <span class="token operator">&amp;&amp;</span> sk<span class="token punctuation">.</span><span class="token function">isWritable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token comment">// \u5C06\u6570\u636E\u5199\u5165\u5230channel\u4E2D</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">processSocket</span><span class="token punctuation">(</span>channel<span class="token punctuation">,</span> <span class="token class-name">SocketStatus</span><span class="token punctuation">.</span>OPEN_WRITE<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                closeSocket <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                        <span class="token punctuation">}</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>closeSocket<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token function">cancelledKey</span><span class="token punctuation">(</span>sk<span class="token punctuation">,</span><span class="token class-name">SocketStatus</span><span class="token punctuation">.</span>DISCONNECT<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        result <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">//invalid key</span>
            <span class="token function">cancelledKey</span><span class="token punctuation">(</span>sk<span class="token punctuation">,</span> <span class="token class-name">SocketStatus</span><span class="token punctuation">.</span>ERROR<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span> <span class="token class-name">CancelledKeyException</span> ckx <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">cancelledKey</span><span class="token punctuation">(</span>sk<span class="token punctuation">,</span> <span class="token class-name">SocketStatus</span><span class="token punctuation">.</span>ERROR<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ExceptionUtils</span><span class="token punctuation">.</span><span class="token function">handleThrowable</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u7740\u4EA4\u7ED9<code>processSocket</code>\u51FD\u6570\u6765\u5904\u7406\u6765</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">processSocket</span><span class="token punctuation">(</span><span class="token class-name">NioChannel</span> socket<span class="token punctuation">,</span> <span class="token class-name">SocketStatus</span> status<span class="token punctuation">,</span> <span class="token keyword">boolean</span> dispatch<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8BE5\u65B9\u6CD5\u662F\u7528\u6765\u4ECEsocket\u4E2D\u8BFB\u6570\u636E\u6216\u5199\u6570\u636E\u7684\uFF0Cdispatch\u8868\u793A\u662F\u4E0D\u662F\u8981\u628A\u8FD9\u4E2A\u4EFB\u52A1\u6D3E\u53D1\u7ED9\u7EBF\u7A0B\u6C60\uFF0C\u4E5F\u5C31\u662F\u8981\u4E0D\u8981\u5F02\u6B65</span>

    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token class-name">KeyAttachment</span> attachment <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">KeyAttachment</span><span class="token punctuation">)</span>socket<span class="token punctuation">.</span><span class="token function">getAttachment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>attachment <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        attachment<span class="token punctuation">.</span><span class="token function">setCometNotify</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//will get reset upon next reg</span>

        <span class="token comment">// \u83B7\u53D6\u4E00\u4E2ASocketProcessor\u5BF9\u8C61</span>
        <span class="token class-name">SocketProcessor</span> sc <span class="token operator">=</span> processorCache<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span> sc <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token punctuation">)</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SocketProcessor</span><span class="token punctuation">(</span>socket<span class="token punctuation">,</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> sc<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span>socket<span class="token punctuation">,</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u6D3E\u53D1\u7ED9\u7EBF\u7A0B\u6C60</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span> dispatch <span class="token operator">&amp;&amp;</span> <span class="token function">getExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token keyword">null</span> <span class="token punctuation">)</span> <span class="token function">getExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>sc<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> sc<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RejectedExecutionException</span> rx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;Socket processing request was rejected for:&quot;</span><span class="token operator">+</span>socket<span class="token punctuation">,</span>rx<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ExceptionUtils</span><span class="token punctuation">.</span><span class="token function">handleThrowable</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// This means we got an OOM or similar creating a thread, or that</span>
        <span class="token comment">// the pool and its queue are full</span>
        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;endpoint.process.fail&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6D3E\u53D1\u7ED9\u7EBF\u7A0B\u6C60\uFF0C\u5C06\u63A5\u6536\u5230\u7684\u6570\u636E\u4EA4\u4E2A<code>SocketProcessor#doRun</code>\u5904\u7406\uFF0C\u7136\u540E\u8C03\u7528<code>process</code>\u65B9\u6CD5\u5904\u7406</p><p><img src="`+ts+`" alt="image-20220224000030068"></p><p>\u63A5\u7740\u8C03\u7528<code>AbstractHttp11Processor#process</code>\u65B9\u6CD5\uFF0C<code>AbstractHttp11Processor</code>\u662FBIO\u548CNIO\u5171\u7528\u7684\u7C7B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">SocketState</span> <span class="token function">process</span><span class="token punctuation">(</span><span class="token class-name">SocketWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">S</span><span class="token punctuation">&gt;</span></span> socketWrapper<span class="token punctuation">)</span>
    <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token class-name">RequestInfo</span> rp <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getRequestProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    rp<span class="token punctuation">.</span><span class="token function">setStage</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span></span>Constants</span><span class="token punctuation">.</span>STAGE_PARSE<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// \u8BBE\u7F6E\u8BF7\u6C42\u72B6\u6001\u4E3A\u89E3\u6790\u72B6\u6001</span>

    <span class="token comment">// Setting up the I/O</span>
    <span class="token function">setSocketWrapper</span><span class="token punctuation">(</span>socketWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">getInputBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>socketWrapper<span class="token punctuation">,</span> endpoint<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// \u5C06socket\u7684InputStream\u4E0EInternalInputBuffer\u8FDB\u884C\u7ED1\u5B9A</span>
    <span class="token function">getOutputBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>socketWrapper<span class="token punctuation">,</span> endpoint<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// \u5C06socket\u7684OutputStream\u4E0EInternalOutputBuffer\u8FDB\u884C\u7ED1\u5B9A</span>

    <span class="token comment">// Flags</span>
    keepAlive <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    comet <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    openSocket <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    sendfileInProgress <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    readComplete <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token comment">// NioEndpoint\u8FD4\u56DEtrue, Bio\u8FD4\u56DEfalse</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>endpoint<span class="token punctuation">.</span><span class="token function">getUsePolling</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        keptAlive <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        keptAlive <span class="token operator">=</span> socketWrapper<span class="token punctuation">.</span><span class="token function">isKeptAlive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5982\u679C\u5F53\u524D\u6D3B\u8DC3\u7684\u7EBF\u7A0B\u6570\u5360\u7EBF\u7A0B\u6C60\u6700\u5927\u7EBF\u7A0B\u6570\u7684\u6BD4\u4F8B\u5927\u4E8E75%\uFF0C\u90A3\u4E48\u5219\u5173\u95EDKeepAlive\uFF0C\u4E0D\u518D\u652F\u6301\u957F\u8FDE\u63A5</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">disableKeepAlive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        socketWrapper<span class="token punctuation">.</span><span class="token function">setKeepAliveLeft</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// keepAlive\u9ED8\u8BA4\u4E3Atrue,\u5B83\u7684\u503C\u4F1A\u4ECE\u8BF7\u6C42\u4E2D\u8BFB\u53D6</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">getErrorState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isError</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> keepAlive <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>comet <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
            upgradeInbound <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
            httpUpgradeHandler <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>endpoint<span class="token punctuation">.</span><span class="token function">isPaused</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// keepAlive\u5982\u679C\u4E3Atrue,\u63A5\u4E0B\u6765\u9700\u8981\u4ECEsocket\u4E2D\u4E0D\u505C\u7684\u83B7\u53D6http\u8BF7\u6C42</span>

        <span class="token comment">// Parsing the request header</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u7B2C\u4E00\u6B21\u4ECEsocket\u4E2D\u8BFB\u53D6\u6570\u636E\uFF0C\u5E76\u8BBE\u7F6Esocket\u7684\u8BFB\u53D6\u6570\u636E\u7684\u8D85\u65F6\u65F6\u95F4</span>
            <span class="token comment">// \u5BF9\u4E8EBIO\uFF0C\u4E00\u4E2Asocket\u8FDE\u63A5\u5EFA\u7ACB\u597D\u540E\uFF0C\u4E0D\u4E00\u5B9A\u9A6C\u4E0A\u5C31\u88ABTomcat\u5904\u7406\u4E86\uFF0C\u5176\u4E2D\u9700\u8981\u7EBF\u7A0B\u6C60\u7684\u8C03\u5EA6\uFF0C\u6240\u4EE5\u8FD9\u6BB5\u7B49\u5F85\u7684\u65F6\u95F4\u8981\u7B97\u5728socket\u8BFB\u53D6\u6570\u636E\u7684\u65F6\u95F4\u5185</span>
            <span class="token comment">// \u800C\u5BF9\u4E8ENIO\u800C\u8A00\uFF0C\u6CA1\u6709\u963B\u585E</span>
            <span class="token function">setRequestLineReadTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// \u89E3\u6790\u8BF7\u6C42\u884C</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">getInputBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parseRequestLine</span><span class="token punctuation">(</span>keptAlive<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u4E0B\u9762\u8FD9\u4E2A\u65B9\u6CD5\u5728NIO\u65F6\u6709\u7528\uFF0C\u6BD4\u5982\u5728\u89E3\u6790\u8BF7\u6C42\u884C\u65F6\uFF0C\u5982\u679C\u6CA1\u6709\u4ECE\u64CD\u4F5C\u7CFB\u7EDF\u8BFB\u5230\u6570\u636E\uFF0C\u5219\u4E0A\u9762\u7684\u65B9\u6CD5\u4F1A\u8FD4\u56DEfalse</span>
                <span class="token comment">// \u800C\u4E0B\u9762\u8FD9\u4E2A\u65B9\u6CD5\u4F1A\u8FD4\u56DEtrue\uFF0C\u4ECE\u800C\u9000\u51FAwhile\uFF0C\u8868\u793A\u6B64\u5904read\u4E8B\u4EF6\u5904\u7406\u7ED3\u675F</span>
                <span class="token comment">// \u5230\u4E0B\u4E00\u6B21read\u4E8B\u4EF6\u53D1\u751F\u4E86\uFF0C\u5C31\u4F1A\u4ECE\u5C0F\u8FDB\u5165\u5230while\u4E2D</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">handleIncompleteRequestLineRead</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>endpoint<span class="token punctuation">.</span><span class="token function">isPaused</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 503 - Service unavailable</span>
                <span class="token comment">// \u5982\u679CEndpoint\u88AB\u6682\u505C\u4E86\uFF0C\u5219\u8FD4\u56DE503</span>
                response<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token number">503</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">setErrorState</span><span class="token punctuation">(</span><span class="token class-name">ErrorState</span><span class="token punctuation">.</span>CLOSE_CLEAN<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                keptAlive <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token comment">// Set this every time in case limit has been changed via JMX</span>
                <span class="token comment">// \u6BCF\u6B21\u5904\u7406\u4E00\u4E2A\u8BF7\u6C42\u5C31\u91CD\u65B0\u83B7\u53D6\u4E00\u4E0B\u8BF7\u6C42\u5934\u548Ccookies\u7684\u6700\u5927\u9650\u5236</span>
                request<span class="token punctuation">.</span><span class="token function">getMimeHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setLimit</span><span class="token punctuation">(</span>endpoint<span class="token punctuation">.</span><span class="token function">getMaxHeaderCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                request<span class="token punctuation">.</span><span class="token function">getCookies</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setLimit</span><span class="token punctuation">(</span><span class="token function">getMaxCookieCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// Currently only NIO will ever return false here</span>
                <span class="token comment">// \u89E3\u6790\u8BF7\u6C42\u5934</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">getInputBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parseHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// We&#39;ve read part of the request, don&#39;t recycle it</span>
                    <span class="token comment">// instead associate it with the socket</span>
                    openSocket <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                    readComplete <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>disableUploadTimeout<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">setSocketTimeout</span><span class="token punctuation">(</span>connectionUploadTimeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">getLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span>
                        sm<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;http11processor.header.parse&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token function">setErrorState</span><span class="token punctuation">(</span><span class="token class-name">ErrorState</span><span class="token punctuation">.</span>CLOSE_NOW<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">ExceptionUtils</span><span class="token punctuation">.</span><span class="token function">handleThrowable</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">UserDataHelper<span class="token punctuation">.</span>Mode</span> logMode <span class="token operator">=</span> userDataHelper<span class="token punctuation">.</span><span class="token function">getNextMode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>logMode <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">String</span> message <span class="token operator">=</span> sm<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>
                        <span class="token string">&quot;http11processor.header.parse&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span>logMode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">case</span> INFO_THEN_DEBUG<span class="token operator">:</span>
                        message <span class="token operator">+=</span> sm<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>
                                <span class="token string">&quot;http11processor.fallToDebug&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token comment">//$FALL-THROUGH$</span>
                    <span class="token keyword">case</span> INFO<span class="token operator">:</span>
                        <span class="token function">getLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> DEBUG<span class="token operator">:</span>
                        <span class="token function">getLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// 400 - Bad Request</span>
            response<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">setErrorState</span><span class="token punctuation">(</span><span class="token class-name">ErrorState</span><span class="token punctuation">.</span>CLOSE_CLEAN<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">getAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">getErrorState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Setting up filters, and parse some request headers</span>
            rp<span class="token punctuation">.</span><span class="token function">setStage</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span></span>Constants</span><span class="token punctuation">.</span>STAGE_PREPARE<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u8BBE\u7F6E\u8BF7\u6C42\u72B6\u6001\u4E3A\u9884\u5904\u7406\u72B6\u6001</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token function">prepareRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// \u9884\u5904\u7406, \u4E3B\u8981\u4ECE\u8BF7\u6C42\u4E2D\u5904\u7406\u5904keepAlive\u5C5E\u6027\uFF0C\u4EE5\u53CA\u8FDB\u884C\u4E00\u4E9B\u9A8C\u8BC1\uFF0C\u4EE5\u53CA\u6839\u636E\u8BF7\u6C42\u5206\u6790\u5F97\u5230ActiveInputFilter</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">ExceptionUtils</span><span class="token punctuation">.</span><span class="token function">handleThrowable</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">getLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>
                            <span class="token string">&quot;http11processor.request.prepare&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// 500 - Internal Server Error</span>
                response<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">setErrorState</span><span class="token punctuation">(</span><span class="token class-name">ErrorState</span><span class="token punctuation">.</span>CLOSE_CLEAN<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">getAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>maxKeepAliveRequests <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5982\u679C\u6700\u5927\u7684\u6D3B\u8DC3http\u8BF7\u6C42\u6570\u91CF\u4EC5\u4EC5\u53EA\u80FD\u4E3A1\u7684\u8BDD\uFF0C\u90A3\u4E48\u8BBE\u7F6EkeepAlive\u4E3Afalse\uFF0C\u5219\u4E0D\u4F1A\u7EE7\u7EED\u4ECEsocket\u4E2D\u83B7\u53D6Http\u8BF7\u6C42\u4E86</span>
            keepAlive <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>maxKeepAliveRequests <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>
                socketWrapper<span class="token punctuation">.</span><span class="token function">decrementKeepAlive</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5982\u679C\u5DF2\u7ECF\u8FBE\u5230\u4E86keepAlive\u7684\u6700\u5927\u9650\u5236\uFF0C\u4E5F\u8BBE\u7F6E\u4E3Afalse\uFF0C\u5219\u4E0D\u4F1A\u7EE7\u7EED\u4ECEsocket\u4E2D\u83B7\u53D6Http\u8BF7\u6C42\u4E86</span>
            keepAlive <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// Process the request in the adapter</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">getErrorState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                rp<span class="token punctuation">.</span><span class="token function">setStage</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span></span>Constants</span><span class="token punctuation">.</span>STAGE_SERVICE<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8BBE\u7F6E\u8BF7\u6C42\u7684\u72B6\u6001\u4E3A\u670D\u52A1\u72B6\u6001\uFF0C\u8868\u793A\u6B63\u5728\u5904\u7406\u8BF7\u6C42</span>
                adapter<span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4EA4\u7ED9\u5BB9\u5668\u5904\u7406\u8BF7\u6C42</span>
                <span class="token comment">// Handle when the response was committed before a serious</span>
                <span class="token comment">// error occurred.  Throwing a ServletException should both</span>
                <span class="token comment">// set the status to 500 and set the errorException.</span>
                <span class="token comment">// If we fail here, then the response is likely already</span>
                <span class="token comment">// committed, so we can&#39;t try and set headers.</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>keepAlive <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">getErrorState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isError</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>
                        response<span class="token punctuation">.</span><span class="token function">getErrorException</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">||</span>
                                <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
                                <span class="token function">statusDropsConnection</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">setErrorState</span><span class="token punctuation">(</span><span class="token class-name">ErrorState</span><span class="token punctuation">.</span>CLOSE_CLEAN<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token function">setCometTimeouts</span><span class="token punctuation">(</span>socketWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedIOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">setErrorState</span><span class="token punctuation">(</span><span class="token class-name">ErrorState</span><span class="token punctuation">.</span>CLOSE_NOW<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">HeadersTooLargeException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">getLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;http11processor.request.process&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// The response should not have been committed but check it</span>
                <span class="token comment">// anyway to be safe</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">isCommitted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">setErrorState</span><span class="token punctuation">(</span><span class="token class-name">ErrorState</span><span class="token punctuation">.</span>CLOSE_NOW<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    response<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    response<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">setErrorState</span><span class="token punctuation">(</span><span class="token class-name">ErrorState</span><span class="token punctuation">.</span>CLOSE_CLEAN<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Connection&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;close&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// TODO: Remove</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">ExceptionUtils</span><span class="token punctuation">.</span><span class="token function">handleThrowable</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">getLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;http11processor.request.process&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 500 - Internal Server Error</span>
                response<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">setErrorState</span><span class="token punctuation">(</span><span class="token class-name">ErrorState</span><span class="token punctuation">.</span>CLOSE_CLEAN<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">getAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// Finish the handling of the request</span>
        rp<span class="token punctuation">.</span><span class="token function">setStage</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span></span>Constants</span><span class="token punctuation">.</span>STAGE_ENDINPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u8BBE\u7F6E\u8BF7\u6C42\u7684\u72B6\u6001\u4E3A\u5904\u7406\u8BF7\u6C42\u7ED3\u675F</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>comet<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getErrorState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// If we know we are closing the connection, don&#39;t drain</span>
                <span class="token comment">// input. This way uploading a 100GB file doesn&#39;t tie up the</span>
                <span class="token comment">// thread if the servlet has rejected it.</span>
                <span class="token function">getInputBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setSwallowInput</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// Need to check this again here in case the response was</span>
                <span class="token comment">// committed before the error that requires the connection</span>
                <span class="token comment">// to be closed occurred.</span>
                <span class="token function">checkExpectationAndResponseStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u5F53\u524Dhttp\u8BF7\u6C42\u5DF2\u7ECF\u5904\u7406\u5B8C\u4E86\uFF0C\u505A\u4E00\u4E9B\u6536\u5C3E\u5DE5\u4F5C</span>
            <span class="token function">endRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        rp<span class="token punctuation">.</span><span class="token function">setStage</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span></span>Constants</span><span class="token punctuation">.</span>STAGE_ENDOUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8BF7\u6C42\u72B6\u6001\u4E3A\u8F93\u51FA\u7ED3\u675F</span>

        <span class="token comment">// If there was an error, make sure the request is counted as</span>
        <span class="token comment">// and error, and update the statistics counter</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getErrorState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            response<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        request<span class="token punctuation">.</span><span class="token function">updateCounters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>comet <span class="token operator">||</span> <span class="token function">getErrorState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getErrorState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isIoAllowed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u51C6\u5907\u5904\u7406\u4E0B\u4E00\u4E2A\u8BF7\u6C42</span>
                <span class="token function">getInputBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">getOutputBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>disableUploadTimeout<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>endpoint<span class="token punctuation">.</span><span class="token function">getSoTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">setSocketTimeout</span><span class="token punctuation">(</span>endpoint<span class="token punctuation">.</span><span class="token function">getSoTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token function">setSocketTimeout</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        rp<span class="token punctuation">.</span><span class="token function">setStage</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span></span>Constants</span><span class="token punctuation">.</span>STAGE_KEEPALIVE<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u5982\u679C\u5904\u7406\u5B8C\u5F53\u524D\u8FD9\u4E2AHttp\u8BF7\u6C42\u4E4B\u540E\uFF0C\u53D1\u73B0socket\u91CC\u6CA1\u6709\u4E0B\u4E00\u4E2A\u8BF7\u6C42\u4E86,\u90A3\u4E48\u5C31\u9000\u51FA\u5F53\u524D\u5FAA\u73AF</span>
        <span class="token comment">// \u5982\u679C\u662Fkeepalive\uFF0C\u5C31\u4E0D\u4F1A\u5173\u95EDsocket, \u5982\u679C\u662Fclose\u5C31\u4F1A\u5173\u95EDsocket</span>
        <span class="token comment">// \u5BF9\u4E8Ekeepalive\u7684\u60C5\u51B5\uFF0C\u56E0\u4E3A\u662F\u4E00\u4E2A\u7EBF\u7A0B\u5904\u7406\u4E00\u4E2Asocket,\u5F53\u9000\u51FA\u8FD9\u4E2Awhile\u540E\uFF0C\u5F53\u524D\u7EBF\u7A0B\u5C31\u4F1A\u4ECB\u7ECD\uFF0C</span>
        <span class="token comment">// \u5F53\u65F6\u5BF9\u4E8Esocket\u6765\u8BF4\uFF0C\u5B83\u4ECD\u7136\u8981\u7EE7\u7EED\u4ECB\u7ECD\u8FDE\u63A5\uFF0C\u6240\u4EE5\u53C8\u4F1A\u65B0\u5F00\u4E00\u4E2A\u7EBF\u7A0B\u7EE7\u7EED\u6765\u5904\u7406\u8FD9\u4E2Asocket</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">breakKeepAliveLoop</span><span class="token punctuation">(</span>socketWrapper<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u81F3\u6B64\uFF0C\u5FAA\u73AF\u7ED3\u675F</span>

    rp<span class="token punctuation">.</span><span class="token function">setStage</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span></span>Constants</span><span class="token punctuation">.</span>STAGE_ENDED<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u4E3B\u8981\u6D41\u7A0B\u5C31\u662F\u5C06socket\u7684\u72B6\u6001\u8BBE\u7F6E\u4E3ACLOSED</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getErrorState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isError</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> endpoint<span class="token punctuation">.</span><span class="token function">isPaused</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">SocketState</span><span class="token punctuation">.</span>CLOSED<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> comet<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5F02\u6B65servlet</span>
        <span class="token keyword">return</span> <span class="token class-name">SocketState</span><span class="token punctuation">.</span>LONG<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUpgrade</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">SocketState</span><span class="token punctuation">.</span>UPGRADING<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getUpgradeInbound</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">SocketState</span><span class="token punctuation">.</span>UPGRADING_TOMCAT<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>sendfileInProgress<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">SocketState</span><span class="token punctuation">.</span>SENDFILE<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// openSocket\u4E3Atrue\uFF0C\u8868\u793A\u4E0D\u8981\u5173\u95EDsocket</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>openSocket<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// readComplete\u8868\u793A\u672C\u6B21\u8BFB\u6570\u636E\u662F\u5426\u5B8C\u6210\uFF0C\u6BD4\u5982nio\u4E2D\u53EF\u80FD\u5C31\u6CA1\u6709\u8BFB\u5B8C\u6570\u636E\uFF0C\u8FD8\u9700\u8981\u4ECEsocket\u4E2D\u8BFB\u6570\u636E</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>readComplete<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token class-name">SocketState</span><span class="token punctuation">.</span>OPEN<span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token comment">// nio\u53EF\u80FD\u4F1A\u8D70\u5230\u8FD9\u91CC</span>
                    <span class="token keyword">return</span> <span class="token class-name">SocketState</span><span class="token punctuation">.</span>LONG<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token class-name">SocketState</span><span class="token punctuation">.</span>CLOSED<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5F02\u6B65servlet\u6E90\u7801\u5B9E\u73B0"><a class="header-anchor" href="#\u5F02\u6B65servlet\u6E90\u7801\u5B9E\u73B0" aria-hidden="true">#</a> \u5F02\u6B65Servlet\u6E90\u7801\u5B9E\u73B0</h2><h2 id="\u81EA\u5B9A\u4E49\u7C7B\u52A0\u8F7D\u5668\u4F7F\u7528\u548C\u6E90\u7801\u5B9E\u73B0"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49\u7C7B\u52A0\u8F7D\u5668\u4F7F\u7528\u548C\u6E90\u7801\u5B9E\u73B0" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49\u7C7B\u52A0\u8F7D\u5668\u4F7F\u7528\u548C\u6E90\u7801\u5B9E\u73B0</h2><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> JVM\u5982\u679C\u60F3\u8981\u4F7F\u7528\u7C7B\uFF0C\u5C31\u9700\u8981\u52A0\u8F7Dclass\u6587\u4EF6\uFF0C\u7136\u540E\u4F7F\u7528\u7C7B\u52A0\u8F7D\u5668\u52A0\u8F7Dclass\u6587\u4EF6\uFF0C\u8F6C\u6362\u6210Class\u5BF9\u8C61\uFF0C\u7136\u540E\u624D\u53EF\u4EE5\u901A\u8FC7Class\u5BF9\u8C61new\u51FA\u7C7B\u5BF9\u8C61</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="\u7C7B\u52A0\u8F7D\u5668"><a class="header-anchor" href="#\u7C7B\u52A0\u8F7D\u5668" aria-hidden="true">#</a> \u7C7B\u52A0\u8F7D\u5668</h3><p>Java\u4E2D\u7684\u7C7B\u9075\u5FAA\u6309\u9700\u52A0\u8F7D</p><p>\u6240\u8C13\u7C7B\u52A0\u8F7D\u5668\uFF0C\u5C31\u662F\u2F64\u4E8E\u52A0\u8F7D Java \u7C7B\u5230 Java \u865A\u62DF\u673A\u4E2D\u7684\u7EC4\u4EF6\uFF0C\u5B83\u8D1F\u8D23\u8BFB\u53D6 Java \u5B57\u8282\u7801\uFF0C\u5E76\u8F6C\u6362\u6210java.lang.Class \u7C7B\u7684\u2F00\u4E2A\u5B9E\u4F8B\uFF0C\u4F7F\u5B57\u8282\u7801.class \u2F42\u4EF6</p><p>\u5F97\u4EE5\u8FD0\u2F8F\u3002\u2F00\u822C\u7C7B\u52A0\u8F7D\u5668\u8D1F\u8D23\u6839\u636E\u2F00\u4E2A\u6307\u5B9A\u7684\u7C7B\u627E\u5230\u5BF9\u5E94\u7684\u5B57\u8282\u7801\uFF0C\u7136\u540E\u6839\u636E\u8FD9\u4E9B\u5B57\u8282\u7801\u5B9A\u4E49\u2F00\u4E2A Java \u7C7B\u3002\u53E6\u5916\uFF0C\u5B83\u8FD8\u53EF\u4EE5\u52A0\u8F7D\u8D44\u6E90\uFF0C\u5305\u62EC\u56FE\u50CF\u2F42\u4EF6</p><p>\u548C\u914D\u7F6E\u2F42\u4EF6</p><p>\u7C7B\u52A0\u8F7D\u5668\u5728\u5B9E\u9645\u4F7F\u2F64\u4E2D\u7ED9\u6211\u4EEC\u5E26\u6765\u7684\u597D\u5904\u662F\uFF0C\u5B83\u53EF\u4EE5\u4F7F Java \u7C7B\u52A8\u6001\u5730\u52A0\u8F7D\u5230 JVM \u4E2D\u5E76\u8FD0\u2F8F\uFF0C\u5373\u53EF\u5728\u7A0B\u5E8F\u8FD0\u2F8F\u65F6\u518D\u52A0\u8F7D\u7C7B\uFF0C\u63D0\u4F9B\u4E86\u5F88\u7075\u6D3B\u7684\u52A8\u6001\u52A0\u8F7D\u2F45\u5F0F</p><ul><li><p>\u542F\u52A8\u7C7B\u52A0\u8F7D\u5668\uFF08<code>Bootstrap ClassLoader</code>\uFF09\uFF1A\u52A0\u8F7D\u5BF9\u8C61\u662F Java \u6838\u2F3C\u5E93\uFF0C\u628A\u2F00\u4E9B\u6838\u2F3C\u7684 Java \u7C7B\u52A0\u8F7D\u8FDBJVM \u4E2D\uFF0C\u8FD9\u4E2A\u52A0\u8F7D\u5668\u4F7F\u2F64\u539F\u2F63\u4EE3\u7801\uFF08C/C++\uFF09\u5B9E\u73B0\uFF0C\u5E76\u4E0D\u662F\u7EE7\u627F <code>java.lang.ClassLoader</code>\uFF0C\u5B83\u662F\u6240\u6709\u5176\u4ED6\u7C7B\u52A0\u8F7D\u5668\u7684\u6700\u7EC8\u2F57\u52A0\u8F7D\u5668\uFF0C\u8D1F\u8D23\u52A0\u8F7D <code>&lt;JAVA_HOME&gt;/jre/lib</code> \u2F6C\u5F55\u4E0B JVM \u6307\u5B9A\u7684\u7C7B\u5E93\u3002\u5176\u5B9E\u5B83 \u5C5E\u4E8E JVM \u6574\u4F53\u7684\u2F00\u90E8\u5206\uFF0CJVM \u2F00\u542F\u52A8\u5C31\u5C06\u8FD9\u4E9B\u6307\u5B9A\u7684\u7C7B\u52A0\u8F7D\u5230\u5185\u5B58\u4E2D\uFF0C\u907F\u514D\u4EE5\u540E\u8FC7\u591A\u7684 I/O \u64CD\u4F5C\uFF0C\u63D0\u2FBC\u7CFB\u7EDF\u7684\u8FD0\u2F8F\u6548\u7387\u3002\u542F\u52A8\u7C7B\u52A0\u8F7D\u5668\u2F46\u6CD5\u88AB Java \u7A0B\u5E8F\u76F4\u63A5\u4F7F\u2F64</p></li><li><p>\u6269\u5C55\u7C7B\u52A0\u8F7D\u5668\uFF08<code>Extension ClassLoader</code>\uFF09\uFF1A\u52A0\u8F7D\u7684\u5BF9\u8C61\u4E3A Java \u7684\u6269\u5C55\u5E93\uFF0C\u5373\u52A0\u8F7D<code>&lt;JAVA_HOME&gt;/jre/lib/ext</code> \u2F6C\u5F55\u2FA5\u2FAF\u7684\u7C7B\u3002\u8FD9\u4E2A\u7C7B\u7531\u542F\u52A8\u7C7B\u52A0\u8F7D\u5668\u52A0\u8F7D\uFF0C\u4F46\u56E0\u4E3A\u542F\u52A8\u7C7B\u52A0\u8F7D\u5668\u5E76\u2FAE\u2F64 Java \u5B9E\u73B0\uFF0C\u5DF2\u7ECF\u8131\u79BB\u4E86 Java \u4F53\u7CFB\uFF0C\u6240\u4EE5\u5982\u679C\u5C1D\u8BD5\u8C03\u2F64\u6269\u5C55\u7C7B\u52A0\u8F7D\u5668\u7684<code>getParent()</code>\u2F45\u6CD5\u83B7\u53D6\u2F57\u52A0\u8F7D\u5668\u4F1A\u5F97\u5230 <code>null</code>\u3002\u7136\u2F7D\uFF0C\u5B83\u7684\u2F57\u7C7B\u52A0\u8F7D\u5668\u662F\u542F\u52A8\u7C7B\u52A0\u8F7D\u5668</p></li></ul><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> JVM\u4F7F\u7528C++\u5B9E\u73B0Bootsrap\u52A0\u8F7D\u5668</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>\u5E94\u2F64\u7A0B\u5E8F\u7C7B\u52A0\u8F7D\u5668\uFF08<code>Application ClassLoader</code>\uFF09\uFF1A\u4EA6\u53EB\u7CFB\u7EDF\u7C7B\u52A0\u8F7D\u5668\uFF08<code>System ClassLoader</code>\uFF09\uFF0C\u5B83\u8D1F\u8D23\u52A0\u8F7D\u2F64\u6237\u7C7B\u8DEF\u5F84\uFF08<code>CLASSPATH</code>\uFF09\u6307\u5B9A\u7684\u7C7B\u5E93\uFF0C\u5982\u679C\u7A0B\u5E8F\u6CA1\u6709\u2F83\u2F30\u5B9A\u4E49\u7C7B\u52A0\u8F7D\u5668\uFF0C\u5C31\u9ED8\u8BA4\u4F7F\u2F64\u5E94\u2F64\u7A0B\u5E8F\u7C7B\u52A0\u8F7D\u5668\u3002\u5B83\u4E5F\u7531\u542F\u52A8\u7C7B\u52A0\u8F7D\u5668\u52A0\u8F7D\uFF0C\u4F46\u5B83\u7684\u2F57\u52A0\u8F7D\u7C7B\u88AB\u8BBE\u7F6E\u6210\u4E86\u6269\u5C55\u7C7B\u52A0\u8F7D\u5668\u3002\u5982\u679C\u8981\u4F7F\u2F64\u8FD9\u4E2A \u52A0\u8F7D\u5668\uFF0C\u53EF\u901A\u8FC7<code>ClassLoader.getSystemClassLoader()</code>\u83B7\u53D6</li></ul><p><img src="`+ps+`" alt="image-20220225002702709"></p><h4 id="\u53CC\u4EB2\u59D4\u6D3E"><a class="header-anchor" href="#\u53CC\u4EB2\u59D4\u6D3E" aria-hidden="true">#</a> \u53CC\u4EB2\u59D4\u6D3E</h4><p>\u53CC\u4EB2\u59D4\u6D3E\u6A21\u578B\u4F1A\u5728\u7C7B\u52A0\u8F7D\u5668\u52A0\u8F7D\u7C7B\u65F6\u2FB8\u5148\u59D4\u6258\u7ED9\u2F57\u7C7B\u52A0\u8F7D\u5668\u52A0\u8F7D\uFF0C\u9664\u2FAE\u2F57\u7C7B\u52A0\u8F7D\u5668\u4E0D\u80FD\u52A0\u8F7D\u624D\u2F83\u2F30\u52A0\u8F7D</p><p>\u8FD9\u79CD\u6A21\u578B\u8981\u6C42\uFF0C\u9664\u4E86\u9876\u5C42\u7684\u542F\u52A8\u7C7B\u52A0\u8F7D\u5668\u5916\uFF0C\u5176\u4ED6\u7684\u7C7B\u52A0\u8F7D\u5668\u90FD\u8981\u6709\u2F83\u2F30\u7684\u2F57\u7C7B\u52A0\u8F7D\u5668\u3002\u5047\u5982\u6709\u2F00\u4E2A\u7C7B\u8981\u52A0\u8F7D\u8FDB\u6765\uFF0C\u2F00\u4E2A\u7C7B\u52A0\u8F7D\u5668\u5E76\u4E0D\u4F1A\u2EE2\u4E0A\u5C1D\u8BD5\u2F83\u2F30\u5C06\u5176\u52A0\u8F7D\uFF0C\u2F7D\u662F\u59D4\u6D3E\u7ED9\u2F57\u7C7B\u52A0\u8F7D\u5668\uFF0C\u2F57\u7C7B\u52A0\u8F7D\u5668\u6536\u5230\u540E\u2F1C\u5C1D\u8BD5\u59D4\u6D3E\u7ED9\u5176\u2F57\u7C7B\u52A0\u8F7D\u5668\uFF0C\u4EE5\u6B64\u7C7B\u63A8\uFF0C\u76F4\u5230\u59D4\u6D3E\u7ED9\u542F\u52A8\u7C7B\u52A0\u8F7D\u5668\uFF0C\u8FD9\u6837\u2F00\u5C42\u2F00\u5C42\u5F80\u4E0A\u59D4\u6D3E</p><p>\u53EA\u6709\u5F53\u2F57\u7C7B\u52A0\u8F7D\u5668\u53CD\u9988\u2F83\u2F30\u6CA1\u6CD5\u5B8C\u6210\u8FD9\u4E2A\u52A0\u8F7D\u65F6\uFF0C\u2F26\u52A0\u8F7D\u5668\u624D\u4F1A\u5C1D\u8BD5\u2F83\u2F30\u52A0\u8F7D</p><p>\u901A\u8FC7\u8FD9\u4E2A\u673A\u5236\uFF0C\u4FDD\u8BC1\u4E86 Java \u5E94\u2F64\u6240\u4F7F\u2F64\u7684\u90FD\u662F\u540C\u2F00\u4E2A\u7248\u672C\u7684 Java \u6838\u2F3C\u5E93\u7684\u7C7B\uFF0C\u540C\u65F6\u8FD9\u4E2A\u673A\u5236\u4E5F\u4FDD\u8BC1\u4E86\u5B89\u5168\u6027\u3002\u8BBE\u60F3\u5982\u679C\u5E94\u2F64\u7A0B\u5E8F\u7C7B\u52A0\u8F7D\u5668\u60F3\u8981\u52A0\u8F7D\u2F00\u4E2A\u6709\u7834\u574F\u6027\u7684 <code>java.lang.System</code> \u7C7B\uFF0C\u53CC\u4EB2\u59D4\u6D3E\u6A21\u578B\u4F1A\u2F00\u5C42\u5C42\u5411\u4E0A\u59D4\u6D3E\uFF0C\u6700\u7EC8\u59D4\u6D3E\u7ED9\u542F\u52A8\u7C7B\u52A0\u8F7D\u5668\uFF0C\u2F7D\u542F\u52A8\u7C7B\u52A0\u8F7D\u5668\u68C0\u67E5\u5230\u7F13\u5B58\u4E2D\u5DF2\u7ECF\u6709\u4E86\u8FD9\u4E2A\u7C7B\uFF0C\u5E76\u4E0D\u4F1A\u518D\u52A0\u8F7D\u8FD9\u4E2A\u6709\u7834\u574F\u6027\u7684 System \u7C7B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">loadClass</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">boolean</span> resolve<span class="token punctuation">)</span>
    <span class="token keyword">throws</span> <span class="token class-name">ClassNotFoundException</span>
<span class="token punctuation">{</span>
    <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token function">getClassLoadingLock</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u52A0\u9501\uFF0C\u65B9\u5F0F\u591A\u7EBF\u7A0B\u91CD\u590D\u52A0\u8F7D</span>
        <span class="token comment">// First, check if the class has already been loaded</span>
        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> c <span class="token operator">=</span> <span class="token function">findLoadedClass</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5BFB\u627EClass\u7C7B\uFF0C\u5982\u679C\u5DF2\u7ECF\u52A0\u8F7D\u5230JVM\u4E2D\u4E86\uFF0C\u5C31\u76F4\u63A5\u8FD4\u56DE</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">long</span> t0 <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>parent <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5982\u679C\u7236\u52A0\u8F7D\u5668\u4E0D\u4E3A\u7A7A\uFF0C\u59D4\u6D3E\u7236\u7C7B\u52A0\u8F7D</span>
                    c <span class="token operator">=</span> parent<span class="token punctuation">.</span><span class="token function">loadClass</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    c <span class="token operator">=</span> <span class="token function">findBootstrapClassOrNull</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5982\u679C\u6CA1\u6709\u7236\u7C7B\uFF0C\u76F4\u63A5\u5C1D\u8BD5\u8BA9\u542F\u52A8\u7C7B\u52A0\u8F7D\u5668\u52A0\u8F7D</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// ClassNotFoundException thrown if class not found</span>
                <span class="token comment">// from the non-null parent class loader</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5230\u8FD9\u91CC\u8FD8\u662F\u7A7A\u7684\u8BDD\uFF0C\u5C31\u8BA9\u81EA\u5DF1\u52A0\u8F7D</span>
                <span class="token comment">// If still not found, then invoke findClass in order</span>
                <span class="token comment">// to find the class.</span>
                <span class="token keyword">long</span> t1 <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                c <span class="token operator">=</span> <span class="token function">findClass</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token comment">// this is the defining class loader; record the stats</span>
                <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>misc<span class="token punctuation">.</span></span>PerfCounter</span><span class="token punctuation">.</span><span class="token function">getParentDelegationTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addTime</span><span class="token punctuation">(</span>t1 <span class="token operator">-</span> t0<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>misc<span class="token punctuation">.</span></span>PerfCounter</span><span class="token punctuation">.</span><span class="token function">getFindClassTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addElapsedTimeFrom</span><span class="token punctuation">(</span>t1<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>misc<span class="token punctuation">.</span></span>PerfCounter</span><span class="token punctuation">.</span><span class="token function">getFindClasses</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>resolve<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">resolveClass</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> c<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="\u6253\u7834\u53CC\u4EB2\u59D4\u6D3E"><a class="header-anchor" href="#\u6253\u7834\u53CC\u4EB2\u59D4\u6D3E" aria-hidden="true">#</a> \u6253\u7834\u53CC\u4EB2\u59D4\u6D3E</h5><p>\u5C31\u662F\u9700\u8981\u4F7F\u7528\u81EA\u5B9A\u4E49\u7C7B\u52A0\u8F7D\u5668\uFF0CTomcat\u4E2D\u7528\u5230\u7684\u5F88\u591A\u90FD\u662F\u81EA\u5B9A\u4E49\u7C7B\u52A0\u8F7D\u5668</p><p>\u6BD4\u5982\uFF0C\u5982\u679C\u6211\u4EEC\u6307\u5B9A\u52A0\u8F7D\u7684<code>java.xxx</code>\u662F<code>classpath</code>\u80FD\u627E\u5230\u7684\u8BDD\uFF0C\u90A3\u4E48\u5C31\u4F1A\u4EA4\u7ED9ApplicationClassLoader\uFF0C\u4E0B\u9762\u7684\u4EE3\u7801\u7684ClassLoader\u662FApplicationClassLoader</p><p>\u5982\u679C\u662FApplicationClassLoader\u4E0D\u80FD\u627E\u5230\u7684\u8BDD\uFF0C\u90A3\u5C31\u53EA\u80FD\u4EA4\u7ED9MyClassLoader</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u8FD9\u91CC\u7684\u4EA4\u7ED9ApplicationClassLoader\u7684\u65F6\u5019\uFF0C\u662F\u8981\u5728ApplicationClassLoader\u4E2D\u518D\u59D4\u6D3E\u7ED9\u4ED6\u7684\u7236\u7C7B\u53BB\u52A0\u8F7D\u7684\uFF0C\u5E76\u4E0D\u662F\u5230\u8FD9\u91CC\u5C31\u7ED3\u675F\u4E86</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyClassLoader</span> <span class="token keyword">extends</span> <span class="token class-name">ClassLoader</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">MyClassLoader</span><span class="token punctuation">(</span><span class="token class-name">ClassLoader</span> parent<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">MyClassLoader</span> loader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyClassLoader</span><span class="token punctuation">(</span><span class="token class-name">MyClassLoader</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;MyClassLoader&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">final</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> clazz <span class="token operator">=</span> loader<span class="token punctuation">.</span><span class="token function">loadClass</span><span class="token punctuation">(</span><span class="token string">&quot;com.xxx.xxx.Test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>clazz<span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u6211\u4EEC\u81EA\u5B9A\u4E49\u7C7B\u52A0\u8F7D\u5668\u7684\u65F6\u5019\uFF0C\u4E0D\u60F3\u5728\u53BB\u4F7F\u7528\u7236\u52A0\u8F7D\u5668\u7684\u4E86\uFF0C\u5C31\u662F\u6253\u7834\u53CC\u4EB2\u59D4\u6D3E</p><ol><li>\u7B2C\u4E00\u79CD\uFF0C\u5C31\u662F\u8BA9\u81EA\u5B9A\u4E49\u7684\u7C7B\u52A0\u8F7D\u5668\u7684\u7236\u7C7B\u4E3Anull\uFF0C\u4E5F\u5C31\u662F\u6CA1\u6709\u7236\u7C7B\uFF0C\u4F46\u662F\u8FD9\u79CD\u65B9\u6CD5\u57FA\u672C\u4E0A\u6CA1\u6709\u4EBA\u8FD9\u4E48\u7528</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token class-name">MyClassLoader</span> loader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyClassLoader</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot;MyClassLoader&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> clazz <span class="token operator">=</span> loader<span class="token punctuation">.</span><span class="token function">loadClass</span><span class="token punctuation">(</span><span class="token string">&quot;com.xxx.xxx.Test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>clazz<span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u7B2C\u4E8C\u79CD\uFF0C\u91CD\u5199loadClass\u65B9\u6CD5\uFF0C\u5982\u679C\u91CD\u5199\u4E86loadClass\u65B9\u6CD5\u7684\u8BDD\uFF0C\u5C31\u4E0D\u4F1A\u53BB\u8C03\u7528\u7236\u52A0\u8F7D\u5668\u7684loadClass\u65B9\u6CD5\u4E86</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyClassLoader</span> <span class="token keyword">extends</span> <span class="token class-name">ClassLoader</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">MyClassLoader</span><span class="token punctuation">(</span><span class="token class-name">ClassLoader</span> parent<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">findClass</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">{</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            data <span class="token operator">=</span> <span class="token function">getBytes</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> exception<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            exception<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">final</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> clazz <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">defineClass</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> data<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> clazz<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token class-name">String</span> filePath<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">{</span>
        <span class="token comment">// \u8FD9\u91CC\u8981\u8BFB\u5165.class\u7684\u5B57\u8282\uFF0C\u56E0\u6B64\u8981\u4F7F\u7528\u5B57\u8282\u6D41</span>
        <span class="token class-name">FileInputStream</span> fis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">FileChannel</span> fc <span class="token operator">=</span> fis<span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ByteArrayOutputStream</span> baos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">WritableByteChannel</span> wbc <span class="token operator">=</span> <span class="token class-name">Channels</span><span class="token punctuation">.</span><span class="token function">newChannel</span><span class="token punctuation">(</span>baos<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ByteBuffer</span> by <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> i <span class="token operator">=</span> fc<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>by<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> i <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            by<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            wbc<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>by<span class="token punctuation">)</span><span class="token punctuation">;</span>
            by<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        fis<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> baos<span class="token punctuation">.</span><span class="token function">toByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">loadClass</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">findClass</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">MyClassLoader</span> loader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyClassLoader</span><span class="token punctuation">(</span><span class="token class-name">MyClassLoader</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;MyClassLoader&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">final</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> clazz <span class="token operator">=</span> loader<span class="token punctuation">.</span><span class="token function">loadClass</span><span class="token punctuation">(</span><span class="token string">&quot;com.xxx.xxx.Test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>clazz<span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u8FD9\u91CC\u5E94\u8BE5\u8FD8\u6709\u4E00\u4E2A\u5730\u65B9\u7684\u4EE3\u7801\uFF0C\u5C31\u662F\u9700\u8981\u5C06.\u8F6C\u6362\u6210/\uFF0C\u7136\u540E\u624D\u80FD\u5728\u78C1\u76D8\u4E0A\u627E\u5230\u5B57\u8282\u7801\u6587\u4EF6</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5F53\u6211\u4EEC\u76F4\u63A5\u8FD0\u884C\u7684\u65F6\u5019\uFF0C\u4F1A\u51FA\u73B0\u62A5\u9519</p><p><img src="`+es+'" alt="image-20220225012724660"></p><p>\u901A\u8FC7\u8C03\u8BD5\u6211\u4EEC\u53EF\u4EE5\u77E5\u9053\uFF0C\u5F53\u6211\u4EEC\u52A0\u8F7D<code>com.xxx.xxx.Test</code>\u7C7B\u7684\u65F6\u5019\uFF0C\u4F1A\u5148\u52A0\u8F7D\u5B83\u7684\u7236\u7C7B<code>java.lang.Object</code>\u8FD9\u4E2A\u7C7B\uFF0C\u62A5\u9519\u7684\u4F4D\u7F6E</p><p><img src="'+os+`" alt="image-20220225013622946"></p><p>\u8868\u793A\uFF0C\u7C7B\u52A0\u8F7D\u5668\u5982\u679C\u52A0\u8F7D\u7C7B\u4E2D\u5305\u542B\u6709<code>java.</code>\uFF0C\u5C31\u4F1A\u62A5\u51FA\u4E0D\u5B89\u5168\u7684\u5F02\u5E38</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u5982\u679C\u662F\u5728java\u5F00\u5934\u7684\u8FD9\u4E2A\u5305\u4E0B\u7684\u7C7B\uFF0C\u90FD\u4F1A\u629B\u5F02\u5E38</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u90A3\u4E48\u8FD9\u4E9B\u7279\u6B8A\u7684\u7C7B\uFF0C\u5E94\u8BE5\u662F\u7531\u542F\u52A8\u7C7B\u5939\u6742\u5668\u6216\u8005\u6269\u5C55\u7C7B\u52A0\u8F7D\u5668\u6216\u8005\u5E94\u7528\u52A0\u8F7D\u5668\u6765\u52A0\u8F7D\u7684</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u4E3A\u4EC0\u4E48\u8FD9\u4E9B\u7C7B\u8981\u9632\u6B62\u81EA\u5B9A\u4E49\u7C7B\u52A0\u8F7D\u5462\uFF1F</span>
\u4E3A\u4E86\u5B89\u5168\u95EE\u9898\uFF0C\u9632\u6B62\u901A\u8FC7\u548Cjava\u548C\u6838\u5FC3\u7C7B\u4E00\u6837\u7684\u7C7B\u88AB\u6CE8\u5165\u5230JVM\u4E2D
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53E6\u5916\uFF0C\u7C7B\u52A0\u8F7D\u5668\u8FD8\u62E5\u6709\u5168\u76D8\u8D1F\u8D23\u673A\u5236\uFF0C\u5373\u5F53\u2F00\u4E2A\u7C7B\u52A0\u8F7D\u5668\u52A0\u8F7D\u2F00\u4E2A\u7C7B\u65F6\uFF0C\u8FD9\u4E2A\u7C7B\u6240\u4F9D\u8D56\u7684\u3001\u5F15\u2F64\u7684\u5176\u4ED6\u6240\u6709\u7C7B\u90FD\u7531\u8FD9\u4E2A\u7C7B\u52A0\u8F7D\u5668\u52A0\u8F7D\uFF0C\u9664\u2FAE\u5728\u7A0B\u5E8F\u4E2D\u663E\u5F0F\u5730\u6307\u5B9A\u53E6\u5916\u2F00\u4E2A\u7C7B\u52A0\u8F7D\u5668\u52A0\u8F7D</p><p>\u90A3\u4E48\u600E\u4E48\u53BB\u89E3\u51B3\u5462\uFF1F</p><p>\u5148\u901A\u8FC7\u5F53\u524D\u7CFB\u7EDF\u7684\u7C7B\u52A0\u8F7D\u5668\uFF08\u4E5F\u5C31\u662FApplication ClassLoader\uFF09\u6765\u52A0\u8F7D\uFF0C\u5982\u679C\u52A0\u8F7D\u6210\u529F\uFF0C\u5C31\u76F4\u63A5\u8FD4\u56DE\uFF0C\u5982\u679C\u52A0\u8F7D\u5931\u8D25\uFF0C\u5728\u7528\u81EA\u5B9A\u4E49\u7C7B\u52A0\u8F7D\u5668\u52A0\u8F7D</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">loadClass</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">ClassLoader</span> system <span class="token operator">=</span> <span class="token function">getSystemClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> clazz <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        clazz <span class="token operator">=</span> system<span class="token punctuation">.</span><span class="token function">loadClass</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>clazz <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> clazz<span class="token punctuation">;</span>
    clazz <span class="token operator">=</span> <span class="token function">findClass</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> clazz<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F46\u662F\u8FD9\u6837\u53BB\u5199\uFF0C\u5C31\u6CA1\u6709\u592A\u5927\u7684\u610F\u4E49\uFF0C\u56E0\u4E3A\u6211\u4EEC\u6700\u5927\u7684\u76EE\u7684\u5C31\u662F\u4E0D\u4F7F\u7528Application ClassLoader\u53BB\u52A0\u8F7D\u6211\u4EEC\u7684\u7C7B\uFF0C\u90A3\u4E48\u95EE\u9898\u5C31\u53D8\u6210\u4E86\uFF1A\u53C8\u8981\u4E0D\u4F7F\u7528Application ClassLoader\uFF0C\u53C8\u8981\u80FD\u52A0\u8F7Djava\u4F9D\u8D56\u7684\u4E00\u4E9B\u7C7B</p><p>\u5176\u5B9E\u5F88\u7B80\u5355\uFF0C\u53EA\u9700\u8981\u5728\u83B7\u53D6\u7684\u65F6\u5019\uFF0C\u8BBE\u7F6E\u4E3A\u6269\u5C55\u7C7B\u542F\u52A8\u5668\u5C31\u597D\u4E86\uFF0C\u8FD9\u6837\u5C31\u8DF3\u8FC7\u4E86\u5E94\u7528\u7C7B\u542F\u52A8\u5668\u4E86</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">loadClass</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">ClassLoader</span> system <span class="token operator">=</span> <span class="token function">getSystemClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD9\u91CC</span>
    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> clazz <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        clazz <span class="token operator">=</span> system<span class="token punctuation">.</span><span class="token function">loadClass</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>clazz <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> clazz<span class="token punctuation">;</span>

    clazz <span class="token operator">=</span> <span class="token function">findClass</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> clazz<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u6211\u4EEC\u521B\u5EFA\u51FA\u4E24\u4E2A\u81EA\u5B9A\u4E49ClassLoader\uFF0C\u90A3\u4E48loadClass\u76F8\u540C\u7684\u5B57\u8282\u7801\u6587\u4EF6\uFF0C\u662F\u5426\u76F8\u7B49\u5462\uFF1F</p><p><img src="`+cs+'" alt="image-20220225021058768"></p><p>\u4E0D\u76F8\u540C\uFF0C\u56E0\u4E3A\uFF1A</p><p>\u5728 Java \u4E2D\uFF0C\u6211\u4EEC\u2F64\u5B8C\u5168\u5339\u914D\u7C7B\u540D\u6765\u6807\u8BC6\u2F00\u4E2A\u7C7B\uFF0C\u5373\u2F64<strong>\u5305\u540D\u548C\u7C7B\u540D</strong>\u3002\u2F7D\u5728 JVM \u4E2D\uFF0C\u2F00\u4E2A\u7C7B\u7531<strong>\u5B8C\u5168\u5339\u914D\u7C7B\u540D</strong>\u548C<strong>\u2F00\u4E2A\u7C7B\u52A0\u8F7D\u5668\u7684\u5B9E\u4F8B ID</strong> \u4F5C\u4E3A\u552F\u2F00\u6807\u8BC6\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C<strong>\u540C\u2F00\u4E2A\u865A\u62DF\u673A\u53EF\u4EE5\u6709\u4E24\u4E2A\u5305\u540D\u3001\u7C7B\u540D\u90FD\u76F8\u540C\u7684\u7C7B\uFF0C\u53EA\u8981\u5B83\u4EEC\u7531\u4E24\u4E2A\u4E0D\u540C\u7684\u7C7B\u52A0\u8F7D\u5668\u52A0\u8F7D</strong>\u3002\u5F53\u6211\u4EEC\u5728 Java \u4E2D\u8BF4\u4E24\u4E2A\u7C7B\u662F\u5426\u76F8\u7B49\u65F6\uFF0C\u5FC5\u987B\u5728\u9488\u5BF9\u540C\u2F00\u4E2A\u7C7B\u52A0\u8F7D\u5668\u52A0\u8F7D\u7684\u524D\u63D0\u4E0B\u624D\u6709\u610F\u4E49\uFF0C\u5426\u5219\uFF0C\u5C31\u7B97\u662F\u540C\u6837\u7684\u5B57\u8282\u7801\uFF0C\u7531\u4E0D\u540C\u7684\u7C7B\u52A0\u8F7D\u5668\u52A0\u8F7D\uFF0C\u8FD9\u4E24\u4E2A\u7C7B\u4E5F\u4E0D\u662F\u76F8\u7B49\u7684\u3002\u8FD9\u79CD\u7279\u5F81\u4E3A\u6211\u4EEC\u63D0\u4F9B\u4E86\u9694\u79BB\u673A\u5236\uFF0C\u5728 Tomcat \u670D\u52A1\u5668\u4E2D\u5B83\u662F\u2F17\u5206\u6709\u2F64\u7684</p><h4 id="urlclassloader"><a class="header-anchor" href="#urlclassloader" aria-hidden="true">#</a> URLClassLoader</h4><p>\u6211\u4EEC\u5728\u4F7F\u2F64\u2F83\u5B9A\u4E49\u7C7B\u52A0\u8F7D\u53BB\u52A0\u8F7D\u7C7B\u65F6\uFF0C\u6211\u4EEC\u9700\u8981\u6307\u660E\u8BE5\u53BB\u54EA\u4E9B\u8D44\u6E90\u4E2D\u8FDB\u2F8F\u52A0\u8F7D\uFF0C\u6240\u4EE5JDK\u63D0\u4F9B\u4E86URLClassLoader\u6765\u2F45\u4FBF\u6211\u4EEC\u4F7F\u2F64\uFF0C\u6211\u4EEC\u5728\u521B\u5EFAURLClassLoader\u65F6\u9700\u8981\u4F20\u2F0A\u2F00\u4E9BURLs\uFF0C\u7136\u540E\u5728\u4F7F\u2F64\u8FD9\u4E2AURLClassLoader\u52A0\u8F7D\u7C7B\u65F6\u5C31\u4F1A\u4ECE\u8FD9\u4E9B\u8D44\u6E90\u4E2D\u53BB\u52A0\u8F7D</p><h4 id="tomcat\u4E2D\u7C7B\u52A0\u8F7D\u5668\u67B6\u6784"><a class="header-anchor" href="#tomcat\u4E2D\u7C7B\u52A0\u8F7D\u5668\u67B6\u6784" aria-hidden="true">#</a> Tomcat\u4E2D\u7C7B\u52A0\u8F7D\u5668\u67B6\u6784</h4><p><img src="'+ls+`" alt="image-20220225160129037"></p><p>\u89E3\u91CA\uFF1A</p><ul><li>\u4E0A\u9762\u4E09\u4E2A\u662FJVM\u63D0\u4F9B\u7684</li><li>CommonClassLoader\u662F\u7528\u6765\u52A0\u8F7DTomcat\u9700\u8981\u7684\u7C7B</li><li>SharedClassLoader\u662F\u7528\u6765\u52A0\u8F7D\u5728\u5E94\u7528\u4E4B\u95F4\u53EF\u4EE5\u5171\u4EAB\u7684\u7C7B\uFF0C\u6709\u65F6\u5019\u9700\u8981\u53BB\u7236\u7C7B\u4E2D\u53BB\u52A0\u8F7D</li><li>WebAppClassLoader\u662F\u7528\u6765\u52A0\u8F7D\u5E94\u7528\u7684</li></ul><h4 id="tomcat\u4E2D\u81EA\u5B9A\u4E49\u7684\u7C7B\u52A0\u8F7D\u5668"><a class="header-anchor" href="#tomcat\u4E2D\u81EA\u5B9A\u4E49\u7684\u7C7B\u52A0\u8F7D\u5668" aria-hidden="true">#</a> Tomcat\u4E2D\u81EA\u5B9A\u4E49\u7684\u7C7B\u52A0\u8F7D\u5668</h4><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u6BCF\u4E00\u4E2A\u5E94\u7528\u81EA\u5B9A\u4E49\u7C7B\u52A0\u8F7D\u5668\uFF0C\u9694\u79BB\u5E94\u7528</span>
Tomcat\u4E5F\u6709\u81EA\u5DF1\u9700\u8981\u52A0\u8F7D\u7684\u7C7B\uFF0C\u6240\u4EE5\u4E5F\u9700\u8981\u81EA\u5DF1\u7C7B\u52A0\u8F7D\u5668\uFF0CCommonClassLoader\u540D\u5B57\u53EB\u505ACatalinaClassLoader
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Tomcat \u62E5\u6709\u4E0D\u540C\u7684\u2F83\u5B9A\u4E49\u7C7B\u52A0\u8F7D\u5668\uFF0C\u4EE5\u5B9E\u73B0\u5BF9\u5404\u79CD\u8D44\u6E90\u5E93\u7684\u63A7\u5236\u3002\u2F00\u822C\u6765\u8BF4\uFF0CTomcat \u4E3B\u8981\u2F64\u7C7B\u52A0\u8F7D\u5668\u89E3\u51B3\u4EE5\u4E0B 4 \u4E2A\u95EE\u9898</p><ul><li><p>\u540C\u2F00\u4E2ATomcat\u4E2D\uFF0C\u5404\u4E2AWeb\u5E94\u2F64\u4E4B\u95F4\u5404\u2F83\u4F7F\u2F64\u7684Java\u7C7B\u5E93\u8981\u4E92\u76F8\u9694\u79BB</p></li><li><p>\u540C\u2F00\u4E2ATomcat\u4E2D\uFF0C\u5404\u4E2AWeb\u5E94\u2F64\u4E4B\u95F4\u53EF\u4EE5\u63D0\u4F9B\u5171\u4EAB\u7684Java\u7C7B\u5E93</p></li><li><p>\u4E3A\u4E86\u4F7FTomcat\u4E0D\u53D7Web\u5E94\u2F64\u7684\u5F71\u54CD\uFF0C\u5E94\u8BE5\u4F7F\u670D\u52A1\u5668\u7684\u7C7B\u5E93\u4E0E\u5E94\u2F64\u7A0B\u5E8F\u7684\u7C7B\u5E93\u4E92\u76F8\u72EC\u2F74</p></li><li><p>Tomcat\u2F40\u6301\u70ED\u90E8\u7F72</p></li></ul><p>\u5728 Tomcat\u4E2D\uFF0C\u6700\u91CD\u8981\u7684\u2F00\u4E2A\u7C7B\u52A0\u8F7D\u5668\u662F Common \u7C7B\u52A0\u8F7D\u5668\uFF0C\u5B83\u7684\u2F57\u7C7B\u52A0\u8F7D\u5668\u662F\u5E94\u2F64\u7A0B\u5E8F\u7C7B\u52A0\u8F7D\u5668\uFF0C\u8D1F\u8D23\u52A0\u8F7D <code>$CATALINA_ BASE/lib</code>\u3001<code>$CATALINA_HOME/lib</code> \u4E24\u4E2A\u2F6C\u5F55\u4E0B\u6240\u6709\u7684.class \u2F42\u4EF6\u4E0E.jar \u2F42\u4EF6</p><p>Tomcat\u4E2D\u2F00\u822C\u4F1A\u6709\u591A\u4E2AWebApp\u7C7B\u52A0\u8F7D\u5668-<code>WebAppClassLoader</code> \uFF0C\u6BCF\u4E2A\u7C7B\u52A0\u8F7D\u5668\u8D1F\u8D23\u52A0\u8F7D\u2F00\u4E2A Web \u7A0B\u5E8F\u3002\u5B83\u7684\u2F57\u7C7B\u52A0\u8F7D\u5668\u662FCommon\u7C7B\u52A0\u8F7D\u5668</p><p>\u7531\u4E8E\u6BCF\u4E2A Web \u5E94\u2F64\u90FD\u6709\u2F83\u2F30\u7684 WebApp \u7C7B\u52A0\u8F7D\u5668\uFF0C\u5F88\u597D\u5730\u4F7F\u591A\u4E2A Web \u5E94\u2F64\u7A0B\u5E8F\u4E4B\u95F4\u4E92\u76F8\u9694\u79BB\u4E14\u80FD\u901A\u8FC7\u521B\u5EFA\u65B0\u7684 WebApp\u7C7B\u52A0\u8F7D\u5668\u8FBE\u5230\u70ED\u90E8\u7F72\u3002\u8FD9\u79CD\u7C7B\u52A0\u8F7D\u5668\u7ED3\u6784\u80FD\u6709\u6548\u4F7F Tomcat \u4E0D\u53D7 Web \u5E94\u2F64\u7A0B\u5E8F\u5F71\u54CD\uFF0C\u2F7D Common \u7C7B\u52A0\u8F7D\u5668\u7684\u5B58\u5728\u4F7F\u591A\u4E2A Web \u5E94\u2F64\u7A0B\u5E8F\u80FD\u591F\u4E92\u76F8\u5171\u4EAB\u7C7B\u5E93</p><p><img src="`+is+`" alt="image-20220225154032873"></p><p>\u6211\u4EEC\u5148\u6765\u770B<code>WebapplicationClassLoader#loadClass</code></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">loadClass</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">boolean</span> resolve<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">{</span>

    <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token function">getClassLoadingLockInternal</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>log<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;loadClass(&quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&quot;, &quot;</span> <span class="token operator">+</span> resolve <span class="token operator">+</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> clazz <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

        <span class="token comment">// Log access to stopped classloader</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>started<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IllegalStateException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;webappClassLoader.stopped&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// (0) Check our previously loaded local class cache</span>
        <span class="token comment">// \u5148\u68C0\u67E5\u8BE5\u7C7B\u662F\u5426\u5DF2\u7ECF\u88ABWebapp\u7C7B\u52A0\u8F7D\u5668\u52A0\u8F7D\u3002</span>
        clazz <span class="token operator">=</span> <span class="token function">findLoadedClass0</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// map</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>clazz <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>log<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;  Returning class from cache&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>resolve<span class="token punctuation">)</span>
                <span class="token function">resolveClass</span><span class="token punctuation">(</span>clazz<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token punctuation">(</span>clazz<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// (0.1) Check our previously loaded class cache</span>
        <span class="token comment">// \u8BE5\u65B9\u6CD5\u76F4\u63A5\u8C03\u7528findLoadedClass0\u672C\u5730\u65B9\u6CD5\uFF0CfindLoadedClass0\u65B9\u6CD5\u4F1A\u68C0\u67E5JVM\u7F13\u5B58\u4E2D\u662F\u5426\u52A0\u8F7D\u8FC7\u6B64\u7C7B</span>
        clazz <span class="token operator">=</span> <span class="token function">findLoadedClass</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// jvm \u5185\u5B58</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>clazz <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>log<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;  Returning class from cache&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>resolve<span class="token punctuation">)</span>
                <span class="token function">resolveClass</span><span class="token punctuation">(</span>clazz<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token punctuation">(</span>clazz<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// (0.2) Try loading the class with the system class loader, to prevent</span>
        <span class="token comment">//       the webapp from overriding J2SE classes</span>
        <span class="token comment">// \u5C1D\u8BD5\u901A\u8FC7\u7CFB\u7EDF\u7C7B\u52A0\u8F7D\u5668\uFF08AppClassLoader\uFF09\u52A0\u8F7D\u7C7B\uFF0C\u9632\u6B62webapp\u91CD\u5199JDK\u4E2D\u7684\u7C7B</span>
        <span class="token comment">// \u5047\u8BBE\uFF0Cwebapp\u60F3\u81EA\u5DF1\u53BB\u52A0\u8F7D\u4E00\u4E2Ajava.lang.String\u7684\u7C7B\uFF0C\u8FD9\u662F\u4E0D\u5141\u8BB8\u7684\uFF0C\u5FC5\u987B\u5728\u8FD9\u91CC\u8FDB\u884C\u9884\u9632\u3002</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            clazz <span class="token operator">=</span> j2seClassLoader<span class="token punctuation">.</span><span class="token function">loadClass</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// java.lang.Object</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>clazz <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>resolve<span class="token punctuation">)</span>
                    <span class="token function">resolveClass</span><span class="token punctuation">(</span>clazz<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token punctuation">(</span>clazz<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Ignore</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// (0.5) Permission to access this class when using a SecurityManager</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>securityManager <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> i <span class="token operator">=</span> name<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token char">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    securityManager<span class="token punctuation">.</span><span class="token function">checkPackageAccess</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SecurityException</span> se<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">String</span> error <span class="token operator">=</span> <span class="token string">&quot;Security Violation, attempt to use &quot;</span> <span class="token operator">+</span>
                        <span class="token string">&quot;Restricted Class: &quot;</span> <span class="token operator">+</span> name<span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>name<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&quot;BeanInfo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token comment">// BZ 57906: suppress logging for calls from</span>
                        <span class="token comment">// java.beans.Introspector.findExplicitBeanInfo()</span>
                        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span>error<span class="token punctuation">,</span> se<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>error<span class="token punctuation">,</span> se<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ClassNotFoundException</span><span class="token punctuation">(</span>error<span class="token punctuation">,</span> se<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">boolean</span> delegateLoad <span class="token operator">=</span> delegate <span class="token operator">||</span> <span class="token function">filter</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u59D4\u6258--true</span>

        <span class="token comment">// (1) Delegate to our parent if requested</span>
        <span class="token comment">// \u662F\u5426\u59D4\u6D3E\u7ED9\u7236\u7C7B\u53BB\u52A0\u8F7D</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>delegateLoad<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>log<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;  Delegating to parent classloader1 &quot;</span> <span class="token operator">+</span> parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                clazz <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>clazz <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>log<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;  Loading class from parent&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>resolve<span class="token punctuation">)</span>
                        <span class="token function">resolveClass</span><span class="token punctuation">(</span>clazz<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span> <span class="token punctuation">(</span>clazz<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// Ignore</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// (2) Search local repositories</span>
        <span class="token comment">// \u4ECEwebapp\u5E94\u7528\u5185\u90E8\u8FDB\u884C\u52A0\u8F7D</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>log<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;  Searching local repositories&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            clazz <span class="token operator">=</span> <span class="token function">findClass</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// classes,lib</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>clazz <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>log<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;  Loading class from local repository&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>resolve<span class="token punctuation">)</span>
                    <span class="token function">resolveClass</span><span class="token punctuation">(</span>clazz<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token punctuation">(</span>clazz<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Ignore</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// (3) Delegate to parent unconditionally</span>
        <span class="token comment">// \u5982\u679Cwebapp\u5E94\u7528\u5185\u90E8\u6CA1\u6709\u52A0\u8F7D\u5230\u7C7B\uFF0C\u90A3\u4E48\u65E0\u6761\u4EF6\u59D4\u6258\u7ED9\u7236\u7C7B\u8FDB\u884C\u52A0\u8F7D</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>delegateLoad<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>log<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;  Delegating to parent classloader at end: &quot;</span> <span class="token operator">+</span> parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                clazz <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>clazz <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>log<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;  Loading class from parent&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>resolve<span class="token punctuation">)</span>
                        <span class="token function">resolveClass</span><span class="token punctuation">(</span>clazz<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span> <span class="token punctuation">(</span>clazz<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// Ignore</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ClassNotFoundException</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><code>findLoadedClass0</code> \u5148\u68C0\u67E5\u8BE5\u7C7B\u662F\u5426\u5DF2\u7ECF\u88ABWebapp\u7C7B\u52A0\u8F7D\u5668\u52A0\u8F7D</li></ol><p>\u5148\u5C06<code>.</code>\u8F6C\u6362\u6210<code>/</code>\u53D8\u6210\u76EE\u5F55\uFF0C\u7136\u540E\u5728Tomcat\u81EA\u5DF1\u8BBE\u8BA1\u7684\u4E00\u4E2A\u5B58\u50A8Class\u6587\u4EF6\u76F8\u5173\u7684\u4FE1\u606F\u7684Map\u4E2D\u5BFB\u627E</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u8FD9\u662FTomcat\u81EA\u5DF1\u8BBE\u8BA1\u7684\uFF0C\u548CJVM\u6CA1\u6709\u5173\u7CFB</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">findLoadedClass0</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token comment">//com.luban.Test</span>
    <span class="token class-name">String</span> path <span class="token operator">=</span> <span class="token function">binaryNameToPath</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// com/luban/Test</span>
    <span class="token class-name">ResourceEntry</span> entry <span class="token operator">=</span> resourceEntries<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>entry <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> entry<span class="token punctuation">.</span>loadedClass<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// FIXME - findLoadedResource()</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><code>findLoadedClass</code> \u8BE5\u65B9\u6CD5\u76F4\u63A5\u8C03\u7528findLoadedClass0\u672C\u5730\u65B9\u6CD5\uFF0CfindLoadedClass0\u65B9\u6CD5\u4F1A\u68C0\u67E5JVM\u7F13\u5B58\u4E2D\u662F\u5426\u52A0\u8F7D\u8FC7\u6B64\u7C7B</li></ol><p><img src="`+us+`" alt="image-20220225155628976"></p><ol start="3"><li><p><code>clazz = j2seClassLoader.loadClass(name)</code> \u5C1D\u8BD5\u901A\u8FC7\u7CFB\u7EDF\u7C7B\u52A0\u8F7D\u5668\uFF08AppClassLoader\uFF09\u52A0\u8F7D\u7C7B\uFF0C\u9632\u6B62webapp\u91CD\u5199JDK\u4E2D\u7684\u7C7B\uFF0C\u5047\u8BBE\uFF0Cwebapp\u60F3\u81EA\u5DF1\u53BB\u52A0\u8F7D\u4E00\u4E2Ajava.lang.String\u7684\u7C7B\uFF0C\u8FD9\u662F\u4E0D\u5141\u8BB8\u7684\uFF0C\u5FC5\u987B\u5728\u8FD9\u91CC\u8FDB\u884C\u9884\u9632</p></li><li><p><code>securityManager.checkPackageAccess(name.substring(0,i))</code> \u548C\u5B89\u5168\u7BA1\u7406\u5668\u6709\u5173\uFF0C\u9700\u8981\u8BBF\u95EE\u7684\u7C7BTomcat\u80FD\u4E0D\u80FD\u8BBF\u95EE</p></li><li><p>\u662F\u5426\u59D4\u6D3E\u7ED9\u7236\u7C7B\u53BB\u52A0\u8F7D</p></li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>delegateLoad<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>log<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;  Delegating to parent classloader1 &quot;</span> <span class="token operator">+</span> parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        clazz <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>clazz <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>log<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;  Loading class from parent&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>resolve<span class="token punctuation">)</span>
                <span class="token function">resolveClass</span><span class="token punctuation">(</span>clazz<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token punctuation">(</span>clazz<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Ignore</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="6"><li>\u4ECEwebapp\u5E94\u7528\u5185\u90E8\u8FDB\u884C\u52A0\u8F7D</li></ol><p><code>findClass</code>\u51FD\u6570\u4E2D\u52A0\u8F7DClass</p><p>\u4E00\u4E2A\u5E94\u7528\u56FA\u5B9A\u4ECEWEB-INF\u4E0B\u7684classes\u76EE\u5F55\u548Clib\u76EE\u5F55\u53BB\u52A0\u8F7D\uFF0C\u5982\u679C\u8BF4\u9700\u8981\u4ECE\u5176\u4ED6\u7684\u76EE\u5F55\u4E2D\u52A0\u8F7D\uFF0C\u4E5F\u662F\u53EF\u4EE5\u7684</p><p><img src="`+ks+'" alt="image-20220225161523064"></p><p>\u6838\u5FC3\u662F\u4E0B\u9762\u7684<code>clazz = findClassInternal(name)</code>\u7528\u6765\u52A0\u8F7DClass</p><ul><li>\u4E5F\u662F\u5148\u4ECETomcat\u5B58\u50A8\u7C7B\u7684Map\u4E2D\u53BB\u5BFB\u627E\uFF0C\u5982\u679C\u627E\u5230\u76F4\u63A5\u8FD4\u56DE</li><li>\u627E\u4E0D\u5230\u5728\u901A\u8FC7\u81EA\u5DF1\u53BB\u52A0\u8F7DWEB-INF\u4E0B\u7684lib\u548Cclasses\u76EE\u5F55\u4E2D\u53BB\u52A0\u8F7D</li></ul><p><img src="'+rs+`" alt="image-20220225162520292"></p><ul><li>\u6BCF\u52A0\u8F7D\u4E00\u4E2A\u6587\u4EF6\uFF0C\u5C31\u4FDD\u5B58\u6700\u8FD1\u4E00\u6B21\u4FEE\u6539\u65F6\u95F4</li></ul><ol start="6"><li>\u5982\u679Cwebapp\u5E94\u7528\u5185\u90E8\u6CA1\u6709\u52A0\u8F7D\u5230\u7C7B\uFF0C\u90A3\u4E48\u65E0\u6761\u4EF6\u59D4\u6258\u7ED9\u7236\u7C7B\u8FDB\u884C\u52A0\u8F7D</li><li>\u5982\u679C\u5230\u6700\u540E\u90FD\u6CA1\u6709\u52A0\u8F7D\u51FA\u6765\uFF0C\u5219\u629B\u51FA\u5F02\u5E38</li></ol><h5 id="\u70ED\u52A0\u8F7D"><a class="header-anchor" href="#\u70ED\u52A0\u8F7D" aria-hidden="true">#</a> \u70ED\u52A0\u8F7D</h5><p>\u5728server.xml\u7684context\u8282\u70B9\u4E2D\u8BBE\u7F6E<code>reloadable=&quot;true&quot;</code>\u5C31\u53EF\u4EE5\u5B9E\u73B0\u70ED\u52A0\u8F7D\uFF0C\u5E94\u7528\u4E2D\u7684class\u6587\u4EF6\u6216\u8005jar\u5305\u6587\u4EF6\u53D1\u751F\u53D8\u5316\uFF0C\u5C31\u4F1A\u628A\u65B0\u7684class\u6587\u4EF6\u52A0\u5165\u5230\u5E94\u7528\u4E2D</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Context</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/ServletDemoHello##2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">reloadable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token attr-name">docBase</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>D:\\IdeaProjects\\ServletDemo\\target\\classes<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u90A3\u4E48\u5B83\u7684\u5B9E\u73B0\u5728\u54EA\u91CC\u5462\uFF1F</p><p>\u5728<code>WebappLoader#backgroundProcess</code>\u4E2D\u5B9E\u73B0</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">backgroundProcess</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>reloadable <span class="token operator">&amp;&amp;</span> <span class="token function">modified</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>container<span class="token punctuation">.</span><span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;\u89E6\u53D1\u4E86\u70ED\u52A0\u8F7D&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>setContextClassLoader
                <span class="token punctuation">(</span><span class="token class-name">WebappLoader</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>container <span class="token keyword">instanceof</span> <span class="token class-name">StandardContext</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">StandardContext</span><span class="token punctuation">)</span> container<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>container<span class="token punctuation">.</span><span class="token function">getLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>setContextClassLoader
                    <span class="token punctuation">(</span>container<span class="token punctuation">.</span><span class="token function">getLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">closeJARs</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9700\u8981\u6709\u4E00\u4E2A\u7EBF\u7A0B\u53BB\u76D1\u542C\u6587\u4EF6\u662F\u5426\u53D1\u751F\u53D8\u5316\uFF0C\u8FD9\u91CC\u5C31\u7528\u5230\u4E86\u521A\u624D\u6211\u4EEC\u8BB0\u5F55\u4E86class\u6587\u4EF6\u6700\u540E\u53D1\u751F\u53D8\u5316\u7684\u65F6\u95F4\u7684\u96C6\u5408</p><p><img src="`+ds+`" alt="image-20220225164656756"></p><p>\u8C03\u7528\u5230<code>classLoader.modified()</code>\u68C0\u67E5\u6587\u4EF6\u662F\u5426\u6709\u53D1\u751F\u53D8\u5316</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">modified</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>log<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;modified()&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Checking for modified loaded resources</span>
    <span class="token comment">// \u5F53\u524D\u5DF2\u7ECF\u88AB\u52A0\u8F7D\u4E86\u7684class\u7684\u8DEF\u5F84</span>
    <span class="token keyword">int</span> length <span class="token operator">=</span> paths<span class="token punctuation">.</span>length<span class="token punctuation">;</span>

    <span class="token comment">// A rare race condition can occur in the updates of the two arrays</span>
    <span class="token comment">// It&#39;s totally ok if the latest class added is not checked (it will</span>
    <span class="token comment">// be checked the next time</span>
    <span class="token comment">// \u5F53\u524D\u5DF2\u7ECF\u88AB\u52A0\u8F7D\u4E86\u7684\u7C7B\u5BF9\u5E94\u7684\u6587\u4EF6\u6216jar\u7684\u6700\u8FD1\u4FEE\u6539\u65F6\u95F4</span>
    <span class="token keyword">int</span> length2 <span class="token operator">=</span> lastModifiedDates<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>length <span class="token operator">&gt;</span> length2<span class="token punctuation">)</span>
        length <span class="token operator">=</span> length2<span class="token punctuation">;</span>

    <span class="token comment">// \u904D\u5386\u5DF2\u7ECF\u88AB\u52A0\u8F7D\u4E86\u7684</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5F53\u524D\u8FD9\u4E2A\u6587\u4EF6\u7684\u6700\u8FD1\u4FEE\u6539\u65F6\u95F4</span>
            <span class="token keyword">long</span> lastModified <span class="token operator">=</span>
                        <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ResourceAttributes</span><span class="token punctuation">)</span> resources<span class="token punctuation">.</span><span class="token function">getAttributes</span><span class="token punctuation">(</span>paths<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                                <span class="token punctuation">.</span><span class="token function">getLastModified</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// \u5982\u679C\u548C\u4E4B\u524D\u7684\u4E0D\u76F8\u7B49</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>lastModified <span class="token operator">!=</span> lastModifiedDates<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span> log<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>
                        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;  Resource &#39;&quot;</span> <span class="token operator">+</span> paths<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
                                <span class="token operator">+</span> <span class="token string">&quot;&#39; was modified; Date is now: &quot;</span>
                                <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Date</span><span class="token punctuation">(</span>lastModified<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; Was: &quot;</span>
                                <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Date</span><span class="token punctuation">(</span>lastModifiedDates<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NamingException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5982\u679C\u6CA1\u6709\u627E\u5230\u8FD9\u4E2A\u6587\u4EF6\uFF0C\u5219\u6587\u4EF6\u88AB\u5220\u6389\u4E86</span>
            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;    Resource &#39;&quot;</span> <span class="token operator">+</span> paths<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">&quot;&#39; is missing&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5F53\u524D\u5E94\u7528\u7684jar\u7684\u4E2A\u6570</span>
    length <span class="token operator">=</span> jarNames<span class="token punctuation">.</span>length<span class="token punctuation">;</span>

    <span class="token comment">// Check if JARs have been added or removed</span>
    <span class="token comment">// \u68C0\u67E5\u662F\u5426\u6709jar\u5305\u6DFB\u52A0\u6216\u5220\u9664</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getJarPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5F53\u524D\u5B58\u5728\u7684jar\u5305</span>
            <span class="token class-name">NamingEnumeration</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Binding</span><span class="token punctuation">&gt;</span></span> enumeration <span class="token operator">=</span>
                resources<span class="token punctuation">.</span><span class="token function">listBindings</span><span class="token punctuation">(</span><span class="token function">getJarPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>enumeration<span class="token punctuation">.</span><span class="token function">hasMoreElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> length<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">NameClassPair</span> ncPair <span class="token operator">=</span> enumeration<span class="token punctuation">.</span><span class="token function">nextElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">String</span> name <span class="token operator">=</span> ncPair<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// Ignore non JARs present in the lib folder</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>name<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&quot;.jar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token keyword">continue</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>name<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>jarNames<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// Missing JAR</span>
                    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;    Additional JARs have been added : &#39;&quot;</span>
                             <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                i<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>enumeration<span class="token punctuation">.</span><span class="token function">hasMoreElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">while</span> <span class="token punctuation">(</span>enumeration<span class="token punctuation">.</span><span class="token function">hasMoreElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">NameClassPair</span> ncPair <span class="token operator">=</span> enumeration<span class="token punctuation">.</span><span class="token function">nextElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">String</span> name <span class="token operator">=</span> ncPair<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">// Additional non-JAR files are allowed</span>
                    <span class="token comment">// \u65B0\u589E\u4E86jar\u5305</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>name<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&quot;.jar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token comment">// There was more JARs</span>
                        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;    Additional JARs have been added&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> jarNames<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// There was less JARs</span>
                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;    Additional JARs have been added&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NamingException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>log<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;    Failed tracking modifications of &#39;&quot;</span>
                    <span class="token operator">+</span> <span class="token function">getJarPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassCastException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;    Failed tracking modifications of &#39;&quot;</span>
                      <span class="token operator">+</span> <span class="token function">getJarPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;&#39; : &quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>

    <span class="token comment">// No classes have been modified</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u70ED\u90E8\u7F72\u8FC7\u7A0B\uFF1A</p><p>\u5148\u5C06<code>webappclassloader</code>\u8BBE\u7F6E\u6210null\uFF0C\u7136\u540E\u91CD\u65B0<code>new webappclassloader</code>\uFF0C\u91CD\u65B0\u52A0\u8F7Dclass\u7C7B</p><p>\u6BD4\u5982\u8BF4\uFF0C\u5E94\u7528\u4E2D\u6709\u4E00\u4E2A\u7C7BTest\uFF0C\u88AB\u8001\u7684webappclassloader\u52A0\u8F7D\u4E86\uFF0C\u5F53\u6211\u4EEC\u628ATest.class\u6587\u4EF6\u4FEE\u6539\u4E4B\u540E\uFF0C\u5982\u679C\u6211\u4EEC\u8FD8\u662F\u4F7F\u7528\u8001\u7684webappclassloader\u52A0\u8F7D\u7684\u8BDD\uFF0C\u5C31\u4F1A\u51FA\u73B0\u95EE\u9898\uFF0C\u52A0\u8F7D\u4E0D\u5230\uFF0C\u6240\u4EE5\u9700\u8981\u65B0\u7684webappclassloader\u6765\u52A0\u8F7D</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u70ED\u90E8\u7F72\u5F00\u53D1\u7684\u65F6\u5019\u4F7F\u7528\u5C31\u597D\u4E86\uFF0C\u56E0\u4E3A\u8001\u7684webappclassloader\u5BF9\u8C61\u5F88\u96BE\u88AB\u56DE\u6536\u7684\uFF0C\u5728\u91CC\u9762\u7684class\u5BF9\u8C61\u5F88\u96BE\u88AB\u56DE\u6536\u7684</span>
\u70ED\u90E8\u7F72\u76F8\u5F53\u4E8E\u4E4B\u524D\u7684\u5E94\u7528\u5DF2\u7ECF\u88AB\u6539\u4E86\uFF0C\u6240\u4EE5\u76F8\u5F53\u4E8E\u65B0\u5F00\u7684\u5E94\u7528
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5047\u5982\u8BF4\u6211\u4EEC\u8981\u4FEE\u6539Context\u914D\u7F6E\u7684\u8BDD\uFF0C\u90A3\u4E48\u4E5F\u4F1A\u91CD\u65B0\u70ED\u90E8\u7F72\uFF0C\u4F46\u662F\u5728server.xml\u4E2D\u4FEE\u6539Context\u662F\u6CA1\u6709\u7528\u7684</p><p>\u9700\u8981\u5728<code>Conf/Catalina/localhost</code>\u76EE\u5F55\u4E0B\u5BF9\u5E94\u7684\u6587\u4EF6\u4E2D\u4FEE\u6539\uFF0C\u624D\u4F1A\u6709\u6548\uFF0C\u56E0\u4E3A\u70ED\u90E8\u7F72\u76D1\u63A7\u7684\u76EE\u5F55\u662F<code>Conf/Catalina/localhost</code></p><p><img src="`+vs+'" alt="image-20220225171930856"></p><h3 id="\u5B89\u5168\u673A\u5236"><a class="header-anchor" href="#\u5B89\u5168\u673A\u5236" aria-hidden="true">#</a> \u5B89\u5168\u673A\u5236</h3><p>Tomcat\u4E2D\u8BBE\u7F6E\u4E86\u4E86\u2F00\u4E9B\u5B89\u5168\u7B56\u7565\uFF0C\u9ED8\u8BA4\u7684\u7B56\u7565\u2F42\u4EF6\u4E3Aconf/catalina.policy</p><p><img src="'+ms+'" alt="image-20220225163929644"></p><p>Tomcat\u4E2D\u8BBE\u7F6E\u4E86\u5B89\u5168\u7B56\u7565\uFF0C\u89C4\u5B9A\u4E86Tomcat\u5728\u8FD0\u2F8F\u8FC7\u7A0B\u4E2D\u62E5\u6709\u7684\u6743\u9650\uFF0CTomcat\u7BA1\u7406\u8005\u53EF\u4EE5\u4FEE\u6539\u8BE5\u6743\u9650\uFF0C\u4F46\u662FTomcat\u4E2D\u6709\u2F00\u4E9B\u7C7B\u662F\u5FC5\u987B\u80FD\u591F\u88AB\u8BBF\u95EE\u5230\u7684\uFF0C\u6240\u6709Tomcat\u4E2D\u5728\u542F\u52A8\u8FC7\u7A0B\u4E2D\u4F1A\u63D0\u524D\u53BB\u52A0\u8F7D\u8FD9\u4E9B\u7C7B\uFF0C\u5982\u679C\u53D1\u73B0\u6CA1\u6709\u5BF9\u5E94\u7684\u6743\u9650\uFF0C\u90A3\u4E48\u5C06\u4F1A\u542F\u52A8\u5931\u8D25</p><h2 id="\u5904\u7406\u4E0E\u542F\u52A8\u8FC7\u7A0B\u6E90\u7801\u5B9E\u73B0"><a class="header-anchor" href="#\u5904\u7406\u4E0E\u542F\u52A8\u8FC7\u7A0B\u6E90\u7801\u5B9E\u73B0" aria-hidden="true">#</a> \u5904\u7406\u4E0E\u542F\u52A8\u8FC7\u7A0B\u6E90\u7801\u5B9E\u73B0</h2><p>\u542F\u52A8\u4EE3\u7801\u6211\u4EEC\u90FD\u662F\u4F7F\u7528\u811A\u672C\u7684\u65B9\u5F0F\u53BB\u542F\u52A8\u7684\uFF0C\u6BD4\u5982\u5982\u679C\u6211\u4EEC\u8FD0\u884Cstartup.bat\u5C31\u4F1A\u8C03\u7528catalina.sh\u811A\u672C\uFF0C\u6240\u4EE5\u5173\u952E\u4E3B\u8981\u662Fcatalina.sh</p><p><img src="'+bs+'" alt="image-20220226153947177"></p><p>\u56E0\u4E3ATomcat\u662F\u4F7F\u7528java\u5199\u7684\uFF0C\u6240\u4EE5catalina.sh\u6700\u540E\u5C31\u9700\u8981\u80FD\u7FFB\u8BD1\u6210<code>java MainClass args</code>\u7684\u65B9\u5F0F\u6765\u542F\u52A8main\u65B9\u6CD5</p><p><img src="'+fs+`" alt="image-20220226154512613"></p><p>\u8C03\u7528<code>org.apache.catalina.startup.Bootstrap</code>\u91CC\u9762\u7684main\u65B9\u6CD5\u7684\u65F6\u5019\u4F1A\u4F20\u8FDB\u53BB\u4E00\u4E2Astart\u7684\u5B57\u7B26\u4E32</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span> args<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>daemon <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Don&#39;t set daemon until init() has completed</span>
        <span class="token class-name">Bootstrap</span> bootstrap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Bootstrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            bootstrap<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// catalinaaemon</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">handleThrowable</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
            t<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        daemon <span class="token operator">=</span> bootstrap<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// When running as a service the call to stop will be on a new</span>
        <span class="token comment">// thread so make sure the correct class loader is used to prevent</span>
        <span class="token comment">// a range of class not found exceptions.</span>
        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setContextClassLoader</span><span class="token punctuation">(</span>daemon<span class="token punctuation">.</span>catalinaLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> command <span class="token operator">=</span> <span class="token string">&quot;start&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>args<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            command <span class="token operator">=</span> args<span class="token punctuation">[</span>args<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>command<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;startd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            args<span class="token punctuation">[</span>args<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;start&quot;</span><span class="token punctuation">;</span>
            daemon<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
            daemon<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>command<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;stopd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            args<span class="token punctuation">[</span>args<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;stop&quot;</span><span class="token punctuation">;</span>
            daemon<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>command<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;start&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            daemon<span class="token punctuation">.</span><span class="token function">setAwait</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u8BBE\u7F6E\u963B\u585E\u6807\u5FD7</span>
            daemon<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// \u89E3\u6790server.xml,\u521D\u59CB\u5316Catalina</span>
            daemon<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> daemon<span class="token punctuation">.</span><span class="token function">getServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>command<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;stop&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            daemon<span class="token punctuation">.</span><span class="token function">stopServer</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>command<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;configtest&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            daemon<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> daemon<span class="token punctuation">.</span><span class="token function">getServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;Bootstrap: command \\&quot;&quot;</span> <span class="token operator">+</span> command <span class="token operator">+</span> <span class="token string">&quot;\\&quot; does not exist.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Unwrap the Exception for clearer error reporting</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>t <span class="token keyword">instanceof</span> <span class="token class-name">InvocationTargetException</span> <span class="token operator">&amp;&amp;</span>
                t<span class="token punctuation">.</span><span class="token function">getCause</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            t <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">getCause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">handleThrowable</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
        t<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>bootstrap.init()</code>\u521D\u59CB\u5316Bootstrap</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Initialize daemon.
 * \u4E3B\u8981\u521D\u59CB\u5316\u7C7B\u52A0\u8F7D\u5668\uFF0C\u5728Tomcat\u7684\u8BBE\u8BA1\u4E2D\uFF0C\u4F7F\u7528\u4E86\u5F88\u591A\u81EA\u5B9A\u4E49\u7684\u7C7B\u52A0\u8F7D\u5668\uFF0C\u5305\u62ECTomcat\u81EA\u5DF1\u672C\u8EAB\u7684\u7C7B\u4F1A\u7531CommonClassLoader\u6765\u52A0\u8F7D\uFF0C\u6BCF\u4E2Awabapp\u7531\u7279\u5B9A\u7684\u7C7B\u52A0\u8F7D\u5668\u6765\u52A0\u8F7D
 */</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">throws</span> <span class="token class-name">Exception</span>
<span class="token punctuation">{</span>

    <span class="token comment">// Set Catalina path</span>
    <span class="token comment">// catalina.home\u8868\u793A\u5B89\u88C5\u76EE\u5F55</span>
    <span class="token comment">// catalina.base\u8868\u793A\u5DE5\u4F5C\u76EE\u5F55</span>
    <span class="token function">setCatalinaHome</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setCatalinaBase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u521D\u59CB\u5316commonLoader\u3001catalinaLoader\u3001sharedLoader</span>
    <span class="token comment">// \u5176\u4E2DcatalinaLoader\u3001sharedLoader\u9ED8\u8BA4\u5176\u5B9E\u5C31\u662FcommonLoader</span>
    <span class="token function">initClassLoaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u8BBE\u7F6E\u7EBF\u7A0B\u7684\u6240\u4F7F\u7528\u7684\u7C7B\u52A0\u8F7D\u5668\uFF0C\u9ED8\u8BA4\u60C5\u51B5\u4E0B\u5C31\u662FcommonLoader</span>
    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setContextClassLoader</span><span class="token punctuation">(</span>catalinaLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5982\u679C\u5F00\u542F\u4E86SecurityManager\uFF0C\u90A3\u4E48\u5219\u8981\u63D0\u524D\u52A0\u8F7D\u4E00\u4E9B\u7C7B</span>
    <span class="token class-name">SecurityClassLoad</span><span class="token punctuation">.</span><span class="token function">securityClassLoad</span><span class="token punctuation">(</span>catalinaLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Load our startup class and call its process() method</span>
    <span class="token comment">// \u52A0\u8F7DCatalina\u7C7B\uFF0C\u5E76\u751F\u6210instance</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>log<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Loading startup class&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> startupClass <span class="token operator">=</span>
        catalinaLoader<span class="token punctuation">.</span>loadClass
        <span class="token punctuation">(</span><span class="token string">&quot;org.apache.catalina.startup.Catalina&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Object</span> startupInstance <span class="token operator">=</span> startupClass<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Set the shared extensions class loader</span>
    <span class="token comment">// \u8BBE\u7F6ECatalina\u5B9E\u4F8B\u7684\u7236\u7EA7\u7C7B\u52A0\u8F7D\u5668\u4E3AsharedLoader(\u9ED8\u8BA4\u60C5\u51B5\u4E0B\u5C31\u662FcommonLoader)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>log<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Setting startup class properties&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> methodName <span class="token operator">=</span> <span class="token string">&quot;setParentClassLoader&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> paramTypes<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    paramTypes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;java.lang.ClassLoader&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Object</span> paramValues<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    paramValues<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> sharedLoader<span class="token punctuation">;</span>
    <span class="token class-name">Method</span> method <span class="token operator">=</span>
        startupInstance<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span>methodName<span class="token punctuation">,</span> paramTypes<span class="token punctuation">)</span><span class="token punctuation">;</span>
    method<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>startupInstance<span class="token punctuation">,</span> paramValues<span class="token punctuation">)</span><span class="token punctuation">;</span>

    catalinaDaemon <span class="token operator">=</span> startupInstance<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u89E3\u6790server-xml"><a class="header-anchor" href="#\u89E3\u6790server-xml" aria-hidden="true">#</a> \u89E3\u6790server.xml</h3><ol><li><p>Catalina catalina = new Catalina(); // \u6CA1\u505A\u5176\u4ED6\u4E8B\u60C5</p></li><li><p>catalina.setAwait(true);</p></li><li><p>\u4EE5\u4E0B\u6B65\u9AA4\u662F\u89E3\u6790servler.xml</p></li><li><p>StandardServer server = new StandardServer(); // \u6CA1\u505A\u5176\u4ED6\u4E8B\u60C5</p></li><li><p>catalina.setServer(server);</p></li><li><p>server.addLifecycleListener(...);</p></li><li><p>StandardService service = new StandardService(); // \u6CA1\u505A\u5176\u4ED6\u4E8B\u60C5</p></li><li><p>server.addService(service);</p></li><li><p>Connector connector = new Connector(); // \u4F1A\u6839\u636E\u914D\u7F6E\u521D\u59CB\u5316protocolHandler</p><ol><li><p>endpoint = new JIoEndpoint(); // \u521D\u59CB\u5316Endpoint\uFF0C JioEndpoint\u4E2D\u4F1AsetMaxConnections(0);</p></li><li><p>cHandler = new Http11ConnectionHandler(this); //</p></li><li><p>((JIoEndpoint) endpoint).setHandler(cHandler); // endpoint\u5BF9\u5E94\u7684\u8FDE\u63A5\u5904\u7406\u5668</p></li></ol></li><li><p>service.addConnector(connector);</p></li><li><p>Engine engine = new StandardEngine(); // pipeline.setBasic(new StandardEngineValve());</p></li><li><p>service.setContainer(engine);</p></li><li><p>Host host = new StandardHost(); // pipeline.setBasic(new StandardHostValve());</p></li><li><p>engine.addChild(host);</p></li><li><p>Context context = new StandardContext(); // pipeline.setBasic(new StandardContextValve());</p></li><li><p>host.addChild(context);</p></li><li><p>engine.setParentClassLoader(Catalina.class.getClassLoader()); // \u5B9E\u9645\u8C03\u2F64\u7684\u662F ContainerBase.setParentClassLoader\u2F45\u6CD5\uFF0C\u8BBE\u7F6E\u5C5E\u6027parentClassLoader\u4E3AshareClassLoader</p></li><li><p>server.setCatalina(catalina);</p></li><li><p>server.init(); // \u5F00\u59CB\u521D\u59CB\u5316</p></li><li><p>catalina.start(); // \u5F00\u59CB\u542F\u52A8</p></li></ol><h4 id="\u603B\u7ED3"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h4><p>\u89E3\u6790server.xml\u6700\u4E3B\u8981\u7684\u4F5C\u2F64\u5C31\u662F</p><ol><li><p>\u628Aserver.xml\u4E2D\u5B9A\u4E49\u7684\u8282\u70B9\u90FD\u2F63\u6210\u5BF9\u5E94\u7684java\u5BF9\u8C61\uFF0C\u2F50\u5982\u5728\u89E3\u6790\u67D0\u2F00\u4E2AHost\u8282\u70B9\u65F6\u5C31\u4F1A\u5BF9\u5E94\u2F63\u6210\u2F00\u4E2AStandardHost\u5BF9\u8C61</p></li><li><p>\u628Aserver.xml\u4E2D\u5B9A\u4E49\u7684\u8282\u70B9\u7684\u5C42\u7EA7\u5173\u7CFB\u89E3\u6790\u51FA\u6765\uFF0C\u2F50\u5982StandardContext\u5BF9\u8C61.addChild(StandardHost\u5BF9\u8C61)</p></li><li><p>\u8BBE\u7F6E\u6BCF\u4E2A\u5BB9\u5668\u7684pipeline\u7684\u57FA\u7840Valve</p></li></ol><h3 id="\u521D\u59CB\u5316"><a class="header-anchor" href="#\u521D\u59CB\u5316" aria-hidden="true">#</a> \u521D\u59CB\u5316</h3><p>Tomcat\u521D\u59CB\u5316\u4E3B\u8981\u505A\u4E86\u4EE5\u4E0B\u4E8B\u60C5\uFF1A</p><ol><li><p>\u5C06StandardServer\u5B9E\u4F8B\u6CE8\u518C\u5230JMX</p></li><li><p>\u5C06StringCache\u5B9E\u4F8B\u6CE8\u518C\u5230JMX</p></li><li><p>\u5C06StandardService\u5B9E\u4F8B\u6CE8\u518C\u5230JMX</p></li><li><p>container.init(); // \u5BF9StandardEngine\u8FDB\u2F8F\u521D\u59CB\u5316</p><ol><li>\u521D\u59CB\u5316startStopExecutor\u7EBF\u7A0B\u6C60\uFF0C\u2F64\u6765\u542F\u52A8\u2F26\u5BB9\u5668\u7684</li></ol></li><li><p>connector.init(); // \u5BF9Connector\u8FDB\u2F8F\u521D\u59CB\u5316</p><ol><li><p>adapter = new CoyoteAdapter(this);</p></li><li><p>protocolHandler.setAdapter(adapter);</p></li><li><p>protocolHandler.init(); // \u521D\u59CB\u5316\u534F\u8BAE\u5904\u7406\u5668</p><ol><li><p>endpoint.init(); // \u521D\u59CB\u5316\u534F\u8BAE\u5904\u7406\u5668\u5BF9\u5E94\u7684endpoint\uFF0C\u9ED8\u8BA4\u5728\u521D\u59CB\u5316\u7684\u65F6\u5019\u5C31\u4F1Abind</p><ol><li><p>endpoint.bind()</p><ol><li><p>serverSocketFactory = new DefaultServerSocketFactory(this);</p></li><li><p>serverSocket = serverSocketFactory.createSocket(getPort(), getBacklog(), getAddress());</p></li></ol></li></ol></li></ol></li><li><p>mapperListener.init(); // \u6CA1\u505A\u4EC0\u4E48\u5176\u4ED6\u7684</p></li></ol></li></ol><h4 id="\u603B\u7ED3-1"><a class="header-anchor" href="#\u603B\u7ED3-1" aria-hidden="true">#</a> \u603B\u7ED3</h4><p>\u521D\u59CB\u5316\u505A\u5F97\u4E8B\u60C5\u2F50\u8F83\u5C11\uFF0C\u6700\u91CD\u8981\u7684\u53EF\u80FD\u5C31\u662Fendpoint\u7684bind\u7684\u4E86</p><h3 id="\u542F\u52A8"><a class="header-anchor" href="#\u542F\u52A8" aria-hidden="true">#</a> \u542F\u52A8</h3><h4 id="\u603B\u7ED3-2"><a class="header-anchor" href="#\u603B\u7ED3-2" aria-hidden="true">#</a> \u603B\u7ED3</h4><p>\u542F\u52A8\u505A\u7684\u4E8B\u60C5\u5C31\u2F50\u8F83\u591A\u4E86\uFF0C\u4E3B\u8981\u5206\u4E3A\u4EE5\u4E0B\u2F0F\u2F24\u6B65\u9AA4</p><h5 id="\u542F\u52A8\u5BB9\u5668"><a class="header-anchor" href="#\u542F\u52A8\u5BB9\u5668" aria-hidden="true">#</a> \u542F\u52A8\u5BB9\u5668</h5><p>\u542F\u52A8\u5BB9\u5668\u4E3B\u8981\u662F\u90E8\u7F72\u5E94\u2F64\uFF0C\u90E8\u7F72\u5E94\u2F64\u5206\u4E3A\u4E24\u90E8\u5206\uFF1A</p><ol><li><p>\u90E8\u7F72server.xml\u4E2D\u5B9A\u4E49\u7684Context</p></li><li><p>\u90E8\u7F72webapp\u2F42\u4EF6\u5939\u4E0B\u7684Context</p></li></ol><p>\u90E8\u7F72\u2F00\u4E2A\u5E94\u2F64\u4E3B\u8981\u5206\u4E3A\u4EE5\u4E0B\u6B65\u9AA4</p><ol><li><p>\u2F63\u6210Context\u5BF9\u8C61\uFF0Cserver.xml\u4E2D\u5B9A\u4E49\u7684Context\u5728\u89E3\u6790server.xml\u65F6\u5C31\u5DF2\u7ECF\u2F63\u6210\u4E86\uFF0Cwebapp\u2F42\u4EF6\u5939\u4E0B\u7684\u662F\u5728\u90E8\u7F72\u4E4B\u524D\u2F63\u6210\u7684</p></li><li><p>\u4E3A\u6BCF\u4E2A\u5E94\u2F64\u2F63\u6210\u2F00\u4E2AWebappClassLoader</p></li><li><p>\u89E3\u6790web.xml</p></li><li><p>\u8BBE\u7F6EContext\u5BF9\u8C61\u4E2D\u7684\u5C5E\u6027\uFF0C\u2F50\u5982\u6709\u54EA\u4E9BWrapper</p></li></ol><h5 id="\u542F\u52A8connector"><a class="header-anchor" href="#\u542F\u52A8connector" aria-hidden="true">#</a> \u542F\u52A8Connector</h5><p>\u4E3B\u8981\u662F\uFF1A</p><ol><li><p>\u542F\u52A8Endpoint\u5F00\u59CB\u63A5\u6536\u8BF7\u6C42</p></li><li><p>\u6784\u9020Mapper\u5BF9\u8C61\uFF0C\u2F64\u6765\u5904\u7406\u8BF7\u6C42\u65F6\uFF0C\u5FEB\u901F\u89E3\u6790\u51FA\u5F53\u524D\u8BF7\u6C42\u5BF9\u5E94\u54EA\u4E2AContext\uFF0C\u54EA\u4E2AWrapper</p></li></ol>`,556);function ws(ys,Ss){return hs}var qs=n(gs,[["render",ws],["__file","tomcat\u5256\u6790.html.vue"]]);export{qs as default};
