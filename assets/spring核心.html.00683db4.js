import{_ as e,r as p,o,a as c,b as n,d as i,F as l,c as s,e as a}from"./app.406a4cec.js";var u="/naive-dafou-ui-dist/assets/image-20220215203148246.c6e4a5a2.png",k="/naive-dafou-ui-dist/assets/image-20220215234813962.a9f777d8.png",r="/naive-dafou-ui-dist/assets/image-20220215220501624.bafa914a.png",d="/naive-dafou-ui-dist/assets/image-20220215224054301.34866a9e.png",v="/naive-dafou-ui-dist/assets/image-20220215235054550.2a7fa87e.png",m="/naive-dafou-ui-dist/assets/image-20220215232919100.6b59d649.png",b="/naive-dafou-ui-dist/assets/image-20220215232948152.c982cbfb.png",g="/naive-dafou-ui-dist/assets/image-20220212113916426.dd22ba11.png",y="/naive-dafou-ui-dist/assets/image-20220216211909851.4ed7e73b.png",f="/naive-dafou-ui-dist/assets/image-20220216212415359.1e464d46.png",w="/naive-dafou-ui-dist/assets/image-20220216212606089.e2e562ff.png",B="/naive-dafou-ui-dist/assets/image-20220212131557589.8f59a7ab.png",h="/naive-dafou-ui-dist/assets/image-20220216221757197.f19d96e8.png",C="/naive-dafou-ui-dist/assets/image-20220216221846907.77ab9e96.png",P="/naive-dafou-ui-dist/assets/image-20220212131938861.9a99b427.png",A="/naive-dafou-ui-dist/assets/image-20220212132038585.2752a0f5.png",S="/naive-dafou-ui-dist/assets/image-20220212133122666.4116c5c4.png",x="/naive-dafou-ui-dist/assets/image-20220212140036887.11870df5.png",D="/naive-dafou-ui-dist/assets/image-20220216230241282.960882bb.png",F="/naive-dafou-ui-dist/assets/image-20220217125157445.05879c55.png",N="/naive-dafou-ui-dist/assets/image-20220216223559178.28e05ed3.png",j="/naive-dafou-ui-dist/assets/image-20220217134653475.354479f8.png",E="/naive-dafou-ui-dist/assets/image-20220217161617522.cf2552e3.png",q="/naive-dafou-ui-dist/assets/image-20220217154643717.a96a859e.png",R="/naive-dafou-ui-dist/assets/image-20220217204122861.fe520034.png",O="/naive-dafou-ui-dist/assets/image-20220217204257387.4ea57496.png",I="/naive-dafou-ui-dist/assets/image-20220217211219221.68880a08.png",M="/naive-dafou-ui-dist/assets/image-20220217221527733.d082db46.png",L="/naive-dafou-ui-dist/assets/image-20220218154221998.c2811b15.png",T="/naive-dafou-ui-dist/assets/image-20220218225501087.6bd0ee89.png",_="/naive-dafou-ui-dist/assets/image-20220219130912878.91e4e7ee.png",U="/naive-dafou-ui-dist/assets/image-20220219130931916.03f52f84.png",H="/naive-dafou-ui-dist/assets/image-20220219131211605.7bf19a6b.png",z="/naive-dafou-ui-dist/assets/image-20220219133901219.cc456fd0.png",X="/naive-dafou-ui-dist/assets/image-20220219134022029.6d951264.png";const V={},G=s(`<div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u8BFE\u7A0B\u5927\u7EB2</span>
<span class="token list punctuation">1.</span> spring\u6E90\u7801\u6574\u4F53\u8109\u7EDC\u4ECB\u7ECD\u53CA\u6E90\u7801\u7F16\u8BD1
<span class="token list punctuation">2.</span> springIOC\u7684\u6E90\u7801\u6DF1\u5165\u5B66\u4E60
	<span class="token list punctuation">-</span> IOC\u5BB9\u5668\u52A0\u8F7D\u8FC7\u7A0B-Bean\u7684\u751F\u547D\u5468\u671F\u6E90\u7801\u6DF1\u5EA6\u5256\u6790
	<span class="token list punctuation">-</span> \u5FAA\u73AF\u4F9D\u8D56\u7684\u7EC8\u6781\u8BB2\u89E3
	<span class="token list punctuation">-</span> \u5185\u7F6E\u540E\u7F6EPostProcess\u5904\u7406\u5668\u6DF1\u5EA6\u8BB2\u89E3
	<span class="token list punctuation">-</span> \u76D1\u542C\u5668\u539F\u7406\u5B66\u4E60-Listener
<span class="token list punctuation">3.</span> springAOP\u7684\u6E90\u7801\u6DF1\u5165\u5B66\u4E60
	<span class="token list punctuation">-</span> \u6982\u5FF5\uFF1AAOP\u3001AspectJ\u3001Spring AOP\u7684\u524D\u4E16\u4ECA\u751F
	<span class="token list punctuation">-</span> \u6E90\u7801\uFF1A\u52A0\u8F7D\u5207\u9762\u3001\u521B\u5EFA\u4EE3\u7406\u3001\u8C03\u7528\u4EE3\u7406
<span class="token list punctuation">4.</span> Spring\u58F0\u660E\u5F0F\u4E8B\u52A1\u6E90\u7801\u6DF1\u5165\u5B66\u4E60
	<span class="token list punctuation">-</span> \u6E90\u7801\uFF1A\u52A0\u8F7D\u5207\u9762\u3001\u521B\u5EFA\u4EE3\u7406\u3001\u8C03\u7528\u4EE3\u7406

<span class="token title important"><span class="token punctuation">#</span> \u8BFE\u7A0B\u5185\u5BB9</span>
<span class="token list punctuation">1.</span> spring\u6E90\u7801\u7684\u5B66\u4E60\u4ECB\u7ECD
<span class="token list punctuation">2.</span> spring\u6E90\u7801\u7684\u6574\u4F53\u8109\u7EDC\u68B3\u7406
<span class="token list punctuation">3.</span> \u4EC0\u4E48\u662FBeanFactroy
<span class="token list punctuation">4.</span> BeanFactory\u548CApplicationContext\u7684\u533A\u522B
<span class="token list punctuation">5.</span> \u56FE\u8FF0SpringIOC\u7684\u52A0\u8F7D\u8FC7\u7A0B
<span class="token list punctuation">6.</span> \u56FE\u8FF0Bean\u7684\u751F\u547D\u5468\u671F
<span class="token list punctuation">7.</span> spring\u6E90\u7801\u7F16\u8BD1\u8FC7\u7A0B\u6F14\u793A
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6574\u4F53\u8109\u7EDC\u4ECB\u7ECD\u548C\u7F16\u8BD1"><a class="header-anchor" href="#\u6574\u4F53\u8109\u7EDC\u4ECB\u7ECD\u548C\u7F16\u8BD1" aria-hidden="true">#</a> \u6574\u4F53\u8109\u7EDC\u4ECB\u7ECD\u548C\u7F16\u8BD1</h2><h3 id="\u4ECB\u7ECD"><a class="header-anchor" href="#\u4ECB\u7ECD" aria-hidden="true">#</a> \u4ECB\u7ECD</h3><p>spring\u4F53\u7CFB\u67B6\u6784\uFF08\u57FA\u4E8E4.x\uFF09\uFF0C\u6211\u4EEC\u6240\u8BB2\u7684\u6E90\u7801\u5728\u4F53\u7CFB\u4E2D\u7684\u4F4D\u7F6E</p><p><img src="`+u+`" alt="image-20220215203148246"></p><p>\u6838\u5FC3\u5BB9\u5668</p><ul><li>Beans \u5BF9bean\u7684\u7EF4\u62A4\u7BA1\u7406\uFF0C\u521B\u5EFA\u7B49</li><li>Core \u6838\u5FC3\u5DE5\u5177\uFF0CBeanUtils\u7B49</li><li>Context \u4E0A\u4E0B\u6587\u3001\u4E8B\u4EF6\u3001\u591A\u8BED\u8A00\u3001\u56FD\u9645\u5316\u7B49</li><li>SpEL EL\u8868\u8FBE\u5F0F</li></ul><p>AOP \u5207\u9762</p><p>Aspects spring\u7684AOP\u4E0D\u662F\u81EA\u5BB6\u7684\u4EA7\u54C1\uFF0C\u53EA\u662F\u5F15\u7528Aspects\u7684\u4E00\u4E9B\u6CE8\u89E3\u548C\u5207\u9762\u8868\u8FBE\u5F0F</p><h3 id="\u6574\u4F53\u8109\u7EDC"><a class="header-anchor" href="#\u6574\u4F53\u8109\u7EDC" aria-hidden="true">#</a> \u6574\u4F53\u8109\u7EDC</h3><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> IOC\u662F\u63A7\u5236\u53CD\u8F6C\uFF0C\u662F\u4E00\u79CD\u8BBE\u8BA1\u7406\u5FF5\uFF0C\u7528\u6765\u89E3\u51B3\u5C42\u5C42\u4E4B\u95F4\u6216\u8005\u7C7B\u7C7B\u4E4B\u95F4\u7684\u8026\u5408\u95EE\u9898</span>
\u4E4B\u524D\u662F\u901A\u8FC7\u7EC4\u5408\u6216\u8005\u7EE7\u627F\u7684\u65B9\u5F0F\u8C03\u7528\u9700\u8981\u5F15\u7528\u7684\u7C7B\uFF0C\u52A0\u5165\u6709\u4E00\u5929\u9700\u8981\u5C06\u88AB\u5F15\u7528\u7684\u7C7B\u6539\u53D8\u6210\u5176\u4ED6\u7684\u7C7B\uFF0C\u6B64\u65F6\u5C31\u9700\u8981\u4FEE\u6539\u5F88\u591A\u7684\u5F15\u7528\u7684\u7C7B\u4E2D\u7684\u5BF9\u8C61\uFF0C\u6539\u52A8\u7684\u5730\u65B9\u975E\u5E38\u7684\u591A\uFF0C\u6240\u4EE5\u6211\u4EEC\u5BF9\u4EE3\u7801\u7684\u53D8\u66F4\u8D8A\u5C11\u8D8A\u597D
\u6240\u4EE5\u6211\u4EEC\u5F15\u5165\u63A7\u5236\u53CD\u8F6C\u7684\u601D\u60F3\uFF0Cspring\u4F7F\u7528DI\uFF08\u81EA\u52A8\u6CE8\u5165\uFF09\u7684\u65B9\u5F0F\u5B9E\u73B0\u4E86IOC\uFF08\u63A7\u5236\u53CD\u8F6C\uFF09\uFF0C\u5B9E\u73B0\u89E3\u8026\u548C\u96C6\u4E2D\u7BA1\u7406\u6211\u4EEC\u7684\u5BF9\u8C61
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>springIOC\u52A0\u8F7D\u6D41\u7A0B\u56FE</p><p><img src="`+k+`" alt="image-20220215234813962"></p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u5728\u5F00\u53D1\u4E2D\uFF0C\u5982\u4F55\u5B9E\u73B0\u5C06\u6211\u4EEC\u7684Bean\u4EA4\u7ED9spring\u7BA1\u7406\u5462\uFF1F</span>
<span class="token list punctuation">1.</span> \u914D\u7F6E\u7C7B\u3001\u6216\u8005xml\u7684\u65B9\u5F0F @\u6CE8\u89E3 javaconfig
<span class="token list punctuation">2.</span> \u52A0\u8F7Dspring\u4E0A\u4E0B\u6587
<span class="token list punctuation">-</span> xml:ClassPathXmlApplicationContext(&quot;xml&quot;)
<span class="token list punctuation">-</span> \u6CE8\u89E3\uFF1AAnnotationConfigApplicationContext(Config.class)
<span class="token list punctuation">3.</span> getBean(xxx)\u83B7\u53D6\u6211\u4EEC\u7684Bean
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u6211\u4EEC\u7684\u914D\u7F6E\u751F\u6210Bean\u6700\u6838\u5FC3\u7684\u7C7B\u662F\uFF1ABeanFactory\uFF0C\u662Fspring\u9876\u5C42\u6838\u5FC3\u63A5\u53E3\uFF0C\u4F7F\u7528\u4E86\u7B80\u5355\u5DE5\u5382\u6A21\u5F0F\uFF0C\u6839\u636E\u4E00\u4E2A\u540D\u5B57\u53BB\u751F\u4EA7\u4E0D\u540C\u7684\u5B9E\u4F8B\uFF0C\u8D1F\u8D23\u751F\u4EA7\u4E0D\u540C\u7684Bean</span>
\u5F53\u6211\u4EEC\u8C03\u7528getBean\u7684\u65F6\u5019
@Override
public Object getBean(String name) throws BeansException {
  assertBeanFactoryActive();
  return getBeanFactory().getBean(name);
}
ApplicationContext\u4E0D\u751F\u4EA7Bean\uFF0C\u53EA\u662FBean\u7684\u642C\u8FD0\u5DE5\uFF0C\u662FBeanFactory\u5DE5\u5382\u751F\u4EA7\u7684
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> spring\u4E0D\u540C\u7684\u914D\u7F6E\u65B9\u5F0F\uFF0C\u8BFB\u53D6\u914D\u7F6E\u7684\u65B9\u5F0F\u80AF\u5B9A\u662F\u4E0D\u540C\uFF08xml\u3001\u914D\u7F6E\u7C7B\u3001\u6CE8\u89E3\uFF09\uFF0C\u4E0D\u540C\u7684\u8BFB\u53D6\u65B9\u5F0F</span>
<span class="token title important"><span class="token punctuation">#</span> \u9700\u8981\u8BFB\u53D6\u6210\u4E00\u4E2A\u7EDF\u4E00\u7684\u4E1C\u897FBeanDefinition\uFF0CBeanDefinition\u662Fspring\u9876\u5C42\u6838\u5FC3\u63A5\u53E3\uFF0C\u5C01\u88C5\u4E86\u751F\u4EA7Bean\u7684\u4E00\u5207\u539F\u6599</span>
<span class="token title important"><span class="token punctuation">#</span> BeanDefinition\u901A\u8FC7BeanDefinitionResgistry\u5B58\u50A8\u5230BeanDefinitionMap</span>
<span class="token list punctuation">-</span> \u914D\u7F6E\u6587\u4EF6xml\u7684\u4E0D\u540C\u8BFB\u53D6\u65B9\u5F0F\uFF0C\u4F7F\u7528\u7B56\u7565\u6A21\u5F0F\u8BFB\u53D6\u4E0D\u540C\u7684\u914D\u7F6E(Resource\u3001ResourceLoader)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u6211\u4EEC\u628Aspring\u7684Bean\u7684\u88C5\u914D\u7C7B\u6BD4\u6210\u88C5\u4FEE\u7684\u8BDD\uFF0C\u5982\u4E0B</p><p><img src="`+r+`" alt="image-20220215220501624"></p><p>BeanDefinition\u7684\u52A0\u8F7D\u987A\u5E8F\uFF1A</p><ul><li>BeanDefinitionScanner \u8D1F\u8D23\u626B\u63CF\u6240\u6709\u7684\u914D\u7F6E</li><li>BeanDefinitioReader \u8D1F\u8D23\u8BFB\u53D6\u914D\u7F6E</li><li>BeanDefinitionResgistry \u5C06BeanDefinition\u5B58\u50A8\u5230BeanDefinitionMap</li></ul><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u9009\u62E9BeanFactory\u8FD8\u662FApplicationContext?</span>
\u5E94\u8BE5\u4F18\u5148\u4F7F\u7528ApplicationContext
\u56E0\u4E3AApplicationContext\u5305\u62ECBeanFactory\u7684\u6240\u6709\u529F\u80FD\uFF0C\u548CBeanFactory\u76F8\u6BD4\u66F4\u503C\u5F97\u63A8\u8350\uFF0C\u9664\u4E86\u4E00\u4E9B\u7279\u5B9A\u7684\u573A\u666F\uFF0C\u4F8B\u5982\u5728\u8D44\u6E90\u53D7\u9650\u7684\u8BBE\u5907\u4E0A\u8FD0\u884C\u7684\u5185\u5D4C\u7684\u5E94\u7528
ApplicationContext\u62E5\u6709BeanFactory\u4E0D\u62E5\u6709\u7684\u529F\u80FD\uFF1A
<span class="token list punctuation">-</span> \u751F\u547D\u5468\u671F\u7BA1\u7406\uFF0C\u7BA1\u7406\u8D44\u6E90\u4E0E\u8D44\u6E90\u7684\u4E4B\u95F4\u7684\u4F9D\u8D56
<span class="token list punctuation">-</span> \u81EA\u52A8\u6CE8\u518CBeanPostProcessor
<span class="token list punctuation">-</span> \u81EA\u52A8\u6CE8\u518CBeanFactoryPostProcessor
<span class="token list punctuation">-</span> \u4FBF\u5229\u7684MessageSource\u8BBF\u95EE\uFF08\u56FD\u9645\u5316\uFF09
<span class="token list punctuation">-</span> \u5185\u7F6EApplicationEvent\u53D1\u5E03\u673A\u5236
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u5F53\u6211\u4EEC\u8C03\u7528getBean\u7684\u65F6\u5019\uFF0CBean\u901A\u8FC7BeanDefinition\u7684\u6CE8\u518CBean\u7684\u6D41\u7A0B</span>
<span class="token list punctuation">1.</span> \u5B9E\u4F8B\u5316\uFF0C\u53CD\u5C04\u521B\u5EFABean\uFF08\u6B64\u65F6\u6211\u4EEC\u7684Bean\u8FD8\u662F\u4E00\u4E2A\u7A7A\u58F3\uFF0C@Autowired\u6CE8\u5165\u7684\u5BF9\u8C61\u8FD8\u6CA1\u6709\u88C5\u914D\uFF09\uFF0C\u5B9E\u4F8B\u5316\u4E00\u822C\u6709\u4E24\u79CD
	<span class="token list punctuation">-</span> \u4E00\u79CD\u662F\u53CD\u5C04
	<span class="token list punctuation">-</span> \u4E00\u79CD\u662F\u901A\u8FC7\u5DE5\u5382\u65B9\u6CD5\uFF0C@Bean\u4E5F\u662F\u5DE5\u5382\u65B9\u6CD5
	\u53CD\u5C04\u5728\u5B9E\u4F8B\u5316\u7684\u8FC7\u7A0B\u662F\u7531spring\u53BB\u63A7\u5236\u7684\uFF0C\u5DE5\u5382\u65B9\u6CD5\u662F\u81EA\u5DF1\u53BBnew\u7684\uFF0C\u5DE5\u5382\u65B9\u6CD5\u66F4\u52A0\u7684\u7075\u6D3B\uFF0C\u56E0\u4E3A\u5728\u5DE5\u5382\u65B9\u6CD5\u4E2D\uFF0C\u6211\u4EEC\u60F3\u600E\u4E48\u505A\u5C31\u600E\u4E48\u505A
<span class="token list punctuation">2.</span> \u586B\u5145\u5C5E\u6027\uFF08@Autowired\u3001@Value\uFF09\uFF0C\u5728\u586B\u5145\u5C5E\u6027\u7684\u65F6\u5019\uFF0C\u4F1A\u51FA\u73B0\u5FAA\u73AF\u4F9D\u8D56\u7684\u95EE\u9898
<span class="token list punctuation">3.</span> \u521D\u59CB\u5316\uFF08initMethod\u3001destroy\uFF09
<span class="token list punctuation">4.</span> \u5C06\u521B\u5EFA\u7684Bean\u653E\u7F6E\u5230put\u5230Map<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BeanName,value</span><span class="token punctuation">&gt;</span></span>\u5355\u4F8B\u6C60\u4E2D\uFF0CgetBean\u5C31\u662F\u4ECEMap\u4E2D\u83B7\u53D6
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5FAA\u73AF\u4F9D\u8D56\u7684\u95EE\u9898</p><p><img src="`+d+`" alt="image-20220215224054301"></p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u89E3\u51B3\u5FAA\u73AF\u4F9D\u8D56\u975E\u5E38\u7B80\u5355\uFF0C\u53EA\u8981\u8BA9\u5FAA\u73AF\u4E2D\u65AD\u5C31\u597D\u4E86\uFF0Cspring\u4F7F\u7528\u4E86\u4E09\u7EA7\u7F13\u5B58\uFF0C\u8BF4\u767D\u4E86\u5C31\u662F\u4E09\u4E2AMap</span>
Bean\u662F\u5B58\u50A8\u5230\u4E00\u7EA7\u7F13\u5B58\u91CC\u9762
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u6269\u5C55\u70B9\uFF0C\u53EA\u6709ApplicationContext\u624D\u6709\uFF0CBeanFactory\u4E2D\u6CA1\u6709</span>
<span class="token title important"><span class="token punctuation">#</span> \u9664\u4E86IOC\uFF0C\u5176\u4ED6\u7684\u5B9E\u73B0\u90FD\u5F97\u7528\u6269\u5C55\u70B9\u6765\u5B9E\u73B0\uFF0C\u6BD4\u5982AOP\u3001Transaction</span>
<span class="token list punctuation">1.</span> \u6CE8\u518CBeanDefinition\u7684\u65F6\u5019\uFF0C\u53EF\u4EE5\u4FEE\u6539\u5B83\uFF0C\u8FD9\u91CC\u6709\u4E00\u4E2A\u6269\u5C55\u63A5\u53E3\uFF0Cspring\u63D0\u4F9B\u4E86\u6269\u5C55\u63A5\u53E3\uFF0C\u8BA9\u6211\u4EEC\u5BF9BeanDefinition\u8FDB\u884C\u6269\u5C55\uFF0C\u4E5F\u5C31\u662FBeanFactoryPostProcessor\uFF08Bean\u5DE5\u5382\u7684\u540E\u7F6E\u5904\u7406\u5668\uFF09
<span class="token list punctuation">2.</span> BeanDefinitionRegistryPostProcessor\uFF0C\u662F\u7528\u6765\u6CE8\u518CBeanDefinition
<span class="token list punctuation">3.</span> BeanPostProcessor\uFF0CBean\u7684\u540E\u7F6E\u5904\u7406\u5668\uFF0C\u4F1A\u51FA\u73B0\u7684\u51E0\u4E2A\u4F4D\u7F6E\uFF1A
	<span class="token list punctuation">-</span> \u5B9E\u4F8B\u5316\u7684\u65F6\u5019\u3001\u4E4B\u540E
	<span class="token list punctuation">-</span> \u586B\u5145\u5C5E\u6027\u7684\u65F6\u5019\u3001\u4E4B\u540E
	<span class="token list punctuation">-</span> \u521D\u59CB\u5316\u4E4B\u524D\u3001\u4E4B\u540E
	<span class="token list punctuation">-</span> ...
	\u603B\u5171\u4F1A\u8C03\u7528\u4E5D\u6B21Bean\u7684\u540E\u7F6E\u5904\u7406\u5668
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7\u5B9E\u73B0Bean\u7684\u540E\u7F6E\u5904\u7406\u5668\uFF0C\u8FBE\u5230\u6269\u5C55\u7684\u76EE\u7684\uFF0C\u6BD4\u5982\u91CD\u5199InstantiationAwareBeanPostProcessor\u6765\u81EA\u5DF1\u521B\u5EFABean\u7684\u76EE\u7684\uFF0C\u4E00\u65E6\u8FD4\u56DE\u5BF9\u5E94\uFF0Cspring\u5C31\u4F1A\u4F7F\u7528\u6211\u4EEC\u8FD4\u56DE\u7684\u5BF9\u8C61\uFF0C\u4E0D\u4F1A\u5728\u901A\u8FC7\u53CD\u5C04\u53BB\u521B\u5EFA\u5BF9\u8C61</p><p><img src="`+v+`" alt="image-20220215235054550"></p><p>BeanFactoryPostProcessor\u91CD\u5199\u65B9\u6CD5postProrcessBeanFactory\uFF0C\u5C06BeanClass\u4FEE\u6539\uFF0C\u8FBE\u5230\u4FEE\u6539\u6307\u5B9A\u7684BeanDefinition\uFF0C\u8BA9\u521B\u5EFA\u51FA\u6765\u7684\u5BF9\u8C61\u6307\u5411\u6211\u4EEC\u6307\u5B9A\u7684BeanClassName</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u6362\u56FE\u7EB8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+m+`" alt="image-20220215232919100"></p><p>BeanDefinitionRegistryPostProcessor\u91CD\u5199\u65B9\u6CD5postProcessBeanDefinitionRegistory\uFF0C\u7136\u540E\u5728\u65B9\u6CD5\u4E2D\u521B\u5EFABeanDefinition\u5E76\u6DFB\u52A0\u5230BeanDefinitionRegistry\u7684Map\u96C6\u5408\u4E2D</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u6DFB\u52A0\u56FE\u7EB8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+b+`" alt="image-20220215232948152"></p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u521D\u59CB\u5316\u5176\u4E2D\u7684Aware\uFF0C\u4E3B\u8981\u662F\u4E3A\u4E86\u80FD\u8BA9\u6211\u4EEC\u611F\u77E5\u5230spring\u5728\u5BF9\u4E00\u4E9B\u5C5E\u6027\u6216\u8005\u4E8B\u4EF6\u8FDB\u884C\u64CD\u4F5C\u7684\u65F6\u5019\uFF0C\u901A\u77E5\u6211\u4EEC\uFF0C\u8FD9\u6837\u6211\u4EEC\u5C31\u80FD\u505A\u51FA\u5BF9\u5E94\u7684\u64CD\u4F5C</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u5982\u679C\u8FD9\u4E9B\u4E1C\u897F\u6D88\u5316\u4E86\uFF0C\u90A3\u4E48\u5E94\u8BE5\u53EF\u4EE5\u56DE\u7B54\u4EE5\u4E0B\u95EE\u9898</span>
<span class="token list punctuation">1.</span> \u63CF\u8FF0\u4E0BBeanFactory
<span class="token list punctuation">2.</span> BeanFactory\u548CApplicationContext\u7684\u533A\u522B
<span class="token list punctuation">3.</span> \u7B80\u8FF0springIOC\u7684\u52A0\u8F7D\u8FC7\u7A0B
<span class="token list punctuation">4.</span> \u7B80\u8FF0Bean\u7684\u751F\u547D\u5468\u671F
<span class="token list punctuation">5.</span> Spring\u4E2D\u6709\u54EA\u4E9B\u6269\u5C55\u63A5\u53E3\u53CA\u8C03\u7528\u65F6\u673A
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7F16\u8BD1"><a class="header-anchor" href="#\u7F16\u8BD1" aria-hidden="true">#</a> \u7F16\u8BD1</h3><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u7F16\u8BD1\u7684\u95EE\u9898</span>
<span class="token list punctuation">1.</span> \u7F51\u7EDC\u95EE\u9898\uFF0C\u56E0\u4E3A\u7F51\u7EDC\u95EE\u9898\u5BFC\u81F4\u4F9D\u8D56\u4E0B\u8F7D\u5931\u8D25
<span class="token list punctuation">2.</span> \u5F00\u53D1\u73AF\u5883\u914D\u7F6E\u7684\u95EE\u9898
<span class="token list punctuation">3.</span> \u5982\u679C\u5B9E\u5728\u662F\u6E90\u7801\u4E0D\u80FD\u6B63\u5E38\u7684\u7F16\u8BD1\u8FD0\u884C\uFF0C\u53EF\u4EE5\u901A\u8FC7\u521B\u5EFAspring\u9879\u76EE\uFF0C\u7136\u540E\u67E5\u770B\u6E90\u4EE3\u7801\u7684\u65B9\u5F0F
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u73AF\u5883\u914D\u7F6E"><a class="header-anchor" href="#\u73AF\u5883\u914D\u7F6E" aria-hidden="true">#</a> \u73AF\u5883\u914D\u7F6E</h4><p>\u56E0\u4E3Aspring\u662F\u4F7F\u7528gradle\u642D\u5EFA\u7684\uFF0C\u6240\u4EE5\u9700\u8981\u5148\u914D\u7F6Egradle\u73AF\u5883</p><blockquote><p>\u53C2\u8003\u7F51\u5740\uFF1Ahttps://www.cnblogs.com/ycyzharry/p/11089016.html</p><p>\u6D4B\u8BD5\u7ED3\u679C</p><p><img src="`+g+`" alt="image-20220212113916426"></p><p>\u53EF\u4EE5\u5C06gradle\u7684\u672C\u5730\u4ED3\u5E93\u4FEE\u6539\u6210maven\u7684\u672C\u5730\u4ED3\u5E93\uFF0C\u8FD9\u6837\u5C31\u53EF\u4EE5\u4E0D\u7528\u91CD\u590D\u4E0B\u8F7Djar\u6587\u4EF6</p><p>\u5728\u73AF\u5883\u53D8\u91CF\u4E2D\u914D\u7F6E</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">GRADLE_USER_HOME</span><span class="token operator">=</span>/Users/aldencarter/opt/codes/environments/m2/repository
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5373\u53EF</p></blockquote><p>spring\u9879\u76EE\u4FDD\u5B58\u5728GitHub<code>https://github.com/spring-projects/spring-framework</code>\uFF0C\u9009\u62E9\u7248\u672C\u4E4B\u540E\u4E0B\u8F7D</p><p><img src="`+y+'" alt="image-20220216211909851"></p><p>\u63A8\u8350\u4E0B\u8F7DRelease\u7248\u672C</p><blockquote><p><strong>\u524D\u7F6E\u5DE5\u4F5C</strong></p><p>\u5982\u679C\u9009\u62E9\u81EA\u5DF1\u7684gradle\u51FA\u73B0\u9519\u8BEF\uFF0C\u53EF\u4EE5\u9009\u7528idea\u81EA\u8EAB\u7684gradle\uFF0Cidea\u4F1A\u6839\u636E\u9879\u76EE\u6765\u9009\u62E9\u5BF9\u5E94\u7684gradle</p><p>\u6700\u540Eidea\u4F1A\u81EA\u52A8\u7F16\u8BD1spring\u6E90\u7801\uFF0C\u7F16\u8BD1\u6210\u529F\u4EE5\u540E\uFF0C\u6240\u6709\u7684\u6A21\u5757\u90FD\u4F1A\u6709\u4E2A\u5C0F\u5C0F\u7684\u84DD\u8272\u56FE\u6807\uFF0C\u8868\u793A\u7F16\u8BD1\u6210\u529F\uFF0C\u81F3\u6B64spring\u6E90\u7801\u5BFC\u5165\u5B8C\u6210</p><p>gradle/wapper/gradle-wapper.properties\u4E2D\u5305\u542B\u4E86\u9879\u76EE\u6240\u9700\u8981\u7684\u4FE1\u606F</p><p><img src="'+f+'" alt="image-20220216212415359"></p><p>\u5982\u679C\u9700\u8981\u8BBE\u7F6E\u963F\u91CC\u7684\u955C\u50CF\uFF0C\u53EF\u4EE5\u901A\u8FC7\u4FEE\u6539build.gradle\u4E2D\u7684\u8FDC\u7A0B\u4ED3\u5E93</p><p><img src="'+w+'" alt="image-20220216212606089"></p></blockquote><p>\u514B\u9686spring-framework\u7684GitHub\u9879\u76EE\u5230\u81EA\u5DF1\u7684GitHub\u4ED3\u5E93\uFF0C\u8FD9\u6837\u5728\u4FEE\u6539\u6CE8\u89E3\u7684\u4E4B\u540E\uFF0C\u53EF\u4EE5\u4FDD\u5B58\u5230\u81EA\u5DF1\u7684GitHub\u4ED3\u5E93\u4E2D\uFF0C\u6839\u636E<code>import-into-idea.md</code>\u7684\u914D\u7F6E\uFF0C\u5BFC\u5165\u5230idea\u4E2D</p><p><img src="'+B+'" alt="image-20220212131557589"></p><blockquote><p><strong>\u5BFC\u5165\u5230idea\u6B65\u9AA4</strong></p><ol><li>\u7F16\u8BD1compile TestJava\u6A21\u5757</li></ol><p>\u5728\u7EC8\u7AEF\u4E2D\u6253\u5F00\u6E90\u7801\u6240\u5728\u6587\u4EF6\u5939\uFF0C\u8F93\u5165\u547D\u4EE4\uFF08mac\u4E2D\u9700\u8981\u52A0./\uFF09\uFF1A<code>./gradlew :spring-oxm:compileTestJava</code></p><p>\u663E\u793ABuild Success\u5C31\u8868\u793A\u7F16\u8BD1\u5B8C\u6210\u4E86</p><p><img src="'+h+'" alt="image-20220216221757197"></p><p>\u4F7F\u7528idea\u6253\u5F00\u9879\u76EE</p><p><img src="'+C+'" alt="image-20220216221846907"></p><ul><li>\u52FE\u9009Use auto-import</li><li>Use Gradle \u2018Wrapper\u2019 task ...\uFF0C\u8868\u793A\u4F7F\u7528\u8FDC\u7A0Bgradle\u7248\u672C</li></ul></blockquote><h4 id="\u7F16\u5199\u4EE3\u7801\u6D4B\u8BD5ioc\u529F\u80FD"><a class="header-anchor" href="#\u7F16\u5199\u4EE3\u7801\u6D4B\u8BD5ioc\u529F\u80FD" aria-hidden="true">#</a> \u7F16\u5199\u4EE3\u7801\u6D4B\u8BD5IOC\u529F\u80FD</h4><p>\u521B\u5EFAgradle\u6A21\u5757</p><p><img src="'+P+'" alt="image-20220212131938861"></p><p>\u540D\u5B57<code>springsource-test</code>\uFF0C\u8BE5\u540D\u5B57\u9700\u8981\u548Cspring\u539F\u6A21\u5757\u4E0D\u91CD\u590D</p><p><img src="'+A+`" alt="image-20220212132038585"></p><p><strong>\u6D4B\u8BD5\u914D\u7F6E\u6587\u4EF6\u65B9\u5F0F</strong></p><ol><li>\u5F15\u5165\u4F9D\u8D56</li></ol><p>\u6211\u4EEC\u53EF\u4EE5\u53BB<code>https://mvnrepository.com/</code>\u67E5\u627E\uFF0C\u9009\u62E9gradle\u65B9\u5F0F\uFF0C\u6DFB\u52A0\u5230\u6A21\u5757\u7684<code>build.gradle</code>\u7684<code>dependencies</code>\u4E2D</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code>dependencies <span class="token punctuation">{</span>
    testImplementation &#39;org.junit.jupiter<span class="token operator">:</span>junit-jupiter-api<span class="token operator">:</span><span class="token number">5.6</span>.<span class="token number">0</span>&#39;
    testRuntimeOnly &#39;org.junit.jupiter<span class="token operator">:</span>junit-jupiter-engine&#39;

    <span class="token comment">//\u5F15\u5165Spring\u7684\u6838\u5FC3\u5BB9\u5668</span>
    compile(project(<span class="token string">&quot;:spring-context&quot;</span>))
    compileOnly &#39;org.projectlombok<span class="token operator">:</span>lombok<span class="token operator">:</span><span class="token number">1.18</span>.<span class="token number">10</span>&#39;
    annotationProcessor &#39;org.projectlombok<span class="token operator">:</span>lombok<span class="token operator">:</span><span class="token number">1.18</span>.<span class="token number">10</span>&#39;
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6574\u4E2Abuild.gradle</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code>plugins <span class="token punctuation">{</span>
    id &#39;java&#39;
<span class="token punctuation">}</span>

group &#39;org.springframework&#39;
version &#39;<span class="token number">5.2</span>.<span class="token number">9</span>.RELEASE&#39;

repositories <span class="token punctuation">{</span>
    mavenCentral()
<span class="token punctuation">}</span>

dependencies <span class="token punctuation">{</span>
    testImplementation &#39;org.junit.jupiter<span class="token operator">:</span>junit-jupiter-api<span class="token operator">:</span><span class="token number">5.6</span>.<span class="token number">0</span>&#39;
    testRuntimeOnly &#39;org.junit.jupiter<span class="token operator">:</span>junit-jupiter-engine&#39;

    <span class="token comment">//\u5F15\u5165Spring\u7684\u6838\u5FC3\u5BB9\u5668</span>
    compile(project(<span class="token string">&quot;:spring-context&quot;</span>))
    compileOnly &#39;org.projectlombok<span class="token operator">:</span>lombok<span class="token operator">:</span><span class="token number">1.18</span>.<span class="token number">10</span>&#39;
    annotationProcessor &#39;org.projectlombok<span class="token operator">:</span>lombok<span class="token operator">:</span><span class="token number">1.18</span>.<span class="token number">10</span>&#39;
<span class="token punctuation">}</span>

test <span class="token punctuation">{</span>
    useJUnitPlatform()
<span class="token punctuation">}</span>

<span class="token comment">//\u4E0A\u9762\u8FD9\u4E2A\u914D\u7F6E\u4E3B\u8981\u662F\u53BB\u6389-WError, \u4E0D\u7136warn\u4F1A\u89C6\u4E3Aerror,\u5BFC\u81F4\u7F16\u8BD1\u5931\u8D25. \u4E5F\u53EF\u4EE5\u4FEE\u6539springframework\u6839\u76EE\u5F55\u4E0B\u7684build.gradle\u6587\u4EF6,\u628A-WError\u53BB\u6389</span>
configure(allprojects) <span class="token punctuation">{</span> project -&gt;
    compileJava.options*.compilerArgs =
            <span class="token punctuation">[</span><span class="token string">&quot;-Xlint:varargs&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;-Xlint:fallthrough&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;-Xlint:rawtypes&quot;</span><span class="token punctuation">,</span>                <span class="token string">&quot;-Xlint:deprecation&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;-Xlint:unchecked&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u7F16\u5199spring.xml</li></ol><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/context<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.ald.spring<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>\u521B\u5EFAUser\u5B9E\u4F53\u7C7B</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@ToString</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
	<span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>\u521B\u5EFAAppMain\u5E76\u5F15\u5165\u6D4B\u8BD5</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AppMain</span> <span class="token punctuation">{</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">ApplicationContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">&quot;spring.xml&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">User</span> user <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6216\u8005</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AppTest</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token class-name">MyTestBeanTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">BeanFactory</span> bf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XmlBeanFactory</span><span class="token punctuation">(</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathResource</span><span class="token punctuation">(</span><span class="token string">&quot;spring-config.xml&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">MyTestBean</span> myTestBean <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">MyTestBean</span><span class="token punctuation">)</span> bf<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">&quot;myTestBean&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>myTestBean<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5176\u5B9E\u76F4\u63A5\u4F7F\u7528BeanFactory\u4F5C\u4E3A\u5BB9\u5668\u5BF9\u4E8ESpring\u7684\u4F7F\u7528\u5E76\u4E0D\u591A\u89C1\uFF0C\u56E0\u4E3A\u4F01\u4E1A\u7EA7\u5E94\u7528\u9879\u76EE\u4E2D\u5927\u591A\u4F1A\u4F7F\u7528\u7684\u662FApplicationContext\uFF08\u540E\u9762\u6211\u4EEC\u4F1A\u8BB2\u4E24\u8005\u7684\u533A\u522B\uFF0C\u8FD9\u91CC\u53EA\u662F\u6D4B\u8BD5\uFF09</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>\u542F\u52A8\u6D4B\u8BD5</li></ol><p>\u6D4B\u8BD5\u6210\u529F</p><p><img src="`+S+'" alt="image-20220212133122666"></p><p><strong>\u6D4B\u8BD5\u6CE8\u89E3\u65B9\u5F0F</strong></p><blockquote><p>\u6E90\u7801\u73AF\u5883\u9ED8\u8BA4\u662F\u4E0D\u652F\u6301\u4E2D\u6587\u7684\uFF0C\u9700\u8981\u5728VM\u914D\u7F6E\u4E2D\u6DFB\u52A0<code>-Dfile.encoding=UTF-8</code>\u5C06\u73AF\u5883\u4FEE\u6539\u6210UTF8\u7F16\u7801</p><p><img src="'+x+`" alt="image-20220212140036887"></p></blockquote><ol><li>\u7F16\u5199Person</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@ToString</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
	<span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u7F16\u5199\u914D\u7F6E</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainConfig</span> <span class="token punctuation">{</span>
	<span class="token annotation punctuation">@Bean</span>
	<span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">final</span> <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		user<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> user<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>\u7F16\u5199\u6D4B\u8BD5</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AnnotationMainTest</span> <span class="token punctuation">{</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">final</span> <span class="token class-name">ApplicationContext</span> applicationContext <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">MainConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">final</span> <span class="token class-name">User</span> user <span class="token operator">=</span> applicationContext<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ioc\u5BB9\u5668\u52A0\u8F7D\u8FC7\u7A0B"><a class="header-anchor" href="#ioc\u5BB9\u5668\u52A0\u8F7D\u8FC7\u7A0B" aria-hidden="true">#</a> IOC\u5BB9\u5668\u52A0\u8F7D\u8FC7\u7A0B</h2><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u8BFE\u7A0B\u5185\u5BB9</span>
<span class="token list punctuation">1.</span> IOC\u5BB9\u5668\u52A0\u8F7D\u8FC7\u7A0B\u6E90\u7801\u6DF1\u5EA6\u5256\u6790
<span class="token list punctuation">2.</span> BeanFactory\u548CFactoryBean\u7684\u533A\u522B
<span class="token list punctuation">3.</span> Bean\u7684\u751F\u547D\u5468\u671F\u6E90\u7801\u6DF1\u5EA6\u5256\u6790
<span class="token list punctuation">4.</span> \u521D\u8BC6\u6E90\u7801\u4E2D\u7684\u5404\u79CD\u6269\u5C55\u70B9
<span class="token list punctuation">5.</span> BeanDefinition\u7684\u8BE6\u89E3
<span class="token list punctuation">6.</span> Spring\u6E90\u7801\u7F16\u8BD1\u8FC7\u7A0B\u6F14\u793A
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7F51\u5740\uFF1Ahttps://www.processon.com/view/link/5f5075c763768959e2d109df#map</p><p><img src="`+D+'" alt="image-20220216230241282"></p><h3 id="bean\u751F\u547D\u5468\u671F\u5256\u6790"><a class="header-anchor" href="#bean\u751F\u547D\u5468\u671F\u5256\u6790" aria-hidden="true">#</a> Bean\u751F\u547D\u5468\u671F\u5256\u6790</h3>',81),J=s("<p>spring\u4E2D\u6587\u6587\u6863\uFF1Ahttps://github.com/DocsHome/spring-docs</p><p>\u53C2\u8003\u7F51\u5740\uFF1Ahttps://github.com/DocsHome/spring-docs/blob/master/pages/core/IoC-container.md#context-introduction-ctx-vs-beanfactory</p><p><strong>\u9009\u62E9<code>BeanFactory</code>\u8FD8\u662F<code>ApplicationContext</code>?</strong></p><p>\u672C\u8282\u4ECB\u7ECD<code>BeanFactory</code>\u548C<code>ApplicationContext</code>\u5BB9\u5668\u7EA7\u522B\u4E4B\u95F4\u7684\u5DEE\u5F02\u4EE5\u53CA\u5F71\u54CD\u3002</p><p>\u60A8\u5E94\u8BE5\u4F7F\u7528<code>ApplicationContext</code>\uFF0C\u9664\u975E\u60A8\u6709\u5145\u5206\u7684\u7406\u7531\u4E0D\u8FD9\u6837\u505A\uFF0C\u4F7F\u7528<code>GenericApplicationContext</code>\u53CA\u5176\u5B50\u7C7B<code>AnnotationConfigApplicationContext</code>\u4F5C\u4E3A\u81EA\u5B9A\u4E49\u5F15\u5BFC\u7684\u5E38\u89C1\u5B9E\u73B0\u3002 \u8FD9\u4E9B\u662FSpring\u7528\u4E8E\u6240\u6709\u5E38\u89C1\u76EE\u7684\u7684\u6838\u5FC3\u5BB9\u5668\u7684\u4E3B\u8981\u5165\u53E3\u70B9\uFF1A\u52A0\u8F7D\u914D\u7F6E\u6587\u4EF6\uFF0C\u89E6\u53D1\u7C7B\u8DEF\u5F84\u626B\u63CF\uFF0C\u4EE5\u7F16\u7A0B\u65B9\u5F0F\u6CE8\u518Cbean\u5B9A\u4E49\u548C\u5E26\u6CE8\u89E3\u7684\u7C7B\uFF0C\u4EE5\u53CA\uFF08\u4ECE5.0\u5F00\u59CB\uFF09\u6CE8\u518C\u529F\u80FDbean\u5B9A\u4E49\u3002</p><p>\u56E0\u4E3A<code>ApplicationContext</code>\u5305\u62EC<code>BeanFactory</code>\u7684\u6240\u6709\u529F\u80FD\uFF0C\u548C<code>BeanFactory</code>\u76F8\u6BD4\u66F4\u503C\u5F97\u63A8\u8350\uFF0C\u9664\u4E86\u4E00\u4E9B\u7279\u5B9A\u7684\u573A\u666F\uFF0C\u4F8B\u5982\u5728\u8D44\u6E90\u53D7\u9650\u7684\u8BBE\u5907\u4E0A\u8FD0\u884C\u7684\u5185\u5D4C\u7684\u5E94\u7528\u3002 \u5728<code>ApplicationContext</code>\uFF08\u4F8B\u5982<code>GenericApplicationContext</code>\u5B9E\u73B0\uFF09\u4E2D\uFF0C\u6309\u7167\u7EA6\u5B9A\uFF08\u5373\u901A\u8FC7bean\u540D\u79F0\u6216bean\u7C7B\u578B - \u7279\u522B\u662F\u540E\u5904\u7406\u5668\uFF09\u68C0\u6D4B\u5230\u51E0\u79CDbean\uFF0C \u800C\u666E\u901A\u7684<code>DefaultListableBeanFactory</code>\u5BF9\u4EFB\u4F55\u7279\u6B8Abean\u90FD\u662F\u4E0D\u53EF\u77E5\u7684\u3002</p>",6),W=a("\u5BF9\u4E8E\u8BB8\u591A\u6269\u5C55\u5BB9\u5668\u529F\u80FD\uFF0C\u4F8B\u5982\u6CE8\u89E3\u5904\u7406\u548CAOP\u4EE3\u7406\uFF0C "),K={href:"https://github.com/DocsHome/spring-docs/blob/master/pages/core/IoC-container.md#beans-factory-extension-bpp",target:"_blank",rel:"noopener noreferrer"},Y=n("code",null,"BeanPostProcessor",-1),Q=a("\u6269\u5C55\u70B9\u662F\u5FC5\u4E0D\u53EF\u5C11\u7684\u3002\u5982\u679C\u4EC5\u4F7F\u7528\u666E\u901A\u7684"),Z=n("code",null,"DefaultListableBeanFactory",-1),$=a("\uFF0C\u5219\u9ED8\u8BA4\u60C5\u51B5\u4E0B\u4E0D\u4F1A\u68C0\u6D4B\u5230\u5E76\u6FC0\u6D3B\u6B64\u7C7B\u540E\u7F6E\u5904\u7406\u5668\u3002 \u8FD9\u79CD\u60C5\u51B5\u53EF\u80FD\u4EE4\u4EBA\u56F0\u60D1\uFF0C\u56E0\u4E3A\u60A8\u7684bean\u914D\u7F6E\u5B9E\u9645\u4E0A\u6CA1\u6709\u4EFB\u4F55\u95EE\u9898\u3002 \u76F8\u53CD\uFF0C\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u5BB9\u5668\u9700\u8981\u81F3\u5C11\u5F97\u591A\u4E00\u4E9B\u989D\u5916\u7684\u5904\u7406\u3002"),nn=s(`<p>\u4E0B\u8868\u5217\u51FA\u4E86<code>BeanFactory</code>\u548C<code>ApplicationContext</code>\u63A5\u53E3\u548C\u5B9E\u73B0\u63D0\u4F9B\u7684\u529F\u80FD\u3002</p><p>Table 9.\u7279\u6027\u77E9\u9635</p><table><thead><tr><th>Feature</th><th><code>BeanFactory</code></th><th><code>ApplicationContext</code></th></tr></thead><tbody><tr><td>Bean Bean\u5B9E\u4F8B\u5316/\u88C5\u914D</td><td>Yes</td><td>Yes</td></tr><tr><td>\u96C6\u6210\u7684\u751F\u547D\u5468\u671F\u7BA1\u7406</td><td>No</td><td>Yes</td></tr><tr><td>\u81EA\u52A8\u6CE8\u518C <code>BeanPostProcessor</code></td><td>No</td><td>Yes</td></tr><tr><td>\u81EA\u52A8\u6CE8\u518C <code>BeanFactoryPostProcessor</code></td><td>No</td><td>Yes</td></tr><tr><td>\u4FBF\u5229\u7684 <code>MessageSource</code> \u8BBF\u95EE (\u56FD\u9645\u5316)</td><td>No</td><td>Yes</td></tr><tr><td>\u5185\u7F6E<code>ApplicationEvent</code> \u53D1\u5E03\u673A\u5236</td><td>No</td><td>Yes</td></tr></tbody></table><p>\u8981\u4F7F\u7528 <code>DefaultListableBeanFactory</code>\u663E\u5F0F\u6CE8\u518Cbean\u7684\u540E\u7F6E\u5904\u7406\u5668\uFF0C\u60A8\u9700\u8981\u4EE5\u7F16\u7A0B\u65B9\u5F0F\u8C03\u7528 <code>addBeanPostProcessor</code>\uFF0C\u5982\u4EE5\u4E0B\u793A\u4F8B\u6240\u793A\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>DefaultListableBeanFactory factory = new DefaultListableBeanFactory();
// populate the factory with bean definitions

// now register any needed BeanPostProcessor instances
factory.addBeanPostProcessor(new AutowiredAnnotationBeanPostProcessor());
factory.addBeanPostProcessor(new MyBeanPostProcessor());

// now start using the factory
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8981\u5C06<code>BeanFactoryPostProcessor</code> \u5E94\u7528\u4E8E\u666E\u901A\u7684<code>DefaultListableBeanFactory</code>\uFF0C\u9700\u8981\u8C03\u7528\u5176<code>postProcessBeanFactory</code>\u65B9\u6CD5\uFF0C\u5982\u4EE5\u4E0B\u793A\u4F8B\u6240\u793A\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>DefaultListableBeanFactory factory = new DefaultListableBeanFactory();
XmlBeanDefinitionReader reader = new XmlBeanDefinitionReader(factory);
reader.loadBeanDefinitions(new FileSystemResource(&quot;beans.xml&quot;));

// bring in some property values from a Properties file
PropertyPlaceholderConfigurer cfg = new PropertyPlaceholderConfigurer();
cfg.setLocation(new FileSystemResource(&quot;jdbc.properties&quot;));

// now actually do the replacement
cfg.postProcessBeanFactory(factory);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u8FD9\u4E24\u79CD\u60C5\u51B5\u4E0B\uFF0C\u663E\u793A\u6CE8\u518C\u6B65\u9AA4\u90FD\u4E0D\u65B9\u4FBF\uFF0C\u8FD9\u5C31\u662F\u4E3A\u4EC0\u4E48\u5404\u79CD<code>ApplicationContext</code>\u53D8\u4F53\u4F18\u5148\u4E8ESpring\u652F\u6301\u7684\u5E94\u7528\u7A0B\u5E8F\u4E2D\u7684\u666E\u901A<code>DefaultListableBeanFactory</code>\uFF0C \u5C24\u5176\u662F\u5728\u5178\u578B\u4F01\u4E1A\u8BBE\u7F6E\u4E2D\u4F9D\u8D56<code>BeanFactoryPostProcessor</code> \u548C <code>BeanPostProcessor</code>\u5B9E\u4F8B\u6765\u6269\u5C55\u5BB9\u5668\u529F\u80FD\u65F6\u3002</p><p><code>AnnotationConfigApplicationContext</code>\u5177\u6709\u6CE8\u518C\u7684\u6240\u6709\u5E38\u89C1\u6CE8\u89E3\u540E\u7F6E\u5904\u7406\u5668\uFF0C\u5E76\u4E14\u53EF\u4EE5\u901A\u8FC7\u914D\u7F6E\u6CE8\u89E3\uFF08\u4F8B\u5982<code>@EnableTransactionManagement</code>\uFF09\u5728\u5C01\u9762\u4E0B\u5F15\u5165\u5176\u4ED6\u5904\u7406\u5668\u3002 \u5728Spring\u7684\u57FA\u4E8E\u6CE8\u89E3\u7684\u914D\u7F6E\u6A21\u578B\u7684\u62BD\u8C61\u7EA7\u522B\uFF0Cbean\u7684\u540E\u7F6E\u5904\u7406\u5668\u7684\u6982\u5FF5\u53D8\u6210\u4EC5\u4EC5\u662F\u5185\u90E8\u5BB9\u5668\u7EC6\u8282\u3002</p>`,9),sn=s(`<p>\u5F53\u6211\u4EEC\u8FD0\u884C\u8FD9\u4E00\u6BB5\u4EE3\u7801\u7684\u65F6\u5019\uFF0Cspring\u5C31\u4F1A\u53BB\u626B\u63CF\u6211\u4EEC\u7684\u5305\uFF0C\u7136\u540E\u5C06\u914D\u7F6E\u7C7B\u7684\u4E00\u4E9B\u914D\u7F6E\u626B\u63CF\u5230IOC\u5BB9\u5668\u4E2D\uFF0C\u6CE8\u518C\u6210\u4E3A\u4E00\u4E2ABean\uFF0C\u6700\u540E\u6211\u4EEC\u5C31\u53EF\u4EE5\u62FF\u5230\u8FD9\u4E2ABean\u53BB\u4F7F\u7528\u4E86</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AnnotationMainTest</span> <span class="token punctuation">{</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">final</span> <span class="token class-name">ApplicationContext</span> applicationContext <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">MainConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">final</span> <span class="token class-name">User</span> user <span class="token operator">=</span> applicationContext<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">final</span> <span class="token class-name">ApplicationContext</span> context <span class="token operator">=</span> user<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>context <span class="token operator">==</span> applicationContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u57FA\u672C\u4F7F\u7528\u7684\u914D\u7F6E\u6709\u4E24\u79CD\u65B9\u5F0F</p><ul><li>xml\u914D\u7F6E\u6587\u4EF6</li><li>\u914D\u7F6E\u7C7B</li></ul><p>\u8FD9\u4E24\u79CD\u5BB9\u5668\u4E0D\u540C\uFF0C\u57FA\u672C\u53EA\u6709\u5728\u52A0\u8F7D\u914D\u7F6E\u4E0D\u540C\uFF0CBean\u5DE5\u5382\u57FA\u672C\u76F8\u540C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">AnnotationConfigApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> componentClasses<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u8C03\u7528\u6784\u9020\u51FD\u6570</span>
  <span class="token keyword">this</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u6CE8\u518C\u6211\u4EEC\u7684\u914D\u7F6E\u7C7B</span>
  <span class="token function">register</span><span class="token punctuation">(</span>componentClasses<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// IOC\u5BB9\u5668\u5237\u65B0\u63A5\u53E3</span>
  <span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><code>this();</code>\u8C03\u7528\u65E0\u53C2\u6784\u9020\u51FD\u6570</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">AnnotationConfigApplicationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token doc-comment comment">/**
		 * \u521B\u5EFA\u4E00\u4E2A\u8BFB\u53D6\u6CE8\u89E3\u7684Bean\u5B9A\u4E49\u8BFB\u53D6\u5668
		 * \u4EC0\u4E48\u662FBean\u5B9A\u4E49\uFF1FBeanDefinition
		 *
		 * \u5B8C\u6210\u4E86spring\u5185\u90E8BeanDefinition\u7684\u6CE8\u518C\uFF08\u4E3B\u8981\u662F\u540E\u7F6E\u5904\u7406\u5668\uFF09
		 * AnnotatedBeanDefinitionReader\u7528\u6765\u8BFB\u53D6\u914D\u7F6E\u7C7B
		 */</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotatedBeanDefinitionReader</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/**
		 * \u521B\u5EFABeanDefinition\u626B\u63CF\u5668
		 *
		 * \u53EF\u4EE5\u7528\u6765\u626B\u63CF\u5305\u6216\u8005\u7C7B\uFF0C\u7EE7\u800C\u8F6C\u6362\u4E3Abd
		 *
		 * spring\u9ED8\u8BA4\u7684\u626B\u63CF\u5305\u4E0D\u662F\u8FD9\u4E2Ascanner\u5BF9\u8C61
		 * \u800C\u662F\u81EA\u5DF1new\u7684\u4E00\u4E2AClassPathBeanDefinitionScanner
		 * spring\u5728\u6267\u884C\u5DE5\u5382\u540E\u7F6E\u5904\u7406\u5668ConfigurationClassProcessor\u65F6\uFF0C\u53BB\u626B\u63CF\u5305\u65F6\u4F1Anew\u4E00\u4E2AClassPathBeanDefinitionScanner
		 *
		 * \u8FD9\u91CC\u7684scanner\u4EC5\u4EC5\u662F\u4E3A\u7A0B\u5E8F\u5458\u53EF\u4EE5\u624B\u52A8\u8C03\u7528AnnotationConfigApplicationContext\u5BF9\u8C61\u7684scann\u65B9\u6CD5
		 * \`context.scann(&quot;\u5305\u540D&quot;)\`
		 */</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>scanner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathBeanDefinitionScanner</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>AnnotatedBeanDefinitionReader\u4F1A\u6CE8\u518C\u4E00\u4E9B\u5185\u7F6E\u7684\u540E\u7F6E\u5904\u7406\u5668</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">AnnotatedBeanDefinitionReader</span><span class="token punctuation">(</span><span class="token class-name">BeanDefinitionRegistry</span> registry<span class="token punctuation">,</span> <span class="token class-name">Environment</span> environment<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>registry<span class="token punctuation">,</span> <span class="token string">&quot;BeanDefinitionRegistry must not be null&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>environment<span class="token punctuation">,</span> <span class="token string">&quot;Environment must not be null&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u628AApplicationContext\u5BF9\u8C61\u8D4B\u503C\u7ED9AnnotationBeanDefinitionReader</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>registry <span class="token operator">=</span> registry<span class="token punctuation">;</span>
  <span class="token comment">// \u7528\u6237\u5904\u7406\u6761\u4EF6\u6CE8\u89E3 @Conditional on name</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>conditionEvaluator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConditionEvaluator</span><span class="token punctuation">(</span>registry<span class="token punctuation">,</span> environment<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u6CE8\u518C\u4E00\u4E9B\u5185\u7F6E\u7684\u540E\u7F6E\u5904\u7406\u5668</span>
  <span class="token class-name">AnnotationConfigUtils</span><span class="token punctuation">.</span><span class="token function">registerAnnotationConfigProcessors</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>registry<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u6CE8\u518C\u4E00\u4E9B\u5185\u7F6E\u7684\u540E\u7F6E\u5904\u7406\u5668\u7684\u4F5C\u7528</span>
\u662F\u4E3A\u4E86\u652F\u6491\u6211\u4EEC\u8FD9\u4E2AAnnotationConfigurationApplicationContext\u6240\u4EE5\u7684\u4E00\u4E9B\u524D\u7F6E\u5904\u7406\uFF0C\u4E00\u4E9B\u521B\u4E16\u7EAA\u7684\u7C7B\uFF0C\u5C31\u8DDF\u4E9A\u5F53\u8DDF\u590F\u5A03\u4E00\u6837\u7684
\u6BD4\u5982\u8BF4\uFF0CConfigurationClassPostProcessor\uFF0C\u5728\u8FD9\u4E2A\u7C7B\u4E2D\uFF0C\u4F1A\u89E3\u6790@Configuration\u7684\u914D\u7F6E\u7C7B\uFF0C\u8FD8\u4F1A\u89E3\u6790@ComponentScan\u3001@ComponentScans\u6CE8\u89E3\u626B\u63CF\u7684\u5305\uFF0C\u4EE5\u53CA\u89E3\u6790@Import\u7B49\u6CE8\u89E3\uFF1BAutowiredAnnotationBeanPostProcessor\u5C31\u662F\u89E3\u6790@Autowired\u548C@Value
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+F+`" alt="image-20220217125157445"></p><p>\u5F53\u8C03\u7528\u5B50\u7C7B\u7684\u65E0\u53C2\u6784\u9020\u51FD\u6570\uFF0C\u9996\u5148\u4F1A\u8C03\u7528\u7236\u7C7B\u7684\u65E0\u53C2\u6784\u9020\u51FD\u6570</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">GenericApplicationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token doc-comment comment">/**
    * \u8C03\u7528\u7236\u7C7B\u7684\u6784\u9020\u51FD\u6570\uFF0C\u4E3AApplicationContext spring\u4E0A\u4E0B\u6587\u5BF9\u8C61\u521D\u59CBBeanFactory
    * \u4E3A\u5565\u662FDefaultListableBeanFactory?
    * \u6211\u4EEC\u53BB\u770BBeanFactory\u63A5\u53E3\u7684\u65F6\u5019\u53D1\u73B0DefaultListableBeanFactory\u662F\u6700\u5E95\u5C42\u7684\u5B9E\u73B0\uFF0C\u529F\u80FD\u662F\u6700\u5168\u7684
    */</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>beanFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultListableBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>DefaultListableBeanFactory\u57FA\u672C\u53EF\u4EE5\u8BF4\u662F\u529F\u80FD\u6700\u5F3A\u5927\u7684BeanFactory</p><p><img src="`+N+`" alt="image-20220216223559178"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DefaultListableBeanFactory</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractAutowireCapableBeanFactory</span>
		<span class="token keyword">implements</span> <span class="token class-name">ConfigurableListableBeanFactory</span><span class="token punctuation">,</span> <span class="token class-name">BeanDefinitionRegistry</span><span class="token punctuation">,</span> <span class="token class-name">Serializable</span><span class="token punctuation">{</span>
  <span class="token comment">// xxx</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u56E0\u4E3A\u5B9E\u73B0\u4E86BeanFactory\uFF0C\u63D0\u4F9B\u4E86Bean\u7684\u83B7\u53D6</li><li>\u56E0\u4E3A\u5B9E\u73B0\u4E86BeanDefinitionRegistry\uFF0C\u6240\u4EE5\u53EF\u4EE5\u5C06BeanDefinition\u6DFB\u52A0\u5230Map\u4E2D</li></ul><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u6B65\u9AA4</span>
<span class="token list punctuation">1.</span> \u521B\u5EFABeanFactory
<span class="token list punctuation">2.</span> \u521B\u5EFABeanDefinitionReader\uFF0CBeanDefinitionReader\u6CE8\u518C\u4E86\u5F88\u591A\u521B\u4E16\u7EAA\u7684\u7C7B\uFF0C\u5176\u4E2D\u5C31\u5305\u62EC\u4E00\u4E2A\u5F88\u91CD\u8981\u7684\u7C7B\uFF1AConfigurationClassPostProceessor\uFF0C\u5982\u679C\u4E0D\u6CE8\u518C\u8FD9\u4E2A\uFF0C\u90A3\u4E48\u6211\u4EEC\u7684\u914D\u7F6E\u7C7B\u5C06\u65E0\u6CD5\u89E3\u6790\uFF0C\u662F\u901A\u8FC7\u4E00\u79CD\u6269\u5C55\u70B9\u7684\u65B9\u5F0F\u53BB\u89E3\u6790\u914D\u7F6E\u7C7B
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><code>register(componentClasses);</code>\u6CE8\u518C\u914D\u7F6E\u7C7B</li></ol><p>\u5C06\u914D\u7F6E\u7C7B\u6CE8\u518C\u6210BeanDefinition</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// beanClass \u914D\u7F6E\u7C7B</span>
<span class="token keyword">private</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">void</span> <span class="token function">doRegisterBean</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> beanClass<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">String</span> name<span class="token punctuation">,</span>
                                <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Annotation</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> qualifiers<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Supplier</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> supplier<span class="token punctuation">,</span>
                                <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">BeanDefinitionCustomizer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> customizers<span class="token punctuation">)</span> <span class="token punctuation">{</span>

  <span class="token class-name">AnnotatedGenericBeanDefinition</span> abd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotatedGenericBeanDefinition</span><span class="token punctuation">(</span>beanClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>conditionEvaluator<span class="token punctuation">.</span><span class="token function">shouldSkip</span><span class="token punctuation">(</span>abd<span class="token punctuation">.</span><span class="token function">getMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  abd<span class="token punctuation">.</span><span class="token function">setInstanceSupplier</span><span class="token punctuation">(</span>supplier<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">ScopeMetadata</span> scopeMetadata <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>scopeMetadataResolver<span class="token punctuation">.</span><span class="token function">resolveScopeMetadata</span><span class="token punctuation">(</span>abd<span class="token punctuation">)</span><span class="token punctuation">;</span>
  abd<span class="token punctuation">.</span><span class="token function">setScope</span><span class="token punctuation">(</span>scopeMetadata<span class="token punctuation">.</span><span class="token function">getScopeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">String</span> beanName <span class="token operator">=</span> <span class="token punctuation">(</span>name <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> name <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>beanNameGenerator<span class="token punctuation">.</span><span class="token function">generateBeanName</span><span class="token punctuation">(</span>abd<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>registry<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token class-name">AnnotationConfigUtils</span><span class="token punctuation">.</span><span class="token function">processCommonDefinitionAnnotations</span><span class="token punctuation">(</span>abd<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>qualifiers <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Annotation</span><span class="token punctuation">&gt;</span></span> qualifier <span class="token operator">:</span> qualifiers<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Primary</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token operator">==</span> qualifier<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        abd<span class="token punctuation">.</span><span class="token function">setPrimary</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Lazy</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token operator">==</span> qualifier<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        abd<span class="token punctuation">.</span><span class="token function">setLazyInit</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">else</span> <span class="token punctuation">{</span>
        abd<span class="token punctuation">.</span><span class="token function">addQualifier</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AutowireCandidateQualifier</span><span class="token punctuation">(</span>qualifier<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>customizers <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">BeanDefinitionCustomizer</span> customizer <span class="token operator">:</span> customizers<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      customizer<span class="token punctuation">.</span><span class="token function">customize</span><span class="token punctuation">(</span>abd<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token class-name">BeanDefinitionHolder</span> definitionHolder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BeanDefinitionHolder</span><span class="token punctuation">(</span>abd<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
  definitionHolder <span class="token operator">=</span> <span class="token class-name">AnnotationConfigUtils</span><span class="token punctuation">.</span><span class="token function">applyScopedProxyMode</span><span class="token punctuation">(</span>scopeMetadata<span class="token punctuation">,</span> definitionHolder<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>registry<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u6CE8\u518C \u6700\u7EC8\u4F1A\u8C03\u7528DefaultListableBeanFactory\u4E2D\u7684registerBeanDefinition\u65B9\u6CD5\u53BB\u6CE8\u518C</span>
  <span class="token comment">// DefaultDefinitionBeanFactory\u7EF4\u62A4\u7740\u4E00\u7CFB\u5217\u4FE1\u606F\uFF0C\u6BD4\u5982beanDefinitionNames\u3001beanDefinitionMap</span>
  <span class="token comment">// beanDefinitionNames \u662F\u4E00\u4E2AList&lt;String&gt;\uFF0C\u7528\u6765\u4FDD\u5B58beanName</span>
  <span class="token comment">// beanDefinitionMap \u662F\u4E00\u4E2AMap\uFF0C\u7528\u6765\u4FDD\u5B58beanName\u548CbeanDefinition</span>
  <span class="token class-name">BeanDefinitionReaderUtils</span><span class="token punctuation">.</span><span class="token function">registerBeanDefinition</span><span class="token punctuation">(</span>definitionHolder<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>registry<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li><code>refresh();</code>\u5237\u65B0\u5BB9\u5668</li></ol><p>https://www.processon.com/view/link/5f18298a7d9c0835d38a57c0</p><p>refresh\u662FIOC\u4E2D\u6700\u91CD\u8981\u7684\u4E00\u4E2A\u51FD\u6570\uFF0C\u4F53\u73B0\u4E86Bean\u7684\u751F\u547D\u5468\u671F</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u4F53\u73B0\u4E86IOC\u7684\u6574\u4E2A\u751F\u547D\u5468\u671F
 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">BeansException</span></span>
 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IllegalStateException</span></span>
 */</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span><span class="token punctuation">,</span> <span class="token class-name">IllegalStateException</span> <span class="token punctuation">{</span>
  <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>startupShutdownMonitor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Prepare this context for refreshing.</span>
    <span class="token comment">// 1\u3001\u51C6\u5907\u4E0A\u4E0B\u6587</span>
    <span class="token function">prepareRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Tell the subclass to refresh the internal bean factory.</span>
    <span class="token comment">// 2\u3001\u83B7\u53D6\u544A\u8BC9\u5B50\u7C7B\u521D\u59CB\u5316bean\u5DE5\u5382</span>
    <span class="token comment">// xml\u65B9\u5F0F\u7684\u914D\u7F6E\u662F\u5728\u8FD9\u91CC\u89E3\u6790\u7684</span>
    <span class="token class-name">ConfigurableListableBeanFactory</span> beanFactory <span class="token operator">=</span> <span class="token function">obtainFreshBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Prepare the bean factory for use in this context.</span>
    <span class="token comment">// 3\u3001\u5BF9bean\u5DE5\u5382\u8FDB\u884C\u586B\u5145\u5C5E\u6027</span>
    <span class="token function">prepareBeanFactory</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token comment">// Allows post-processing of the bean factory in context subclasses.</span>
      <span class="token comment">// 4\u3001\u7559\u4E2A\u5B50\u7C7B\u53BB\u5B9E\u73B0\u8BE5\u63A5\u53E3</span>
      <span class="token function">postProcessBeanFactory</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// Invoke factory processors registered as beans in the context.</span>
      <span class="token comment">// \u8C03\u7528\u6211\u4EEC\u7684bean\u5DE5\u5382\u7684\u540E\u7F6E\u5904\u7406\u5668\uFF0C1\u5C06class\u626B\u63CF\u6210bean\u5B9A\u4E49 2bean\u5DE5\u5382\u7684\u540E\u7F6E\u5904\u7406\u5668\u8C03\u7528</span>
      <span class="token function">invokeBeanFactoryPostProcessors</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// Register bean processors that intercept bean creation.</span>
      <span class="token comment">// \u6CE8\u518C\u6211\u4EECbean\u7684\u540E\u7F6E\u5904\u7406\u5668</span>
      <span class="token function">registerBeanPostProcessors</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// Initialize message source for this context.</span>
      <span class="token comment">// \u521D\u59CB\u5316\u56FD\u9645\u5316\u8D44\u6E90\u5904\u7406\u5668</span>
      <span class="token function">initMessageSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// Initialize event multicaster for this context.</span>
      <span class="token comment">// \u521B\u5EFA\u4E8B\u4EF6\u591A\u63D2\u5668</span>
      <span class="token function">initApplicationEventMulticaster</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// Initialize other special beans in specific context subclasses.</span>
      <span class="token comment">// \u8FD9\u4E2A\u65B9\u6CD5\u540C\u6837\u4E5F\u662F\u7559\u4E2A\u5B50\u7C7B\u5B9E\u73B0\u7684springboot\u4E5F\u662F\u4ECE\u8FD9\u4E2A\u65B9\u6CD5\u8FDB\u884C\u542F\u52A8Tomcat\u7684</span>
      <span class="token function">onRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// Check for listener beans and register them.</span>
      <span class="token comment">// \u628A\u6211\u4EEC\u7684\u4E8B\u4EF6\u76D1\u542C\u5668\u6CE8\u518C\u5230\u591A\u63D2\u5668\u4E0A</span>
      <span class="token function">registerListeners</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// Instantiate all remaining (non-lazy-init) singletons.</span>
      <span class="token comment">// \u5B9E\u4F8B\u5316\u6211\u4EEC\u5269\u4F59\u7684\u5355\u5B9E\u4F8Bbean</span>
      <span class="token function">finishBeanFactoryInitialization</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// Last step: publish corresponding event.</span>
      <span class="token comment">// \u6700\u540E\u5BB9\u5668\u5237\u65B0 \u53D1\u5E03\u5237\u65B0\u4E8B\u4EF6\uFF08spring cloud\u4E5F\u662F\u4ECE\u8FD9\u91CC\u542F\u52A8\u7684\uFF09</span>
      <span class="token function">finishRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">BeansException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isWarnEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;Exception encountered during context initialization - &quot;</span> <span class="token operator">+</span>
                    <span class="token string">&quot;cancelling refresh attempt: &quot;</span> <span class="token operator">+</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token comment">// Destroy already created singletons to avoid dangling resources.</span>
      <span class="token function">destroyBeans</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// Reset &#39;active&#39; flag.</span>
      <span class="token function">cancelRefresh</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// Propagate exception to caller.</span>
      <span class="token keyword">throw</span> ex<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">finally</span> <span class="token punctuation">{</span>
      <span class="token comment">// Reset common introspection caches in Spring&#39;s core, since we</span>
      <span class="token comment">// might not ever need metadata for singleton beans anymore...</span>
      <span class="token function">resetCommonCaches</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>obtainFreshBeanFactory\u51FD\u6570</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token class-name">ConfigurableListableBeanFactory</span> <span class="token function">obtainFreshBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token doc-comment comment">/**
		 * xml\u52A0\u8F7Dspring\u4F1A\u5728\u8FD9\u91CC\u52A0\u8F7DbeanDefinition
		 * javaconfig\u53EA\u662F\u5237\u65B0\u4E86beanFactory
		 */</span>
  <span class="token function">refreshBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">getBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> IOC\u4E3B\u8981\u6D89\u53CA\u5230\u7684\u65B9\u6CD5finishBeanFactoryInitialization(beanFactory);</span>
\u5B9E\u4F8B\u5316\u6211\u4EEC\u5269\u4F59\u7684\u5355\u5B9E\u4F8Bbean
\u5C06\u6211\u4EEC\u7684BeanDefinition\u53BB\u8C03\u7528getBean\u751F\u4EA7\u6210Bean
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u5148\u4E86\u89E3\u4E24\u4E2A\u65B9\u6CD5\uFF1AinvokeBeanFactoryPostProcessors(beanFactory);\u3001finishBeanFactoryInitialization(beanFactory);</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="invokebeanfactorypostprocessors"><a class="header-anchor" href="#invokebeanfactorypostprocessors" aria-hidden="true">#</a> invokeBeanFactoryPostProcessors</h4><p>\u8C03\u7528\u6211\u4EEC\u7684bean\u5DE5\u5382\u7684\u540E\u7F6E\u5904\u7406\u5668</p><ul><li>\u5C06class\u626B\u63CF\u6210bean\u5B9A\u4E49</li><li>bean\u5DE5\u5382\u7684\u540E\u7F6E\u5904\u7406\u5668\u8C03\u7528</li></ul><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u521A\u624D\u6211\u4EEC\u5728new AnnotationBeanDefinitionReader\u7684\u65F6\u5019\uFF0C\u521B\u5EFA\u4E86ConfigurationClassPostProcessor\u540E\u7F6E\u5904\u7406\u5668\uFF0C\u7136\u540E\u5C31\u4F1A\u5728invokeBeanFactoryPostProcessors\u65B9\u6CD5\u4E2D\u89E3\u6790\u914D\u7F6E\u7C7B</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8C03\u8BD5\u7684\u65F6\u5019\uFF0CinvokeBeanFactoryPostProcessors\u4F1A\u6267\u884C\u7684BeanFactoryPostPorcessor\u540E\u7F6E\u5904\u7406\u5668\uFF0C\u8FD9\u4E2A\u65F6\u5019\u6211\u4EEC\u5C31\u53EF\u4EE5\u770B\u5230\u6211\u4EECBeanDefinition\u5DF2\u7ECF\u6DFB\u52A0\u5230beanDefinitionMap\u4E2D\u4E86</p><p><img src="`+j+`" alt="image-20220217134653475"></p><h4 id="finishbeanfactoryinitialization-beanfactory"><a class="header-anchor" href="#finishbeanfactoryinitialization-beanfactory" aria-hidden="true">#</a> finishBeanFactoryInitialization(beanFactory);</h4><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u5C06\u5FAA\u73AF\u6211\u4EEC\u7684\u6240\u6709\u7684BeanDefinition\uFF0C\u6700\u7EC8\u5C06\u6211\u4EEC\u7684BeanDefinition\u6CE8\u518C\u6210Bean</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">finishBeanFactoryInitialization</span><span class="token punctuation">(</span><span class="token class-name">ConfigurableListableBeanFactory</span> beanFactory<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Initialize conversion service for this context.</span>
  <span class="token comment">// \u4E3A\u6211\u4EEC\u7684bean\u5DE5\u5382\u521B\u5EFA\u7C7B\u578B\u8F6C\u5316\u5668 Covert</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>beanFactory<span class="token punctuation">.</span><span class="token function">containsBean</span><span class="token punctuation">(</span>CONVERSION_SERVICE_BEAN_NAME<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
      beanFactory<span class="token punctuation">.</span><span class="token function">isTypeMatch</span><span class="token punctuation">(</span>CONVERSION_SERVICE_BEAN_NAME<span class="token punctuation">,</span> <span class="token class-name">ConversionService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    beanFactory<span class="token punctuation">.</span><span class="token function">setConversionService</span><span class="token punctuation">(</span>
      beanFactory<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>CONVERSION_SERVICE_BEAN_NAME<span class="token punctuation">,</span> <span class="token class-name">ConversionService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Register a default embedded value resolver if no bean post-processor</span>
  <span class="token comment">// (such as a PropertyPlaceholderConfigurer bean) registered any before:</span>
  <span class="token comment">// at this point, primarily for resolution in annotation attribute values.</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>beanFactory<span class="token punctuation">.</span><span class="token function">hasEmbeddedValueResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    beanFactory<span class="token punctuation">.</span><span class="token function">addEmbeddedValueResolver</span><span class="token punctuation">(</span>strVal <span class="token operator">-&gt;</span> <span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">resolvePlaceholders</span><span class="token punctuation">(</span>strVal<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Initialize LoadTimeWeaverAware beans early to allow for registering their transformers early.</span>
  <span class="token comment">//  \u5904\u7406\u5173\u4E8EAspectJ</span>
  <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> weaverAwareNames <span class="token operator">=</span> beanFactory<span class="token punctuation">.</span><span class="token function">getBeanNamesForType</span><span class="token punctuation">(</span><span class="token class-name">LoadTimeWeaverAware</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> weaverAwareName <span class="token operator">:</span> weaverAwareNames<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">getBean</span><span class="token punctuation">(</span>weaverAwareName<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Stop using the temporary ClassLoader for type matching.</span>
  beanFactory<span class="token punctuation">.</span><span class="token function">setTempClassLoader</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Allow for caching all bean definition metadata, not expecting further changes.</span>
  <span class="token comment">// \u51BB\u7ED3\u6240\u6709\u7684 bean \u5B9A\u4E49 \u8BF4\u660E\u6CE8\u518C\u7684 bean \u5B9A\u4E49\u5C06\u4E0D\u88AB\u4FEE\u6539\u6216\u8005\u4EFB\u4F55\u8FDB\u4E00\u6B65\u7684\u5904\u7406</span>
  beanFactory<span class="token punctuation">.</span><span class="token function">freezeConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Instantiate all remaining (non-lazy-init) singletons.</span>
  <span class="token comment">// \u5B9E\u4F8B\u5316\u5269\u4F59\u7684\u5355\u5B9E\u4F8B bean</span>
  beanFactory<span class="token punctuation">.</span><span class="token function">preInstantiateSingletons</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">preInstantiateSingletons</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isTraceEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    logger<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">&quot;Pre-instantiating singletons in &quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Iterate over a copy to allow for init methods which in turn register new bean definitions.</span>
  <span class="token comment">// While this may not be part of the regular factory bootstrap, it does otherwise work fine.</span>
  <span class="token comment">// \u8BFB\u53D6\u6211\u4EEC\u5BB9\u5668\u4E2D\u6240\u6709\u7684 bean \u5B9A\u4E49\u7684\u540D\u79F0</span>
  <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> beanNames <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>beanDefinitionNames<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Trigger initialization of all non-lazy singleton beans...</span>
  <span class="token comment">// \u5FAA\u73AF\u6211\u4EEC\u6240\u6709\u7684 bean \u5B9A\u4E49\u540D\u79F0</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> beanName <span class="token operator">:</span> beanNames<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">RootBeanDefinition</span> bd <span class="token operator">=</span> <span class="token function">getMergedLocalBeanDefinition</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>bd<span class="token punctuation">.</span><span class="token function">isAbstract</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> bd<span class="token punctuation">.</span><span class="token function">isSingleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>bd<span class="token punctuation">.</span><span class="token function">isLazyInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u662F\u4E0D\u662F\u5DE5\u5382 bean</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFactoryBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Object</span> bean <span class="token operator">=</span> <span class="token function">getBean</span><span class="token punctuation">(</span>FACTORY_BEAN_PREFIX <span class="token operator">+</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>bean <span class="token keyword">instanceof</span> <span class="token class-name">FactoryBean</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token class-name">FactoryBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> factory <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">FactoryBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> bean<span class="token punctuation">;</span>
          <span class="token keyword">boolean</span> isEagerInit<span class="token punctuation">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> factory <span class="token keyword">instanceof</span> <span class="token class-name">SmartFactoryBean</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            isEagerInit <span class="token operator">=</span> <span class="token class-name">AccessController</span><span class="token punctuation">.</span><span class="token function">doPrivileged</span><span class="token punctuation">(</span>
              <span class="token punctuation">(</span><span class="token class-name">PrivilegedAction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">SmartFactoryBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> factory<span class="token punctuation">)</span><span class="token operator">::</span><span class="token function">isEagerInit</span><span class="token punctuation">,</span>
              <span class="token function">getAccessControlContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">else</span> <span class="token punctuation">{</span>
            isEagerInit <span class="token operator">=</span> <span class="token punctuation">(</span>factory <span class="token keyword">instanceof</span> <span class="token class-name">SmartFactoryBean</span> <span class="token operator">&amp;&amp;</span>
                           <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">SmartFactoryBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> factory<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEagerInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>isEagerInit<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">getBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">getBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Trigger post-initialization callback for all applicable beans...</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> beanName <span class="token operator">:</span> beanNames<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Object</span> singletonInstance <span class="token operator">=</span> <span class="token function">getSingleton</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>singletonInstance <span class="token keyword">instanceof</span> <span class="token class-name">SmartInitializingSingleton</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">SmartInitializingSingleton</span> smartSingleton <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">SmartInitializingSingleton</span><span class="token punctuation">)</span> singletonInstance<span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">AccessController</span><span class="token punctuation">.</span><span class="token function">doPrivileged</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">PrivilegedAction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
          smartSingleton<span class="token punctuation">.</span><span class="token function">afterSingletonsInstantiated</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token function">getAccessControlContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">else</span> <span class="token punctuation">{</span>
        smartSingleton<span class="token punctuation">.</span><span class="token function">afterSingletonsInstantiated</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>getBean\u8C03\u7528doGetBean\u65B9\u6CD5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">T</span> <span class="token function">doGetBean</span><span class="token punctuation">(</span>
			<span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> requiredType<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">,</span> <span class="token keyword">boolean</span> typeCheckOnly<span class="token punctuation">)</span>
			<span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>

  <span class="token doc-comment comment">/**
		 * \u5728\u8FD9\u91CC \u4F20\u5165\u8FDB\u6765\u7684name \u53EF\u80FD\u662F\u522B\u540D\uFF0C\u4E5F\u6709\u53EF\u80FD\u662F\u5DE5\u5382bean\u7684name\uFF0C\u6240\u4EE5\u5728\u8FD9\u91CC\u9700\u8981\u8F6C\u6362
		 */</span>
  <span class="token class-name">String</span> beanName <span class="token operator">=</span> <span class="token function">transformedBeanName</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">Object</span> bean<span class="token punctuation">;</span>

  <span class="token comment">// Eagerly check singleton cache for manually registered singletons.</span>
  <span class="token doc-comment comment">/**
		 * /*
		 * \u5982\u679C sharedInstance \u662F\u666E\u901A\u7684\u5355\u4F8B bean\uFF0C\u4E0B\u9762\u7684\u65B9\u6CD5\u4F1A\u76F4\u63A5\u8FD4\u56DE\u3002\u4F46\u5982\u679C
		 * sharedInstance \u662F FactoryBean \u7C7B\u578B\u7684\uFF0C\u5219\u9700\u8C03\u7528 getObject \u5DE5\u5382\u65B9\u6CD5\u83B7\u53D6\u771F\u6B63\u7684
		 * bean \u5B9E\u4F8B\u3002\u5982\u679C\u7528\u6237\u60F3\u83B7\u53D6 FactoryBean \u672C\u8EAB\uFF0C\u8FD9\u91CC\u4E5F\u4E0D\u4F1A\u505A\u7279\u522B\u7684\u5904\u7406\uFF0C\u76F4\u63A5\u8FD4\u56DE
		 * \u5373\u53EF\u3002\u6BD5\u7ADF FactoryBean \u7684\u5B9E\u73B0\u7C7B\u672C\u8EAB\u4E5F\u662F\u4E00\u79CD bean\uFF0C\u53EA\u4E0D\u8FC7\u5177\u6709\u4E00\u70B9\u7279\u6B8A\u7684\u529F\u80FD\u800C\u5DF2\u3002
		 */</span>
  <span class="token class-name">Object</span> sharedInstance <span class="token operator">=</span> <span class="token function">getSingleton</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>sharedInstance <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> args <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isTraceEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isSingletonCurrentlyInCreation</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        logger<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">&quot;Returning eagerly cached instance of singleton bean &#39;&quot;</span> <span class="token operator">+</span> beanName <span class="token operator">+</span>
                     <span class="token string">&quot;&#39; that is not fully initialized yet - a consequence of a circular reference&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">else</span> <span class="token punctuation">{</span>
        logger<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">&quot;Returning cached instance of singleton bean &#39;&quot;</span> <span class="token operator">+</span> beanName <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    bean <span class="token operator">=</span> <span class="token function">getObjectForBeanInstance</span><span class="token punctuation">(</span>sharedInstance<span class="token punctuation">,</span> name<span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// Fail if we&#39;re already creating this bean instance:</span>
    <span class="token comment">// We&#39;re assumably within a circular reference.</span>
    <span class="token doc-comment comment">/**
			 * spring \u53EA\u80FD\u89E3\u51B3\u5355\u4F8B\u5BF9\u8C61\u7684setter\u6CE8\u5165\u7684\u5FAA\u73AF\u4F9D\u8D56\uFF0C\u4E0D\u80FD\u89E3\u51B3\u6784\u9020\u5668\u6CE8\u5165
			 * \u5224\u65AD\u662F\u5426\u662F\u5355\u4F8BBean\uFF0C\u5982\u679C\u662F\u591A\u4F8B\u7684bean\u5C31\u4F1A\u629B\u51FA\u5F02\u5E38
			 */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isPrototypeCurrentlyInCreation</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanCurrentlyInCreationException</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Check if bean definition exists in this factory.</span>
    <span class="token doc-comment comment">/**
			 * \u5224\u65ADAbstractBeanFacotry\u5DE5\u5382\u662F\u5426\u6709\u7236\u5DE5\u5382(\u4E00\u822C\u60C5\u51B5\u4E0B\u662F\u6CA1\u6709\u7236\u5DE5\u5382\u56E0\u4E3AabstractBeanFactory\u76F4\u63A5\u662F\u62BD\u8C61\u7C7B,\u4E0D\u5B58\u5728\u7236\u5DE5\u5382)
			 * \u4E00\u822C\u60C5\u51B5\u4E0B,\u53EA\u6709Spring \u548CSpringMvc\u6574\u5408\u7684\u65F6\u624D\u4F1A\u6709\u7236\u5B50\u5BB9\u5668\u7684\u6982\u5FF5,
			 * \u6BD4\u5982\u6211\u4EEC\u7684Controller\u4E2D\u6CE8\u5165Service\u7684\u65F6\u5019\uFF0C\u53D1\u73B0\u6211\u4EEC\u4F9D\u8D56\u7684\u662F\u4E00\u4E2A\u5F15\u7528\u5BF9\u8C61\uFF0C\u90A3\u4E48\u4ED6\u5C31\u4F1A\u8C03\u7528getBean\u53BB\u628Aservice\u627E\u51FA\u6765
			 * \u4F46\u662F\u5F53\u524D\u6240\u5728\u7684\u5BB9\u5668\u662Fweb\u5B50\u5BB9\u5668\uFF0C\u90A3\u4E48\u5C31\u4F1A\u5728\u8FD9\u91CC\u7684 \u5148\u53BB\u7236\u5BB9\u5668\u627E
			 */</span>
    <span class="token class-name">BeanFactory</span> parentBeanFactory <span class="token operator">=</span> <span class="token function">getParentBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u82E5\u5B58\u5728\u7236\u5DE5\u5382\uFF0C\u4E14\u5F53\u524D\u7684bean\u5DE5\u5382\u4E0D\u5B58\u5728\u5F53\u524D\u7684bean\u5B9A\u4E49\uFF0C\u90A3\u4E48bean\u5B9A\u4E49\u662F\u5B58\u5728\u4E0E\u7236\u5BB9\u5668\u4E2D</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>parentBeanFactory <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">containsBeanDefinition</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// Not found -&gt; check parent.</span>
      <span class="token comment">// \u83B7\u53D6bean\u7684\u539F\u59CB\u540D\u79F0</span>
      <span class="token class-name">String</span> nameToLookup <span class="token operator">=</span> <span class="token function">originalBeanName</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u82E5\u4E3AabstractBeanFactory\u7C7B\u578B\uFF0C\u59D4\u6258\u7236\u7C7B\u5904\u7406</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>parentBeanFactory <span class="token keyword">instanceof</span> <span class="token class-name">AbstractBeanFactory</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">AbstractBeanFactory</span><span class="token punctuation">)</span> parentBeanFactory<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">doGetBean</span><span class="token punctuation">(</span>
          nameToLookup<span class="token punctuation">,</span> requiredType<span class="token punctuation">,</span> args<span class="token punctuation">,</span> typeCheckOnly<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>args <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Delegation to parent with explicit args.</span>
        <span class="token comment">// \u59D4\u6258\u7ED9\u6784\u9020\u51FD\u6570 getBean()\u5904\u7406</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">)</span> parentBeanFactory<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>nameToLookup<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>requiredType <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// No args -&gt; delegate to standard getBean method.</span>
        <span class="token keyword">return</span> parentBeanFactory<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>nameToLookup<span class="token punctuation">,</span> requiredType<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">)</span> parentBeanFactory<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>nameToLookup<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
			 * \u65B9\u6CD5\u53C2\u6570 typeCheckOnly \uFF0C\u662F\u7528\u6765\u5224\u65AD\u8C03\u7528 #getBean(...) \u65B9\u6CD5\u65F6\uFF0C\u8868\u793A\u662F\u5426\u4E3A\u4EC5\u4EC5\u8FDB\u884C\u7C7B\u578B\u68C0\u67E5\u83B7\u53D6 Bean \u5BF9\u8C61
			 * \u5982\u679C\u4E0D\u662F\u4EC5\u4EC5\u505A\u7C7B\u578B\u68C0\u67E5\uFF0C\u800C\u662F\u521B\u5EFA Bean \u5BF9\u8C61\uFF0C\u5219\u9700\u8981\u8C03\u7528 #markBeanAsCreated(String beanName) \u65B9\u6CD5\uFF0C\u8FDB\u884C\u8BB0\u5F55
			 */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>typeCheckOnly<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">markBeanAsCreated</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token doc-comment comment">/**
				 * \u4ECE\u5BB9\u5668\u4E2D\u83B7\u53D6 beanName \u76F8\u5E94\u7684 GenericBeanDefinition \u5BF9\u8C61\uFF0C\u5E76\u5C06\u5176\u8F6C\u6362\u4E3A RootBeanDefinition \u5BF9\u8C61
				 *   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tulingParentCompent<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.tuling.testparentsonbean.TulingParentCompent<span class="token punctuation">&quot;</span></span> <span class="token attr-name">abstract</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
				 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tulingCompent<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tulingCompent<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
				 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>
				 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tulingSonCompent<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.tuling.testparentsonbean.TulingSonCompent<span class="token punctuation">&quot;</span></span> <span class="token attr-name">parent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tulingParentCompent<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>
				 */</span>
      <span class="token class-name">RootBeanDefinition</span> mbd <span class="token operator">=</span> <span class="token function">getMergedLocalBeanDefinition</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">checkMergedBeanDefinition</span><span class="token punctuation">(</span>mbd<span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// Guarantee initialization of beans that the current bean depends on.</span>
      <span class="token comment">// dependsOn \u4F9D\u8D56bean\u7684\u540D\u79F0\uFF0C\u5982\u679C\u662F\u4F9D\u8D56\u4E8E\u5176\u4ED6\u7684\uFF0C\u5219\u9700\u8981\u5148\u521B\u5EFA</span>
      <span class="token doc-comment comment">/**
				 *
				 * @Bean
				public DependsA dependsA() <span class="token punctuation">{</span>
				return new DependsA();
				<span class="token punctuation">}</span>

				 @Bean
				 @DependsOn(value = <span class="token punctuation">{</span>&quot;dependsA&quot;<span class="token punctuation">}</span>)
				 public DependsB dependsB() <span class="token punctuation">{</span>
				 return new DependsB();
				 <span class="token punctuation">}</span>
				  * \u5904\u7406dependsOn\u7684\u4F9D\u8D56(\u8FD9\u4E2A\u4E0D\u662F\u6211\u4EEC\u6240\u8C13\u7684\u5FAA\u73AF\u4F9D\u8D56 \u800C\u662Fbean\u521B\u5EFA\u524D\u540E\u7684\u4F9D\u8D56)
				 */</span>
      <span class="token comment">//\u4F9D\u8D56bean\u7684\u540D\u79F0</span>
      <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dependsOn <span class="token operator">=</span> mbd<span class="token punctuation">.</span><span class="token function">getDependsOn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>dependsOn <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C\u7ED9\u5B9A\u7684\u4F9D\u8D56bean\u5DF2\u7ECF\u6CE8\u518C\u4E3A\u4F9D\u8D56\u7ED9\u5B9A\u7684bean</span>
        <span class="token comment">// \u5373\u5FAA\u73AF\u4F9D\u8D56\u7684\u60C5\u51B5\uFF0C\u629B\u51FA BeanCreationException \u5F02\u5E38</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> dep <span class="token operator">:</span> dependsOn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDependent</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> dep<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanCreationException</span><span class="token punctuation">(</span>mbd<span class="token punctuation">.</span><span class="token function">getResourceDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> beanName<span class="token punctuation">,</span>
                                            <span class="token string">&quot;Circular depends-on relationship between &#39;&quot;</span> <span class="token operator">+</span> beanName <span class="token operator">+</span> <span class="token string">&quot;&#39; and &#39;&quot;</span> <span class="token operator">+</span> dep <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token comment">// \u4FDD\u5B58\u7684\u662F\u4F9D\u8D56beanName\u4E4B\u95F4\u7684\u6620\u5C04\u5173\u7CFB\uFF1A\u4F9D\u8D56beanName -&gt; beanName\u7684\u96C6\u5408</span>
          <span class="token function">registerDependentBean</span><span class="token punctuation">(</span>dep<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u83B7\u53D6dependOn\u7684bean</span>
            <span class="token function">getBean</span><span class="token punctuation">(</span>dep<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NoSuchBeanDefinitionException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanCreationException</span><span class="token punctuation">(</span>mbd<span class="token punctuation">.</span><span class="token function">getResourceDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> beanName<span class="token punctuation">,</span>
                                            <span class="token string">&quot;&#39;&quot;</span> <span class="token operator">+</span> beanName <span class="token operator">+</span> <span class="token string">&quot;&#39; depends on missing bean &#39;&quot;</span> <span class="token operator">+</span> dep <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

      <span class="token comment">// Create bean instance.</span>
      <span class="token comment">// \u521B\u5EFA\u5355\u4F8BBean</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>mbd<span class="token punctuation">.</span><span class="token function">isSingleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u628AbeanName\u548C\u4E00\u4E2AsingletonFactory \u5E76\u4E14\u4F20\u5165\u4E00\u4E2A\u56DE\u8C03\u5BF9\u8C61\u7528\u4E8E\u56DE\u8C03</span>
        <span class="token comment">// \u628A\u6211\u4EEC\u7684bean\u6807\u8BB0\u6210\u6B63\u5728\u521B\u5EFA\uFF0C\u9632\u6B62\u5FAA\u73AF\u4F9D\u8D56</span>
        sharedInstance <span class="token operator">=</span> <span class="token function">getSingleton</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u8FDB\u5165\u521B\u5EFABean\u7684\u903B\u8F91</span>
            <span class="token keyword">return</span> <span class="token function">createBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> mbd<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">BeansException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Explicitly remove instance from singleton cache: It might have been put there</span>
            <span class="token comment">// eagerly by the creation process, to allow for circular reference resolution.</span>
            <span class="token comment">// Also remove any beans that received a temporary reference to the bean.</span>
            <span class="token comment">// \u521B\u5EFAbean\u7684\u8FC7\u7A0B\u4E2D\u53D1\u751F\u5F02\u5E38\uFF0C\u9700\u8981\u9500\u6BC1\u5173\u4E8E\u5F53\u524Dbean\u7684\u6240\u6709\u4FE1\u606F</span>
            <span class="token function">destroySingleton</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">throw</span> ex<span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        bean <span class="token operator">=</span> <span class="token function">getObjectForBeanInstance</span><span class="token punctuation">(</span>sharedInstance<span class="token punctuation">,</span> name<span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> mbd<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>mbd<span class="token punctuation">.</span><span class="token function">isPrototype</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// It&#39;s a prototype -&gt; create a new instance.</span>
        <span class="token class-name">Object</span> prototypeInstance <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
          <span class="token function">beforePrototypeCreation</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
          prototypeInstance <span class="token operator">=</span> <span class="token function">createBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> mbd<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">finally</span> <span class="token punctuation">{</span>
          <span class="token function">afterPrototypeCreation</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        bean <span class="token operator">=</span> <span class="token function">getObjectForBeanInstance</span><span class="token punctuation">(</span>prototypeInstance<span class="token punctuation">,</span> name<span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> mbd<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> scopeName <span class="token operator">=</span> mbd<span class="token punctuation">.</span><span class="token function">getScope</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasLength</span><span class="token punctuation">(</span>scopeName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token string">&quot;No scope name defined for bean \xB4&quot;</span> <span class="token operator">+</span> beanName <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">Scope</span> scope <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>scopes<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>scopeName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>scope <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token string">&quot;No Scope registered for scope name &#39;&quot;</span> <span class="token operator">+</span> scopeName <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
          <span class="token class-name">Object</span> scopedInstance <span class="token operator">=</span> scope<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">beforePrototypeCreation</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
              <span class="token keyword">return</span> <span class="token function">createBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> mbd<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">finally</span> <span class="token punctuation">{</span>
              <span class="token function">afterPrototypeCreation</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          bean <span class="token operator">=</span> <span class="token function">getObjectForBeanInstance</span><span class="token punctuation">(</span>scopedInstance<span class="token punctuation">,</span> name<span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> mbd<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IllegalStateException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanCreationException</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span>
                                          <span class="token string">&quot;Scope &#39;&quot;</span> <span class="token operator">+</span> scopeName <span class="token operator">+</span> <span class="token string">&quot;&#39; is not active for the current thread; consider &quot;</span> <span class="token operator">+</span>
                                          <span class="token string">&quot;defining a scoped proxy for this bean if you intend to refer to it from a singleton&quot;</span><span class="token punctuation">,</span>
                                          ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">BeansException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">cleanupAfterBeanCreationFailure</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">throw</span> ex<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Check if required type matches the type of the actual bean instance.</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>requiredType <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>requiredType<span class="token punctuation">.</span><span class="token function">isInstance</span><span class="token punctuation">(</span>bean<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token class-name">T</span> convertedBean <span class="token operator">=</span> <span class="token function">getTypeConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">convertIfNecessary</span><span class="token punctuation">(</span>bean<span class="token punctuation">,</span> requiredType<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>convertedBean <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanNotOfRequiredTypeException</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> requiredType<span class="token punctuation">,</span> bean<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> convertedBean<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">TypeMismatchException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isTraceEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        logger<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to convert bean &#39;&quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&quot;&#39; to required type &#39;&quot;</span> <span class="token operator">+</span>
                     <span class="token class-name">ClassUtils</span><span class="token punctuation">.</span><span class="token function">getQualifiedName</span><span class="token punctuation">(</span>requiredType<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanNotOfRequiredTypeException</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> requiredType<span class="token punctuation">,</span> bean<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">)</span> bean<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>createBean\u65B9\u6CD5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token class-name">Object</span> <span class="token function">createBean</span><span class="token punctuation">(</span><span class="token class-name">String</span> beanName<span class="token punctuation">,</span> <span class="token class-name">RootBeanDefinition</span> mbd<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span>
			<span class="token keyword">throws</span> <span class="token class-name">BeanCreationException</span> <span class="token punctuation">{</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isTraceEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    logger<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">&quot;Creating instance of bean &#39;&quot;</span> <span class="token operator">+</span> beanName <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token class-name">RootBeanDefinition</span> mbdToUse <span class="token operator">=</span> mbd<span class="token punctuation">;</span>

  <span class="token comment">// Make sure bean class is actually resolved at this point, and</span>
  <span class="token comment">// clone the bean definition in case of a dynamically resolved Class</span>
  <span class="token comment">// which cannot be stored in the shared merged bean definition.</span>
  <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> resolvedClass <span class="token operator">=</span> <span class="token function">resolveBeanClass</span><span class="token punctuation">(</span>mbd<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>resolvedClass <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>mbd<span class="token punctuation">.</span><span class="token function">hasBeanClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> mbd<span class="token punctuation">.</span><span class="token function">getBeanClassName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    mbdToUse <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RootBeanDefinition</span><span class="token punctuation">(</span>mbd<span class="token punctuation">)</span><span class="token punctuation">;</span>
    mbdToUse<span class="token punctuation">.</span><span class="token function">setBeanClass</span><span class="token punctuation">(</span>resolvedClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Prepare method overrides.</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    mbdToUse<span class="token punctuation">.</span><span class="token function">prepareMethodOverrides</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">BeanDefinitionValidationException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanDefinitionStoreException</span><span class="token punctuation">(</span>mbdToUse<span class="token punctuation">.</span><span class="token function">getResourceDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                           beanName<span class="token punctuation">,</span> <span class="token string">&quot;Validation of method overrides failed&quot;</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token comment">// Give BeanPostProcessors a chance to return a proxy instead of the target bean instance.</span>
    <span class="token doc-comment comment">/**
			 * \u7B2C1\u4E2Abean\u540E\u7F6E\u5904\u7406\u5668
			 *
			 * \u901A\u8FC7bean\u7684\u540E\u7F6E\u5904\u7406\u5668\u6765\u8FDB\u884C\u540E\u7F6E\u5904\u7406\u751F\u6210\u4EE3\u7406\u5BF9\u8C61\uFF0C\u4E00\u822C\u60C5\u51B5\u4E0B\u5728\u6B64\u5904\u4E0D\u4F1A\u751F\u6210\u4EE3\u7406\u5BF9\u8C61
			 * \u4E3A\u4EC0\u4E48\u4E0D\u80FD\u751F\u6210\u4EE3\u7406\u5BF9\u8C61\uFF0C\u4E0D\u7BA1\u662F\u6211\u4EEC\u7684jdk\u4EE3\u7406\u8FD8\u662Fcglib\u4EE3\u7406\u90FD\u4E0D\u4F1A\u5728\u6B64\u5904\u8FDB\u884C\u4EE3\u7406\uFF0C\u56E0\u4E3A\u6211\u4EEC\u7684
			 * \u771F\u5B9E\u5BF9\u8C61\u6CA1\u6709\u751F\u6210\uFF0C\u6240\u4EE5\u5728\u8FD9\u91CC\u4E0D\u4F1A\u751F\u6210\u4EE3\u7406\u5BF9\u8C61\uFF0C\u90A3\u4E48\u5728\u8FD9\u4E00\u6B65\u662F\u6211\u4EECaop\u548C\u4E8B\u52A1\u7684\u5173\u952E\uFF0C\u56E0\u4E3A\u5728\u8FD9\u91CC
			 * \u89E3\u6790\u6211\u4EEC\u7684aop\u5207\u9762\u4FE1\u606F\u8FDB\u884C\u7F13\u5B58
			 */</span>
    <span class="token class-name">Object</span> bean <span class="token operator">=</span> <span class="token function">resolveBeforeInstantiation</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> mbdToUse<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>bean <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> bean<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanCreationException</span><span class="token punctuation">(</span>mbdToUse<span class="token punctuation">.</span><span class="token function">getResourceDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> beanName<span class="token punctuation">,</span>
                                    <span class="token string">&quot;BeanPostProcessor before instantiation of bean failed&quot;</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
			 * \u8BE5\u6B65\u9AA4\u662F\u6211\u4EEC\u771F\u6B63\u7684\u521B\u5EFA\u6211\u4EEC\u7684bean\u7684\u5B9E\u4F8B\u5BF9\u8C61\u7684\u8FC7\u7A0B
			 */</span>
    <span class="token class-name">Object</span> beanInstance <span class="token operator">=</span> <span class="token function">doCreateBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> mbdToUse<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isTraceEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      logger<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">&quot;Finished creating instance of bean &#39;&quot;</span> <span class="token operator">+</span> beanName <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> beanInstance<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">BeanCreationException</span> <span class="token operator">|</span> <span class="token class-name">ImplicitlyAppearedSingletonException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// A previously detected exception with proper bean creation context already,</span>
    <span class="token comment">// or illegal singleton state to be communicated up to DefaultSingletonBeanRegistry.</span>
    <span class="token keyword">throw</span> ex<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanCreationException</span><span class="token punctuation">(</span>
      mbdToUse<span class="token punctuation">.</span><span class="token function">getResourceDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> <span class="token string">&quot;Unexpected exception during bean creation&quot;</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6574\u4F53\u7684\u8FC7\u7A0B</p><p><img src="`+E+`" alt="image-20220217161617522"></p><blockquote><p>\u5F53\u6211\u4EEC\u9700\u8981\u4F7F\u7528FactoryBean\u7684\u65F6\u5019\uFF0C\u9700\u8981\u5B9E\u73B0FactoryBean\u63A5\u53E3</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyTestBean</span> <span class="token keyword">implements</span> <span class="token class-name">FactoryBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
	<span class="token keyword">private</span> <span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">;</span>

	<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> name<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token annotation punctuation">@Override</span>
	<span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">getObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token annotation punctuation">@Override</span>
	<span class="token keyword">public</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">getObjectType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u8C03\u7528getBean\u7684\u65F6\u5019\uFF0C\u4F1A\u6839\u636E\u6211\u4EECgetObject\u8FD4\u56DE\u6211\u4EEC\u521B\u5EFA\u7684\u5BF9\u8C61\uFF0C\u8FD9\u6837\u5C31\u53EF\u4EE5\u81EA\u5B9A\u4E49\u521B\u5EFA</p><p>\u50CF\u4E0A\u9762\u7684\u4EE3\u7801\u5C31\u4F1A\u8FD4\u56DEUser\u5BF9\u8C61</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u6B64\u65F6\u5982\u679C\u60F3\u8981\u5F97\u5230\u539F\u672CMyTestBean\u7684\u8BDD\uFF0C\u53EF\u4EE5\u901A\u8FC7&amp;\u5F97\u5230</span>
context.getBean(&quot;&amp;myTestBean&quot;)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u8FD9\u4E2AFactoryBean\u6709\u4EC0\u4E48\u4F5C\u7528\uFF1F</span>
\u5F53\u6211\u4EEC\u96C6\u6210mybatis\u7684\u65F6\u5019\uFF0CMapper\u63A5\u53E3\uFF0C\u9700\u8981\u628A\u63A5\u53E3\u6240\u5BF9\u5E94\u7684\u90A3\u4E2A\u5B9E\u73B0\u7C7B\u6CE8\u518C\u5230\u5BB9\u5668\u5F53\u4E2D\uFF0C\u6B64\u65F6\u5C31\u53EF\u4EE5\u901A\u8FC7FactoryBean\u5F97\u5230\u5BF9\u5E94\u7684\u52A8\u6001\u4EE3\u7406\u51FA\u6765\u7684\u5B9E\u73B0\u7C7B\u6CE8\u5165\u5230spring IOC\u5BB9\u5668\u5F53\u4E2D
mybatis\u4F1A\u6839\u636E\u63A5\u53E3\u548Cxml\u6587\u4EF6\u751F\u6210\u4E00\u4E2A\u5B9E\u73B0\u7C7B\uFF0C\u8FD9\u4E2A\u5B9E\u73B0\u4E3A\u4E86\u80FD\u6CE8\u5165\u5230spring IOC\u5BB9\u5668\u5F53\u4E2D\uFF0C\u5C31\u53EF\u4EE5\u4F7F\u7528FactoryBean
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u662FFactoryBean\u7684\u8BDD\uFF0C\u4F1A\u5148\u521B\u5EFA\u539F\u578BBean\uFF0C\u4E5F\u5C31\u662FFactoryBean\u7684\u5B9E\u73B0\u5BF9\u8C61</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote><blockquote><p><strong>\u5B9E\u4F8B\u5316\u65B9\u5F0F</strong></p><ul><li>\u53CD\u5C04 <ul><li>\u901A\u8FC7\u65E0\u53C2\u6784\u9020\u51FD\u6570 \u9ED8\u8BA4</li><li>\u901A\u8FC7\u6709\u53C2\u6784\u9020\u51FD\u6570</li></ul></li><li>\u5DE5\u5382\uFF0C\u5C31\u662F@Bean\u7684\u65B9\u5F0F</li></ul><p><img src="`+q+`" alt="image-20220217154643717"></p></blockquote><h3 id="\u5185\u7F6Epostprocessor\u540E\u7F6E\u5904\u7406\u5668\u6DF1\u5EA6\u89E3\u6790"><a class="header-anchor" href="#\u5185\u7F6Epostprocessor\u540E\u7F6E\u5904\u7406\u5668\u6DF1\u5EA6\u89E3\u6790" aria-hidden="true">#</a> \u5185\u7F6EPostProcessor\u540E\u7F6E\u5904\u7406\u5668\u6DF1\u5EA6\u89E3\u6790</h3><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u8BFE\u7A0B\u5185\u5BB9</span>
<span class="token list punctuation">1.</span> BeanFactoryPostProcessor\u8C03\u7528\u8FC7\u7A0B\u6E90\u7801\u6DF1\u5EA6\u5256\u6790
<span class="token list punctuation">2.</span> \u914D\u7F6E\u7C7B\u7684\u89E3\u6790\u8FC7\u7A0B\u6E90\u7801\u6DF1\u5EA6\u5256\u6790
<span class="token list punctuation">3.</span> \u914D\u7F6E\u7C7B@Configuration\u52A0\u4E0E\u4E0D\u52A0\u7684\u533A\u522B
<span class="token list punctuation">4.</span> \u91CD\u590DbeanName\u7684\u8986\u76D6\u89C4\u5219
<span class="token list punctuation">5.</span> @ComponentScan\u7684\u89E3\u6790\u539F\u7406
<span class="token list punctuation">6.</span> BeanDefinition\u7684\u8BE6\u89E3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u6CE8\u89E3\u7684\u65B9\u5F0F\u4E3A\u4EC0\u4E48\u6BD4xml\u66F4\u52A0\u9AD8\u7EA7</span>
\u6CE8\u89E3\u7684\u65B9\u5F0F\u4F7F\u7528\u7684\u662F\u6269\u5C55\u70B9\u7684\u65B9\u5F0F\u89E3\u6790\uFF0C\u53EF\u4EE5\u52A8\u6001\u63D2\u62D4\uFF1B\u800Cxml\u914D\u7F6E\u662F\u901A\u8FC7\u4EE3\u7801\u8026\u5408\u5728spring\u89E3\u6790\u4EE3\u7801\u4E2D
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>\u6269\u5C55\uFF1Axml\u7684\u65B9\u5F0F\u7684\u914D\u7F6E\u7684\u8BFB\u53D6\u3001\u6CE8\u518C\u7684\u8FC7\u7A0B</strong></p><p>xml\u65B9\u5F0F\u7684\u914D\u7F6E\u8BFB\u53D6\uFF0C\u4E3B\u8981\u662F\u5728refresh\u7684\u7B2C\u4E8C\u4E2A\u6B65\u9AA4</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// 2\u3001\u83B7\u53D6\u544A\u8BC9\u5B50\u7C7B\u521D\u59CB\u5316bean\u5DE5\u5382</span>
<span class="token comment">// xml\u65B9\u5F0F\u7684\u914D\u7F6E\u662F\u5728\u8FD9\u91CC\u89E3\u6790\u7684</span>
<span class="token class-name">ConfigurableListableBeanFactory</span> beanFactory <span class="token operator">=</span> <span class="token function">obtainFreshBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token class-name">ConfigurableListableBeanFactory</span> <span class="token function">obtainFreshBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token doc-comment comment">/**
		 * xml\u52A0\u8F7Dspring\u4F1A\u5728\u8FD9\u91CC\u52A0\u8F7DbeanDefinition
		 * javaconfig\u53EA\u662F\u5237\u65B0\u4E86beanFactory
		 */</span>
  <span class="token function">refreshBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">getBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>xml\u65B9\u5F0F\u7684refreshBeanFactory\u5B9E\u73B0\u662FAbstractRefreshableApplicationContext</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">refreshBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u82E5\u5DF2\u7ECF\u5B58\u5728\u4E86\uFF0C\u5C31\u6267\u884C\u9500\u6BC1\u7B49\u64CD\u4F5C</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hasBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">destroyBeans</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">closeBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
			 * \u4E3A\u6211\u4EEC\u7684spring\u5E94\u7528\u4E0A\u4E0B\u6587\u5BF9\u8C61\u521B\u5EFA\u6211\u4EEC\u7684beanFactory
			 * DefaultListableBeanFactory \u662F BeanFactory \u7684\u5B50\u7C7B\uFF0C\u8FD9\u4E2A\u662F\u529F\u80FD\u6700\u5F3A\u5927\u7684\uFF0C\u5B9E\u73B0\u4E86 BeanFactory \u548C BeanDefinitionRegistry
			 * BeanFactory Bean \u5DE5\u5382
			 * BeanDefinitionRegistry Bean \u7684\u914D\u7F6E\uFF08\u56FE\u7EB8\uFF09
			 */</span>
    <span class="token class-name">DefaultListableBeanFactory</span> beanFactory <span class="token operator">=</span> <span class="token function">createBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u4E3A\u5BB9\u5668\u521B\u5EFA\u5E8F\u5217\u5316ID</span>
    beanFactory<span class="token punctuation">.</span><span class="token function">setSerializationId</span><span class="token punctuation">(</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">customizeBeanFactory</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u52A0\u8F7D\u6211\u4EEC\u7684 bean \u5B9A\u4E49\uFF08\u56FE\u7EB8\uFF09\uFF0C\u628A beanFactory \u4F20\u8FDB\u53BB\uFF0C\u56E0\u4E3A beanFactory \u5B9E\u73B0\u4E86 BeanDefinitionRegistry\u63A5\u53E3</span>
    <span class="token doc-comment comment">/**
			 * \u901A\u8FC7\u4E0D\u540C\u65B9\u5F0F\u52A0\u8F7D beanDefinition\uFF1A
			 * AbstractXmlApplicationContext\uFF1Axml \u89E3\u6790
			 * AnnotationConfigWebApplicationContext\uFF1A\u6CE8\u89E3\u89E3\u6790
			 * GroovyWebApplicationContext
			 * XmlWebApplicationContext
			 */</span>
    <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>beanFactory <span class="token operator">=</span> beanFactory<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ApplicationContextException</span><span class="token punctuation">(</span><span class="token string">&quot;I/O error parsing bean definition source for &quot;</span> <span class="token operator">+</span> <span class="token function">getDisplayName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>AbstractXmlApplicationContext\u662Fxml\u89E3\u6790\u7684\u5B9E\u73B0</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">DefaultListableBeanFactory</span> beanFactory<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
  <span class="token comment">// Create a new XmlBeanDefinitionReader for the given BeanFactory.</span>
  <span class="token comment">// \u8BFB\u53D6\u914D\u7F6E\u76F4\u63A5\u8026\u5408\u5728\u4EE3\u7801\u4E2D</span>
  <span class="token class-name">XmlBeanDefinitionReader</span> beanDefinitionReader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XmlBeanDefinitionReader</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Configure the bean definition reader with this context&#39;s</span>
  <span class="token comment">// resource loading environment.</span>
  beanDefinitionReader<span class="token punctuation">.</span><span class="token function">setEnvironment</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  beanDefinitionReader<span class="token punctuation">.</span><span class="token function">setResourceLoader</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  beanDefinitionReader<span class="token punctuation">.</span><span class="token function">setEntityResolver</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ResourceEntityResolver</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Allow a subclass to provide custom initialization of the reader,</span>
  <span class="token comment">// then proceed with actually loading the bean definitions.</span>
  <span class="token function">initBeanDefinitionReader</span><span class="token punctuation">(</span>beanDefinitionReader<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span>beanDefinitionReader<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6839\u636E\u8BFB\u53D6\u5668 XmlBeanDefinitionReader \u52A0\u8F7D bean \u5B9A\u4E49</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">XmlBeanDefinitionReader</span> reader<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
  <span class="token class-name">Resource</span><span class="token punctuation">[</span><span class="token punctuation">]</span> configResources <span class="token operator">=</span> <span class="token function">getConfigResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>configResources <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u901A\u8FC7\u8BFB\u53D6\u5668\u5F00\u59CB\u52A0\u8F7D</span>
    reader<span class="token punctuation">.</span><span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span>configResources<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> configLocations <span class="token operator">=</span> <span class="token function">getConfigLocations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>configLocations <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u83B7\u5F97 xml \u8DEF\u5F84 \u901A\u8FC7\u8BFB\u53D6\u5668\u5F00\u59CB\u52A0\u8F7D</span>
    reader<span class="token punctuation">.</span><span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span>configLocations<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">Resource</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> resources<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeanDefinitionStoreException</span> <span class="token punctuation">{</span>
  <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>resources<span class="token punctuation">,</span> <span class="token string">&quot;Resource array must not be null&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Resource</span> resource <span class="token operator">:</span> resources<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    count <span class="token operator">+=</span> <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span>resource<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> count<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> locations<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeanDefinitionStoreException</span> <span class="token punctuation">{</span>
  <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>locations<span class="token punctuation">,</span> <span class="token string">&quot;Location array must not be null&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/**
		 * \u56E0\u4E3A xml \u7684\u8DEF\u5F84\u662F\u591A\u4E2A\u7684\uFF0C\u6240\u4EE5\u9700\u8981\u901A\u8FC7\u5FAA\u73AF\u53BB\u6DFB\u52A0
		 */</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> location <span class="token operator">:</span> locations<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    count <span class="token operator">+=</span> <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span>location<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> count<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">EncodedResource</span> encodedResource<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeanDefinitionStoreException</span> <span class="token punctuation">{</span>
  <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>encodedResource<span class="token punctuation">,</span> <span class="token string">&quot;EncodedResource must not be null&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isTraceEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    logger<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">&quot;Loading XML bean definitions from &quot;</span> <span class="token operator">+</span> encodedResource<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">EncodedResource</span><span class="token punctuation">&gt;</span></span> currentResources <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>resourcesCurrentlyBeingLoaded<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>currentResources<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>encodedResource<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanDefinitionStoreException</span><span class="token punctuation">(</span>
      <span class="token string">&quot;Detected cyclic loading of &quot;</span> <span class="token operator">+</span> encodedResource <span class="token operator">+</span> <span class="token string">&quot; - check your import definitions!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> encodedResource<span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">InputSource</span> inputSource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InputSource</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>encodedResource<span class="token punctuation">.</span><span class="token function">getEncoding</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      inputSource<span class="token punctuation">.</span><span class="token function">setEncoding</span><span class="token punctuation">(</span>encodedResource<span class="token punctuation">.</span><span class="token function">getEncoding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token function">doLoadBeanDefinitions</span><span class="token punctuation">(</span>inputSource<span class="token punctuation">,</span> encodedResource<span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanDefinitionStoreException</span><span class="token punctuation">(</span>
      <span class="token string">&quot;IOException parsing XML document from &quot;</span> <span class="token operator">+</span> encodedResource<span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">finally</span> <span class="token punctuation">{</span>
    currentResources<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>encodedResource<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>currentResources<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>resourcesCurrentlyBeingLoaded<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BFB\u53D6\u6210Document\u5BF9\u8C61\uFF0C\u5E76\u6CE8\u518CBeanDefinition</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">int</span> <span class="token function">doLoadBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">InputSource</span> inputSource<span class="token punctuation">,</span> <span class="token class-name">Resource</span> resource<span class="token punctuation">)</span>
			<span class="token keyword">throws</span> <span class="token class-name">BeanDefinitionStoreException</span> <span class="token punctuation">{</span>

  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8BFB\u53D6\u6210document</span>
    <span class="token class-name">Document</span> doc <span class="token operator">=</span> <span class="token function">doLoadDocument</span><span class="token punctuation">(</span>inputSource<span class="token punctuation">,</span> resource<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u901A\u8FC7\u8BFB\u53D6\u5230\u7684Document\u5BF9\u8C61\u6CE8\u518CBeanDefinition</span>
    <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token function">registerBeanDefinitions</span><span class="token punctuation">(</span>doc<span class="token punctuation">,</span> resource<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Loaded &quot;</span> <span class="token operator">+</span> count <span class="token operator">+</span> <span class="token string">&quot; bean definitions from &quot;</span> <span class="token operator">+</span> resource<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> count<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">BeanDefinitionStoreException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> ex<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SAXParseException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">XmlBeanDefinitionStoreException</span><span class="token punctuation">(</span>resource<span class="token punctuation">.</span><span class="token function">getDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                              <span class="token string">&quot;Line &quot;</span> <span class="token operator">+</span> ex<span class="token punctuation">.</span><span class="token function">getLineNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; in XML document from &quot;</span> <span class="token operator">+</span> resource <span class="token operator">+</span> <span class="token string">&quot; is invalid&quot;</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SAXException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">XmlBeanDefinitionStoreException</span><span class="token punctuation">(</span>resource<span class="token punctuation">.</span><span class="token function">getDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                              <span class="token string">&quot;XML document from &quot;</span> <span class="token operator">+</span> resource <span class="token operator">+</span> <span class="token string">&quot; is invalid&quot;</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ParserConfigurationException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanDefinitionStoreException</span><span class="token punctuation">(</span>resource<span class="token punctuation">.</span><span class="token function">getDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                           <span class="token string">&quot;Parser configuration exception parsing XML from &quot;</span> <span class="token operator">+</span> resource<span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanDefinitionStoreException</span><span class="token punctuation">(</span>resource<span class="token punctuation">.</span><span class="token function">getDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                           <span class="token string">&quot;IOException parsing XML document from &quot;</span> <span class="token operator">+</span> resource<span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanDefinitionStoreException</span><span class="token punctuation">(</span>resource<span class="token punctuation">.</span><span class="token function">getDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                           <span class="token string">&quot;Unexpected exception parsing XML document from &quot;</span> <span class="token operator">+</span> resource<span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>registerBeanDefinitions\u65B9\u6CD5\u63A5\u7740\u8C03\u7528doRegisterBeanDefinitions</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doRegisterBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">Element</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Any nested &lt;beans&gt; elements will cause recursion in this method. In</span>
  <span class="token comment">// order to propagate and preserve &lt;beans&gt; default-* attributes correctly,</span>
  <span class="token comment">// keep track of the current (parent) delegate, which may be null. Create</span>
  <span class="token comment">// the new (child) delegate with a reference to the parent for fallback purposes,</span>
  <span class="token comment">// then ultimately reset this.delegate back to its original (parent) reference.</span>
  <span class="token comment">// this behavior emulates a stack of delegates without actually necessitating one.</span>
  <span class="token class-name">BeanDefinitionParserDelegate</span> parent <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>delegate<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>delegate <span class="token operator">=</span> <span class="token function">createDelegate</span><span class="token punctuation">(</span><span class="token function">getReaderContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> root<span class="token punctuation">,</span> parent<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>delegate<span class="token punctuation">.</span><span class="token function">isDefaultNamespace</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> profileSpec <span class="token operator">=</span> root<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span>PROFILE_ATTRIBUTE<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>profileSpec<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> specifiedProfiles <span class="token operator">=</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">tokenizeToStringArray</span><span class="token punctuation">(</span>
        profileSpec<span class="token punctuation">,</span> <span class="token class-name">BeanDefinitionParserDelegate</span><span class="token punctuation">.</span>MULTI_VALUE_ATTRIBUTE_DELIMITERS<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// We cannot use Profiles.of(...) since profile expressions are not supported</span>
      <span class="token comment">// in XML config. See SPR-12458 for details.</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">getReaderContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">acceptsProfiles</span><span class="token punctuation">(</span>specifiedProfiles<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Skipped XML bean definition file due to specified profiles [&quot;</span> <span class="token operator">+</span> profileSpec <span class="token operator">+</span>
                       <span class="token string">&quot;] not matching: &quot;</span> <span class="token operator">+</span> <span class="token function">getReaderContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token function">preProcessXml</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u4E24\u4E2A\u7A7A\u65B9\u6CD5\uFF0C\u7559\u7ED9\u9700\u8981\u7684\u4EBA\u5B9E\u73B0\u4F7F\u7528</span>
  <span class="token function">parseBeanDefinitions</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>delegate<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u771F\u6B63\u89E3\u6790 bean \u5B9A\u4E49\uFF0C\u901A\u8FC7 Document \u5BF9\u8C61</span>
  <span class="token function">postProcessXml</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u4E24\u4E2A\u7A7A\u65B9\u6CD5\uFF0C\u7559\u7ED9\u9700\u8981\u7684\u4EBA\u5B9E\u73B0\u4F7F\u7528</span>

  <span class="token keyword">this</span><span class="token punctuation">.</span>delegate <span class="token operator">=</span> parent<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">parseBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">Element</span> root<span class="token punctuation">,</span> <span class="token class-name">BeanDefinitionParserDelegate</span> delegate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>delegate<span class="token punctuation">.</span><span class="token function">isDefaultNamespace</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">NodeList</span> nl <span class="token operator">=</span> root<span class="token punctuation">.</span><span class="token function">getChildNodes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nl<span class="token punctuation">.</span><span class="token function">getLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">Node</span> node <span class="token operator">=</span> nl<span class="token punctuation">.</span><span class="token function">item</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token keyword">instanceof</span> <span class="token class-name">Element</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Element</span> ele <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Element</span><span class="token punctuation">)</span> node<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>delegate<span class="token punctuation">.</span><span class="token function">isDefaultNamespace</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// &lt;xml xxxx&gt;\u4E00\u7C7B\u7684\u9ED8\u8BA4\u8282\u70B9</span>
          <span class="token function">parseDefaultElement</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> delegate<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u662Fspring\u5B9A\u4E49\u7684\u8282\u70B9\uFF0C\u6BD4\u5982&lt;beans&gt;\u3001&lt;bean&gt;\u7B49</span>
          delegate<span class="token punctuation">.</span><span class="token function">parseCustomElement</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">else</span> <span class="token punctuation">{</span>
    delegate<span class="token punctuation">.</span><span class="token function">parseCustomElement</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u662F\u6211\u4EEC\u81EA\u5B9A\u4E49\u7684\u8282\u70B9\uFF0C\u5C31\u4F1A\u63A5\u7740\u8C03\u7528delegate.parseCustomElement(ele);</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">BeanDefinition</span> <span class="token function">parseCustomElement</span><span class="token punctuation">(</span><span class="token class-name">Element</span> ele<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">BeanDefinition</span> containingBd<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">String</span> namespaceUri <span class="token operator">=</span> <span class="token function">getNamespaceURI</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>namespaceUri <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u6839\u636E\u547D\u540D\u7A7A\u95F4\u6620\u5C04\u5230\u5BF9\u5E94\u7684\u90A3\u4E2A handler \u5904\u7406\u7C7B META-INF\\spring.handlers</span>
  <span class="token class-name">NamespaceHandler</span> handler <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>readerContext<span class="token punctuation">.</span><span class="token function">getNamespaceHandlerResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>namespaceUri<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>handler <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Unable to locate Spring NamespaceHandler for XML schema namespace [&quot;</span> <span class="token operator">+</span> namespaceUri <span class="token operator">+</span> <span class="token string">&quot;]&quot;</span><span class="token punctuation">,</span> ele<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> handler<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ParserContext</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>readerContext<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">,</span> containingBd<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>handler.parse\u4F1A\u8C03\u7528\u5BF9\u5E94\u8282\u70B9\u7684\u89E3\u6790\u7C7Bparse\u65B9\u6CD5\uFF0C\u6BD4\u5982\u5982\u679C\u547D\u540D\u7A7A\u95F4\u662Fcontext\uFF0C\u5C31\u4F1A\u627E\u5230spring-context\u6A21\u5757\u4E2D\u7684spring.handlers\u7684\u914D\u7F6E</p><p><img src="`+R+'" alt="image-20220217204122861"></p><p>\u6211\u4EEC\u70B9\u8FDBcontext\u547D\u540D\u7A7A\u95F4\u7684Handler\uFF1A<code>org.springframework.context.config.ContextNamespaceHandler</code></p><p>\u53EF\u4EE5\u770B\u5230\u4E0D\u540C\u7684\u8282\u70B9\u540D\u79F0\u7684\u89E3\u6790</p><p><img src="'+O+`" alt="image-20220217204257387"></p><p>\u8FDB\u5165component-scan\u7684\u89E3\u6790\u7C7BComponentScanBeanDefinitionParser</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">BeanDefinition</span> <span class="token function">parse</span><span class="token punctuation">(</span><span class="token class-name">Element</span> element<span class="token punctuation">,</span> <span class="token class-name">ParserContext</span> parserContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">String</span> basePackage <span class="token operator">=</span> element<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span>BASE_PACKAGE_ATTRIBUTE<span class="token punctuation">)</span><span class="token punctuation">;</span>
  basePackage <span class="token operator">=</span> parserContext<span class="token punctuation">.</span><span class="token function">getReaderContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">resolvePlaceholders</span><span class="token punctuation">(</span>basePackage<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> basePackages <span class="token operator">=</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">tokenizeToStringArray</span><span class="token punctuation">(</span>basePackage<span class="token punctuation">,</span>
                                                            <span class="token class-name">ConfigurableApplicationContext</span><span class="token punctuation">.</span>CONFIG_LOCATION_DELIMITERS<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Actually scan for bean definitions and register them.</span>
  <span class="token comment">// BeanDefinitionSacanner</span>
  <span class="token class-name">ClassPathBeanDefinitionScanner</span> scanner <span class="token operator">=</span> <span class="token function">configureScanner</span><span class="token punctuation">(</span>parserContext<span class="token punctuation">,</span> element<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BeanDefinitionHolder</span><span class="token punctuation">&gt;</span></span> beanDefinitions <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">doScan</span><span class="token punctuation">(</span>basePackages<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">registerComponents</span><span class="token punctuation">(</span>parserContext<span class="token punctuation">.</span><span class="token function">getReaderContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> beanDefinitions<span class="token punctuation">,</span> element<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u540E\u8C03\u7528doScan</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BeanDefinitionHolder</span><span class="token punctuation">&gt;</span></span> <span class="token function">doScan</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> basePackages<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notEmpty</span><span class="token punctuation">(</span>basePackages<span class="token punctuation">,</span> <span class="token string">&quot;At least one base package must be specified&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u521B\u5EFA bean \u5B9A\u4E49\u7684 holder \u5BF9\u8C61\u7528\u4E8E\u4FDD\u5B58\u626B\u63CF\u540E\u751F\u6210\u7684 bean \u5B9A\u4E49\u5BF9\u8C61</span>
  <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BeanDefinitionHolder</span><span class="token punctuation">&gt;</span></span> beanDefinitions <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u5FAA\u73AF\u6211\u4EEC\u7684\u5305\u8DEF\u5F84\u96C6\u5408</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> basePackage <span class="token operator">:</span> basePackages<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u627E\u5230\u5019\u9009\u7684 Components\uFF0C\u4E4B\u524D\u8BF4\u7684\u63A5\u53E3\u4E0D\u80FD\u88AB\u626B\u63CF\u8FDB\u6765\uFF0C\u5C31\u662F\u56E0\u4E3A\u8FD9\u91CC\u6392\u9664\u6389\u63A5\u53E3</span>
    <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BeanDefinition</span><span class="token punctuation">&gt;</span></span> candidates <span class="token operator">=</span> <span class="token function">findCandidateComponents</span><span class="token punctuation">(</span>basePackage<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">BeanDefinition</span> candidate <span class="token operator">:</span> candidates<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">ScopeMetadata</span> scopeMetadata <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>scopeMetadataResolver<span class="token punctuation">.</span><span class="token function">resolveScopeMetadata</span><span class="token punctuation">(</span>candidate<span class="token punctuation">)</span><span class="token punctuation">;</span>
      candidate<span class="token punctuation">.</span><span class="token function">setScope</span><span class="token punctuation">(</span>scopeMetadata<span class="token punctuation">.</span><span class="token function">getScopeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u8BBE\u7F6E\u6211\u4EEC\u7684 beanName</span>
      <span class="token class-name">String</span> beanName <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>beanNameGenerator<span class="token punctuation">.</span><span class="token function">generateBeanName</span><span class="token punctuation">(</span>candidate<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>registry<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u5904\u7406 Autowired \u76F8\u5173\u7684</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>candidate <span class="token keyword">instanceof</span> <span class="token class-name">AbstractBeanDefinition</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">postProcessBeanDefinition</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">AbstractBeanDefinition</span><span class="token punctuation">)</span> candidate<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u5904\u7406 jsr250 \u76F8\u5173\u7684\u7EC4\u4EF6</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>candidate <span class="token keyword">instanceof</span> <span class="token class-name">AnnotatedBeanDefinition</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">AnnotationConfigUtils</span><span class="token punctuation">.</span><span class="token function">processCommonDefinitionAnnotations</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">AnnotatedBeanDefinition</span><span class="token punctuation">)</span> candidate<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u628A\u6211\u4EEC\u89E3\u6790\u51FA\u6765\u7684\u7EC4\u4EF6 bean \u5B9A\u4E49\u6CE8\u518C\u5230\u6211\u4EEC\u7684IOC\u5BB9\u5668\u4E2D</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">checkCandidate</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> candidate<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">BeanDefinitionHolder</span> definitionHolder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BeanDefinitionHolder</span><span class="token punctuation">(</span>candidate<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        definitionHolder <span class="token operator">=</span>
          <span class="token class-name">AnnotationConfigUtils</span><span class="token punctuation">.</span><span class="token function">applyScopedProxyMode</span><span class="token punctuation">(</span>scopeMetadata<span class="token punctuation">,</span> definitionHolder<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>registry<span class="token punctuation">)</span><span class="token punctuation">;</span>
        beanDefinitions<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>definitionHolder<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">registerBeanDefinition</span><span class="token punctuation">(</span>definitionHolder<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>registry<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> beanDefinitions<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><blockquote><p><strong>\u914D\u7F6E\u7C7B\u65B9\u5F0F\u7684\u8BFB\u53D6</strong></p><ol><li><p>AnnotationConfigApplicationContext\u6784\u9020\u51FD\u6570\u4E2D\u521B\u5EFA\u4E86AnnotatedBeanDefinitionReader</p></li><li><p>\u5728AnnotatedBeanDefinitionReader\u6784\u9020\u51FD\u6570\u4E2D\u6CE8\u518C ConfigurationClassPostProcessor\u540E\u7F6E\u5904\u7406\u5668\uFF0CConfigurationClassPostProcessor\u5C31\u662F\u7528\u6765\u89E3\u6790\u914D\u7F6E\u7C7B\u7684\uFF0C\u5F53\u7136\u5728AnnotatedBeanDefinitionReader\u6784\u9020\u51FD\u6570\u8FD8\u6CE8\u518C\u4E86\u5176\u4ED6\u7684\u540E\u7F6E\u5904\u7406\u5668\u548C\u5176\u4ED6\u7684</p></li></ol><p><img src="`+I+`" alt="image-20220217211219221"></p><ol start="3"><li>\u7136\u540E\u5728refresh\u65B9\u6CD5\u4E2DinvokeBeanFactoryPostProcessors(beanFactory);\u65B9\u6CD5\u8C03\u7528\u540E\u7F6E\u5904\u7406\u5668</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">invokeBeanFactoryPostProcessors</span><span class="token punctuation">(</span><span class="token class-name">ConfigurableListableBeanFactory</span> beanFactory<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u83B7\u53D6\u4E24\u5904\u5B58\u50A8BeanFactoryPostProcessor\u7684\u5BF9\u8C61\uFF0C\u4F20\u5165\u4F9B\u63A5\u4E0B\u6765\u7684\u8C03\u7528</span>
  <span class="token comment">// \u53C2\u65701. \u5F53\u524DBean\u5DE5\u5382 \u53C2\u65702. \u6211\u4EEC\u81EA\u5DF1\u8C03\u7528addBeanFactoryPostProcessor\u7684\u81EA\u5B9A\u4E49BeanFactoryPostProcessor</span>
  <span class="token class-name">PostProcessorRegistrationDelegate</span><span class="token punctuation">.</span><span class="token function">invokeBeanFactoryPostProcessors</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">,</span> <span class="token function">getBeanFactoryPostProcessors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Detect a LoadTimeWeaver and prepare for weaving, if found in the meantime</span>
  <span class="token comment">// (e.g. through an @Bean method registered by ConfigurationClassPostProcessor)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>beanFactory<span class="token punctuation">.</span><span class="token function">getTempClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> beanFactory<span class="token punctuation">.</span><span class="token function">containsBean</span><span class="token punctuation">(</span>LOAD_TIME_WEAVER_BEAN_NAME<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    beanFactory<span class="token punctuation">.</span><span class="token function">addBeanPostProcessor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LoadTimeWeaverAwareProcessor</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    beanFactory<span class="token punctuation">.</span><span class="token function">setTempClassLoader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ContextTypeMatchClassLoader</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">.</span><span class="token function">getBeanClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors\u8C03\u7528</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">invokeBeanFactoryPostProcessors</span><span class="token punctuation">(</span>
			<span class="token class-name">ConfigurableListableBeanFactory</span> beanFactory<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BeanFactoryPostProcessor</span><span class="token punctuation">&gt;</span></span> beanFactoryPostProcessors<span class="token punctuation">)</span> <span class="token punctuation">{</span>

  <span class="token comment">//\u8C03\u7528BeanDefinitionRegistryPostProcessor\u7684\u540E\u7F6E\u5904\u7406\u5668 Begin</span>
  <span class="token comment">// \u5B9A\u4E49\u5DF2\u5904\u7406\u7684\u540E\u7F6E\u5904\u7406\u5668</span>
  <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> processedBeans <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">//\u5224\u65AD\u6211\u4EEC\u7684beanFactory\u5B9E\u73B0\u4E86BeanDefinitionRegistry(\u5B9E\u73B0\u4E86\u8BE5\u7ED3\u6784\u5C31\u6709\u6CE8\u518C\u548C\u83B7\u53D6Bean\u5B9A\u4E49\u7684\u80FD\u529B\uFF09</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>beanFactory <span class="token keyword">instanceof</span> <span class="token class-name">BeanDefinitionRegistry</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u5F3A\u884C\u628A\u6211\u4EEC\u7684bean\u5DE5\u5382\u8F6C\u4E3ABeanDefinitionRegistry\uFF0C\u56E0\u4E3A\u5F85\u4F1A\u9700\u8981\u6CE8\u518CBean\u5B9A\u4E49</span>
    <span class="token class-name">BeanDefinitionRegistry</span> registry <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">BeanDefinitionRegistry</span><span class="token punctuation">)</span> beanFactory<span class="token punctuation">;</span>
    <span class="token comment">//\u4FDD\u5B58BeanFactoryPostProcessor\u7C7B\u578B\u7684\u540E\u7F6E   BeanFactoryPostProcessor \u63D0\u4F9B\u4FEE\u6539</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BeanFactoryPostProcessor</span><span class="token punctuation">&gt;</span></span> regularPostProcessors <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u4FDD\u5B58BeanDefinitionRegistryPostProcessor\u7C7B\u578B\u7684\u540E\u7F6E\u5904\u7406\u5668 BeanDefinitionRegistryPostProcessor \u63D0\u4F9B\u6CE8\u518C</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BeanDefinitionRegistryPostProcessor</span><span class="token punctuation">&gt;</span></span> registryProcessors <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//\u5FAA\u73AF\u6211\u4EEC\u4F20\u9012\u8FDB\u6765\u7684beanFactoryPostProcessors</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">BeanFactoryPostProcessor</span> postProcessor <span class="token operator">:</span> beanFactoryPostProcessors<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//\u5224\u65AD\u6211\u4EEC\u7684\u540E\u7F6E\u5904\u7406\u5668\u662F\u4E0D\u662FBeanDefinitionRegistryPostProcessor</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>postProcessor <span class="token keyword">instanceof</span> <span class="token class-name">BeanDefinitionRegistryPostProcessor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u8FDB\u884C\u5F3A\u5236\u8F6C\u5316</span>
        <span class="token class-name">BeanDefinitionRegistryPostProcessor</span> registryProcessor <span class="token operator">=</span>
          <span class="token punctuation">(</span><span class="token class-name">BeanDefinitionRegistryPostProcessor</span><span class="token punctuation">)</span> postProcessor<span class="token punctuation">;</span>
        <span class="token comment">//\u8C03\u7528\u4ED6\u4F5C\u4E3ABeanDefinitionRegistryPostProcessor\u7684\u5904\u7406\u5668\u7684\u540E\u7F6E\u65B9\u6CD5</span>
        registryProcessor<span class="token punctuation">.</span><span class="token function">postProcessBeanDefinitionRegistry</span><span class="token punctuation">(</span>registry<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u6DFB\u52A0\u5230\u6211\u4EEC\u7528\u4E8E\u4FDD\u5B58\u7684BeanDefinitionRegistryPostProcessor\u7684\u96C6\u5408\u4E2D</span>
        registryProcessors<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>registryProcessor<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token comment">//\u82E5\u6CA1\u6709\u5B9E\u73B0BeanDefinitionRegistryPostProcessor \u63A5\u53E3\uFF0C\u90A3\u4E48\u4ED6\u5C31\u662FBeanFactoryPostProcessor</span>
        <span class="token comment">//\u628A\u5F53\u524D\u7684\u540E\u7F6E\u5904\u7406\u5668\u52A0\u5165\u5230regularPostProcessors\u4E2D</span>
        regularPostProcessors<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>postProcessor<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//\u5B9A\u4E49\u4E00\u4E2A\u96C6\u5408\u7528\u6237\u4FDD\u5B58\u5F53\u524D\u51C6\u5907\u521B\u5EFA\u7684BeanDefinitionRegistryPostProcessor</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BeanDefinitionRegistryPostProcessor</span><span class="token punctuation">&gt;</span></span> currentRegistryProcessors <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//\u7B2C\u4E00\u6B65:\u53BB\u5BB9\u5668\u4E2D\u83B7\u53D6BeanDefinitionRegistryPostProcessor\u7684bean\u7684\u5904\u7406\u5668\u540D\u79F0</span>
    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> postProcessorNames <span class="token operator">=</span>
      beanFactory<span class="token punctuation">.</span><span class="token function">getBeanNamesForType</span><span class="token punctuation">(</span><span class="token class-name">BeanDefinitionRegistryPostProcessor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u5FAA\u73AF\u7B5B\u9009\u51FA\u6765\u7684\u5339\u914DBeanDefinitionRegistryPostProcessor\u7684\u7C7B\u578B\u540D\u79F0</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> ppName <span class="token operator">:</span> postProcessorNames<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//\u5224\u65AD\u662F\u5426\u5B9E\u73B0\u4E86PriorityOrdered\u63A5\u53E3\u7684</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>beanFactory<span class="token punctuation">.</span><span class="token function">isTypeMatch</span><span class="token punctuation">(</span>ppName<span class="token punctuation">,</span> <span class="token class-name">PriorityOrdered</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u663E\u793A\u7684\u8C03\u7528getBean()\u7684\u65B9\u5F0F\u83B7\u53D6\u51FA\u8BE5\u5BF9\u8C61\u7136\u540E\u52A0\u5165\u5230currentRegistryProcessors\u96C6\u5408\u4E2D\u53BB</span>
        currentRegistryProcessors<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>ppName<span class="token punctuation">,</span> <span class="token class-name">BeanDefinitionRegistryPostProcessor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u540C\u65F6\u4E5F\u52A0\u5165\u5230processedBeans\u96C6\u5408\u4E2D\u53BB</span>
        processedBeans<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>ppName<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//\u5BF9currentRegistryProcessors\u96C6\u5408\u4E2DBeanDefinitionRegistryPostProcessor\u8FDB\u884C\u6392\u5E8F</span>
    <span class="token function">sortPostProcessors</span><span class="token punctuation">(</span>currentRegistryProcessors<span class="token punctuation">,</span> beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u628A\u5F53\u524D\u7684\u52A0\u5165\u5230\u603B\u7684\u91CC\u9762\u53BB</span>
    registryProcessors<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>currentRegistryProcessors<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
			 * \u5728\u8FD9\u91CC\u5178\u578B\u7684BeanDefinitionRegistryPostProcessor\u5C31\u662FConfigurationClassPostProcessor
			 * \u7528\u4E8E\u8FDB\u884Cbean\u5B9A\u4E49\u7684\u52A0\u8F7D \u6BD4\u5982\u6211\u4EEC\u7684\u5305\u626B\u63CF\uFF0C@import  \u7B49\u7B49\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002
			 */</span>
    <span class="token function">invokeBeanDefinitionRegistryPostProcessors</span><span class="token punctuation">(</span>currentRegistryProcessors<span class="token punctuation">,</span> registry<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u8C03\u7528\u5B8C\u4E4B\u540E\uFF0C\u9A6C\u4E0Aclea\u6389</span>
    currentRegistryProcessors<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//---------------------------------------\u8C03\u7528\u5185\u7F6E\u5B9E\u73B0PriorityOrdered\u63A5\u53E3ConfigurationClassPostProcessor\u5B8C\u6BD5--\u4F18\u5148\u7EA7No1-End----------------------------------------------------------------------------------------------------------------------------</span>
    <span class="token comment">//\u53BB\u5BB9\u5668\u4E2D\u83B7\u53D6BeanDefinitionRegistryPostProcessor\u7684bean\u7684\u5904\u7406\u5668\u540D\u79F0\uFF08\u5185\u7F6E\u7684\u548C\u4E0A\u9762\u6CE8\u518C\u7684\uFF09</span>
    postProcessorNames <span class="token operator">=</span> beanFactory<span class="token punctuation">.</span><span class="token function">getBeanNamesForType</span><span class="token punctuation">(</span><span class="token class-name">BeanDefinitionRegistryPostProcessor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u5FAA\u73AF\u4E0A\u4E00\u6B65\u83B7\u53D6\u7684BeanDefinitionRegistryPostProcessor\u7684\u7C7B\u578B\u540D\u79F0</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> ppName <span class="token operator">:</span> postProcessorNames<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//\u8868\u793A\u6CA1\u6709\u88AB\u5904\u7406\u8FC7,\u4E14\u5B9E\u73B0\u4E86Ordered\u63A5\u53E3\u7684</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>processedBeans<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>ppName<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> beanFactory<span class="token punctuation">.</span><span class="token function">isTypeMatch</span><span class="token punctuation">(</span>ppName<span class="token punctuation">,</span> <span class="token class-name">Ordered</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u663E\u793A\u7684\u8C03\u7528getBean()\u7684\u65B9\u5F0F\u83B7\u53D6\u51FA\u8BE5\u5BF9\u8C61\u7136\u540E\u52A0\u5165\u5230currentRegistryProcessors\u96C6\u5408\u4E2D\u53BB</span>
        currentRegistryProcessors<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>ppName<span class="token punctuation">,</span> <span class="token class-name">BeanDefinitionRegistryPostProcessor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u540C\u65F6\u4E5F\u52A0\u5165\u5230processedBeans\u96C6\u5408\u4E2D\u53BB</span>
        processedBeans<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>ppName<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//\u5BF9currentRegistryProcessors\u96C6\u5408\u4E2DBeanDefinitionRegistryPostProcessor\u8FDB\u884C\u6392\u5E8F</span>
    <span class="token function">sortPostProcessors</span><span class="token punctuation">(</span>currentRegistryProcessors<span class="token punctuation">,</span> beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u628A\u4ED6\u52A0\u5165\u5230\u7528\u4E8E\u4FDD\u5B58\u5230registryProcessors\u4E2D</span>
    registryProcessors<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>currentRegistryProcessors<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u8C03\u7528\u4ED6\u7684\u540E\u7F6E\u5904\u7406\u65B9\u6CD5</span>
    <span class="token function">invokeBeanDefinitionRegistryPostProcessors</span><span class="token punctuation">(</span>currentRegistryProcessors<span class="token punctuation">,</span> registry<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u8C03\u7528\u5B8C\u4E4B\u540E\uFF0C\u9A6C\u4E0Aclea\u6389</span>
    currentRegistryProcessors<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//-----------------------------------------\u8C03\u7528\u81EA\u5B9A\u4E49Order\u63A5\u53E3BeanDefinitionRegistryPostProcessor\u5B8C\u6BD5-\u4F18\u5148\u7EA7No2-End-----------------------------------------------------------------------------------------------------------------------------</span>
    <span class="token comment">//\u8C03\u7528\u6CA1\u6709\u5B9E\u73B0\u4EFB\u4F55\u4F18\u5148\u7EA7\u63A5\u53E3\u7684BeanDefinitionRegistryPostProcessor</span>
    <span class="token comment">//\u5B9A\u4E49\u4E00\u4E2A\u91CD\u590D\u5904\u7406\u7684\u5F00\u5173\u53D8\u91CF \u9ED8\u8BA4\u503C\u4E3Atrue</span>
    <span class="token keyword">boolean</span> reiterate <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token comment">//\u7B2C\u4E00\u6B21\u5C31\u53EF\u4EE5\u8FDB\u6765</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>reiterate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//\u8FDB\u5165\u5FAA\u73AF\u9A6C\u4E0A\u628A\u5F00\u5173\u53D8\u91CF\u7ED9\u6539\u4E3Afalse</span>
      reiterate <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token comment">//\u53BB\u5BB9\u5668\u4E2D\u83B7\u53D6BeanDefinitionRegistryPostProcessor\u7684bean\u7684\u5904\u7406\u5668\u540D\u79F0</span>
      postProcessorNames <span class="token operator">=</span> beanFactory<span class="token punctuation">.</span><span class="token function">getBeanNamesForType</span><span class="token punctuation">(</span><span class="token class-name">BeanDefinitionRegistryPostProcessor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">//\u5FAA\u73AF\u4E0A\u4E00\u6B65\u83B7\u53D6\u7684BeanDefinitionRegistryPostProcessor\u7684\u7C7B\u578B\u540D\u79F0</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> ppName <span class="token operator">:</span> postProcessorNames<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u6CA1\u6709\u88AB\u5904\u7406\u8FC7\u7684</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>processedBeans<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>ppName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">//\u663E\u793A\u7684\u8C03\u7528getBean()\u7684\u65B9\u5F0F\u83B7\u53D6\u51FA\u8BE5\u5BF9\u8C61\u7136\u540E\u52A0\u5165\u5230currentRegistryProcessors\u96C6\u5408\u4E2D\u53BB</span>
          currentRegistryProcessors<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>ppName<span class="token punctuation">,</span> <span class="token class-name">BeanDefinitionRegistryPostProcessor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token comment">//\u540C\u65F6\u4E5F\u52A0\u5165\u5230processedBeans\u96C6\u5408\u4E2D\u53BB</span>
          processedBeans<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>ppName<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token comment">//\u518D\u6B21\u8BBE\u7F6E\u4E3Atrue</span>
          reiterate <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token comment">//\u5BF9currentRegistryProcessors\u96C6\u5408\u4E2DBeanDefinitionRegistryPostProcessor\u8FDB\u884C\u6392\u5E8F</span>
      <span class="token function">sortPostProcessors</span><span class="token punctuation">(</span>currentRegistryProcessors<span class="token punctuation">,</span> beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">//\u628A\u4ED6\u52A0\u5165\u5230\u7528\u4E8E\u4FDD\u5B58\u5230registryProcessors\u4E2D</span>
      registryProcessors<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>currentRegistryProcessors<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">//\u8C03\u7528\u4ED6\u7684\u540E\u7F6E\u5904\u7406\u65B9\u6CD5</span>
      <span class="token function">invokeBeanDefinitionRegistryPostProcessors</span><span class="token punctuation">(</span>currentRegistryProcessors<span class="token punctuation">,</span> registry<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">//\u8FDB\u884Cclear</span>
      currentRegistryProcessors<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//-----------------------------------------\u8C03\u7528\u6CA1\u6709\u5B9E\u73B0\u4EFB\u4F55\u4F18\u5148\u7EA7\u63A5\u53E3\u81EA\u5B9A\u4E49BeanDefinitionRegistryPostProcessor\u5B8C\u6BD5--End-----------------------------------------------------------------------------------------------------------------------------</span>
    <span class="token comment">//\u8C03\u7528 BeanDefinitionRegistryPostProcessor.postProcessBeanFactory\u65B9\u6CD5</span>
    <span class="token function">invokeBeanFactoryPostProcessors</span><span class="token punctuation">(</span>registryProcessors<span class="token punctuation">,</span> beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u8C03\u7528BeanFactoryPostProcessor \u81EA\u8BBE\u7684\uFF08\u6CA1\u6709\uFF09</span>
    <span class="token function">invokeBeanFactoryPostProcessors</span><span class="token punctuation">(</span>regularPostProcessors<span class="token punctuation">,</span> beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u82E5\u5F53\u524D\u7684beanFactory\u6CA1\u6709\u5B9E\u73B0\u4E86BeanDefinitionRegistry \u8BF4\u660E\u6CA1\u6709\u6CE8\u518CBean\u5B9A\u4E49\u7684\u80FD\u529B</span>
    <span class="token comment">// \u90A3\u4E48\u5C31\u76F4\u63A5\u8C03\u7528BeanDefinitionRegistryPostProcessor.postProcessBeanFactory\u65B9\u6CD5</span>
    <span class="token function">invokeBeanFactoryPostProcessors</span><span class="token punctuation">(</span>beanFactoryPostProcessors<span class="token punctuation">,</span> beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">//-----------------------------------------\u6240\u6709BeanDefinitionRegistryPostProcessor\u8C03\u7528\u5B8C\u6BD5--End-----------------------------------------------------------------------------------------------------------------------------</span>


  <span class="token comment">//-----------------------------------------\u5904\u7406BeanFactoryPostProcessor --Begin-----------------------------------------------------------------------------------------------------------------------------</span>

  <span class="token comment">//\u83B7\u53D6\u5BB9\u5668\u4E2D\u6240\u6709\u7684 BeanFactoryPostProcessor</span>
  <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> postProcessorNames <span class="token operator">=</span>
    beanFactory<span class="token punctuation">.</span><span class="token function">getBeanNamesForType</span><span class="token punctuation">(</span><span class="token class-name">BeanFactoryPostProcessor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">//\u4FDD\u5B58BeanFactoryPostProcessor\u7C7B\u578B\u5B9E\u73B0\u4E86priorityOrdered</span>
  <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BeanFactoryPostProcessor</span><span class="token punctuation">&gt;</span></span> priorityOrderedPostProcessors <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//\u4FDD\u5B58BeanFactoryPostProcessor\u7C7B\u578B\u5B9E\u73B0\u4E86Ordered\u63A5\u53E3\u7684</span>
  <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> orderedPostProcessorNames <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//\u4FDD\u5B58BeanFactoryPostProcessor\u6CA1\u6709\u5B9E\u73B0\u4EFB\u4F55\u4F18\u5148\u7EA7\u63A5\u53E3\u7684</span>
  <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> nonOrderedPostProcessorNames <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> ppName <span class="token operator">:</span> postProcessorNames<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//processedBeans\u5305\u542B\u7684\u8BDD\uFF0C\u8868\u793A\u5728\u4E0A\u9762\u5904\u7406BeanDefinitionRegistryPostProcessor\u7684\u65F6\u5019\u5904\u7406\u8FC7\u4E86</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>processedBeans<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>ppName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// skip - already processed in first phase above</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//\u5224\u65AD\u662F\u5426\u5B9E\u73B0\u4E86PriorityOrdered \u4F18\u5148\u7EA7\u6700\u9AD8</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>beanFactory<span class="token punctuation">.</span><span class="token function">isTypeMatch</span><span class="token punctuation">(</span>ppName<span class="token punctuation">,</span> <span class="token class-name">PriorityOrdered</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      priorityOrderedPostProcessors<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>ppName<span class="token punctuation">,</span> <span class="token class-name">BeanFactoryPostProcessor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//\u5224\u65AD\u662F\u5426\u5B9E\u73B0\u4E86Ordered  \u4F18\u5148\u7EA7 \u5176\u6B21</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>beanFactory<span class="token punctuation">.</span><span class="token function">isTypeMatch</span><span class="token punctuation">(</span>ppName<span class="token punctuation">,</span> <span class="token class-name">Ordered</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      orderedPostProcessorNames<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>ppName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//\u6CA1\u6709\u5B9E\u73B0\u4EFB\u4F55\u7684\u4F18\u5148\u7EA7\u63A5\u53E3\u7684  \u6700\u540E\u8C03\u7528</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
      nonOrderedPostProcessorNames<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>ppName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">//  \u6392\u5E8F</span>
  <span class="token function">sortPostProcessors</span><span class="token punctuation">(</span>priorityOrderedPostProcessors<span class="token punctuation">,</span> beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u5148\u8C03\u7528BeanFactoryPostProcessor\u5B9E\u73B0\u4E86 PriorityOrdered\u63A5\u53E3\u7684</span>
  <span class="token function">invokeBeanFactoryPostProcessors</span><span class="token punctuation">(</span>priorityOrderedPostProcessors<span class="token punctuation">,</span> beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">//\u518D\u8C03\u7528BeanFactoryPostProcessor\u5B9E\u73B0\u4E86 Ordered.</span>
  <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BeanFactoryPostProcessor</span><span class="token punctuation">&gt;</span></span> orderedPostProcessors <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> postProcessorName <span class="token operator">:</span> orderedPostProcessorNames<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    orderedPostProcessors<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>postProcessorName<span class="token punctuation">,</span> <span class="token class-name">BeanFactoryPostProcessor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">sortPostProcessors</span><span class="token punctuation">(</span>orderedPostProcessors<span class="token punctuation">,</span> beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">invokeBeanFactoryPostProcessors</span><span class="token punctuation">(</span>orderedPostProcessors<span class="token punctuation">,</span> beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">//\u8C03\u7528\u6CA1\u6709\u5B9E\u73B0\u4EFB\u4F55\u65B9\u6CD5\u63A5\u53E3\u7684</span>
  <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BeanFactoryPostProcessor</span><span class="token punctuation">&gt;</span></span> nonOrderedPostProcessors <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> postProcessorName <span class="token operator">:</span> nonOrderedPostProcessorNames<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    nonOrderedPostProcessors<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>postProcessorName<span class="token punctuation">,</span> <span class="token class-name">BeanFactoryPostProcessor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">invokeBeanFactoryPostProcessors</span><span class="token punctuation">(</span>nonOrderedPostProcessors<span class="token punctuation">,</span> beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//-----------------------------------------\u5904\u7406BeanFactoryPostProcessor --End-----------------------------------------------------------------------------------------------------------------------------</span>

  <span class="token comment">// Clear cached merged bean definitions since the post-processors might have</span>
  <span class="token comment">// modified the original metadata, e.g. replacing placeholders in values...</span>
  beanFactory<span class="token punctuation">.</span><span class="token function">clearMetadataCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">//------------------------- BeanFactoryPostProcessor\u548CBeanDefinitionRegistryPostProcessor\u8C03\u7528\u5B8C\u6BD5 --End-----------------------------------------------------------------------------------------------------------------------------</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+M+`" alt="image-20220217221527733"></p><p>\u8C03\u7528ConfigurationClassPostProcessor\u540E\u7F6E\u5904\u7406\u5668\u6765\u89E3\u6790\u914D\u7F6E\uFF0C\u5176\u4E2D\u4E24\u4E2A\u6BD4\u8F83\u91CD\u8981\u7684\u65B9\u6CD5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">processConfigBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">BeanDefinitionRegistry</span> registry<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BeanDefinitionHolder</span><span class="token punctuation">&gt;</span></span> configCandidates <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//\u83B7\u53D6IOC \u5BB9\u5668\u4E2D\u76EE\u524D\u6240\u6709bean\u5B9A\u4E49\u7684\u540D\u79F0</span>
  <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> candidateNames <span class="token operator">=</span> registry<span class="token punctuation">.</span><span class="token function">getBeanDefinitionNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">//\u5FAA\u73AF\u6211\u4EEC\u7684\u4E0A\u4E00\u6B65\u83B7\u53D6\u7684\u6240\u6709\u7684bean\u5B9A\u4E49\u4FE1\u606F</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> beanName <span class="token operator">:</span> candidateNames<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u901A\u8FC7bean\u7684\u540D\u79F0\u6765\u83B7\u53D6\u6211\u4EEC\u7684bean\u5B9A\u4E49\u5BF9\u8C61</span>
    <span class="token class-name">BeanDefinition</span> beanDef <span class="token operator">=</span> registry<span class="token punctuation">.</span><span class="token function">getBeanDefinition</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u5224\u65AD\u662F\u5426\u6709\u6CA1\u6709\u89E3\u6790\u8FC7</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ConfigurationClassUtils</span><span class="token punctuation">.</span><span class="token function">isFullConfigurationClass</span><span class="token punctuation">(</span>beanDef<span class="token punctuation">)</span> <span class="token operator">||</span>
        <span class="token class-name">ConfigurationClassUtils</span><span class="token punctuation">.</span><span class="token function">isLiteConfigurationClass</span><span class="token punctuation">(</span>beanDef<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Bean definition has already been processed as a configuration class: &quot;</span> <span class="token operator">+</span> beanDef<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//\u8FDB\u884C\u6B63\u5728\u7684\u89E3\u6790\u5224\u65AD\u662F\u4E0D\u662F\u5B8C\u5168\u7684\u914D\u7F6E\u7C7B \u8FD8\u662F\u4E00\u4E2A\u975E\u6B63\u5F0F\u7684\u914D\u7F6E\u7C7B</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ConfigurationClassUtils</span><span class="token punctuation">.</span><span class="token function">checkConfigurationClassCandidate</span><span class="token punctuation">(</span>beanDef<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>metadataReaderFactory<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//\u6EE1\u8DB3\u6DFB\u52A0 \u5C31\u52A0\u5165\u5230\u5019\u9009\u7684\u914D\u7F6E\u7C7B\u96C6\u5408\u4E2D</span>
      configCandidates<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BeanDefinitionHolder</span><span class="token punctuation">(</span>beanDef<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u82E5\u6CA1\u6709\u627E\u5230\u914D\u7F6E\u7C7B \u76F4\u63A5\u8FD4\u56DE</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>configCandidates<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">//\u5BF9\u6211\u4EEC\u7684\u914D\u7F6E\u7C7B\u8FDB\u884COrder\u6392\u5E8F</span>
  configCandidates<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span>bd1<span class="token punctuation">,</span> bd2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> i1 <span class="token operator">=</span> <span class="token class-name">ConfigurationClassUtils</span><span class="token punctuation">.</span><span class="token function">getOrder</span><span class="token punctuation">(</span>bd1<span class="token punctuation">.</span><span class="token function">getBeanDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> i2 <span class="token operator">=</span> <span class="token class-name">ConfigurationClassUtils</span><span class="token punctuation">.</span><span class="token function">getOrder</span><span class="token punctuation">(</span>bd2<span class="token punctuation">.</span><span class="token function">getBeanDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span>i1<span class="token punctuation">,</span> i2<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u521B\u5EFA\u6211\u4EEC\u901A\u8FC7@CompentScan\u5BFC\u5165\u8FDB\u6765\u7684bean name\u7684\u751F\u6210\u5668</span>
  <span class="token comment">// \u521B\u5EFA\u6211\u4EEC\u901A\u8FC7@Import\u5BFC\u5165\u8FDB\u6765\u7684bean\u7684\u540D\u79F0</span>
  <span class="token class-name">SingletonBeanRegistry</span> sbr <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>registry <span class="token keyword">instanceof</span> <span class="token class-name">SingletonBeanRegistry</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sbr <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">SingletonBeanRegistry</span><span class="token punctuation">)</span> registry<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>localBeanNameGeneratorSet<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">BeanNameGenerator</span> generator <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">BeanNameGenerator</span><span class="token punctuation">)</span> sbr<span class="token punctuation">.</span><span class="token function">getSingleton</span><span class="token punctuation">(</span>CONFIGURATION_BEAN_NAME_GENERATOR<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>generator <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u8BBE\u7F6E@CompentScan\u5BFC\u5165\u8FDB\u6765\u7684bean\u7684\u540D\u79F0\u751F\u6210\u5668(\u9ED8\u8BA4\u7C7B\u9996\u5B57\u6BCD\u5C0F\u5199\uFF09\u4E5F\u53EF\u4EE5\u81EA\u5DF1\u5B9A\u4E49\uFF0C\u4E00\u822C\u4E0D\u4F1A</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>componentScanBeanNameGenerator <span class="token operator">=</span> generator<span class="token punctuation">;</span>
        <span class="token comment">//\u8BBE\u7F6E@Import\u5BFC\u5165\u8FDB\u6765\u7684bean\u7684\u540D\u79F0\u751F\u6210\u5668(\u9ED8\u8BA4\u7C7B\u9996\u5B57\u6BCD\u5C0F\u5199\uFF09\u4E5F\u53EF\u4EE5\u81EA\u5DF1\u5B9A\u4E49\uFF0C\u4E00\u822C\u4E0D\u4F1A</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>importBeanNameGenerator <span class="token operator">=</span> generator<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>environment <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>environment <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StandardEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">//\u521B\u5EFA\u4E00\u4E2A\u914D\u7F6E\u7C7B\u89E3\u6790\u5668\u5BF9\u8C61</span>
  <span class="token class-name">ConfigurationClassParser</span> parser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConfigurationClassParser</span><span class="token punctuation">(</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>metadataReaderFactory<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>problemReporter<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>environment<span class="token punctuation">,</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>resourceLoader<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>componentScanBeanNameGenerator<span class="token punctuation">,</span> registry<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">//\u7528\u4E8E\u4FDD\u5B58\u6211\u4EEC\u7684\u914D\u7F6E\u7C7BBeanDefinitionHolder\u653E\u5165\u4E0A\u9762\u7B5B\u9009\u51FA\u6765\u7684\u914D\u7F6E\u7C7B</span>
  <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BeanDefinitionHolder</span><span class="token punctuation">&gt;</span></span> candidates <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>configCandidates<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//\u7528\u4E8E\u4FDD\u5B58\u6211\u4EEC\u7684\u5DF2\u7ECF\u89E3\u6790\u7684\u914D\u7F6E\u7C7B\uFF0C\u957F\u5EA6\u9ED8\u8BA4\u4E3A\u89E3\u6790\u51FA\u6765\u9ED8\u8BA4\u7684\u914D\u7F6E\u7C7B\u7684\u96C6\u5408\u957F\u5EA6</span>
  <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ConfigurationClass</span><span class="token punctuation">&gt;</span></span> alreadyParsed <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>configCandidates<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//do while \u4F1A\u8FDB\u884C\u7B2C\u4E00\u6B21\u89E3\u6790</span>
  <span class="token keyword">do</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u771F\u6B63\u7684\u89E3\u6790\u6211\u4EEC\u7684\u914D\u7F6E\u7C7B</span>
    parser<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>candidates<span class="token punctuation">)</span><span class="token punctuation">;</span>
    parser<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//\u89E3\u6790\u51FA\u6765\u7684\u914D\u7F6E\u7C7B</span>
    <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ConfigurationClass</span><span class="token punctuation">&gt;</span></span> configClasses <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>parser<span class="token punctuation">.</span><span class="token function">getConfigurationClasses</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    configClasses<span class="token punctuation">.</span><span class="token function">removeAll</span><span class="token punctuation">(</span>alreadyParsed<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Read the model and create bean definitions based on its content</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reader <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConfigurationClassBeanDefinitionReader</span><span class="token punctuation">(</span>
        registry<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sourceExtractor<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>resourceLoader<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>environment<span class="token punctuation">,</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>importBeanNameGenerator<span class="token punctuation">,</span> parser<span class="token punctuation">.</span><span class="token function">getImportRegistry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u6B64\u5904\u624D\u628A@Bean\u7684\u65B9\u6CD5\u548C@Import \u6CE8\u518C\u5230BeanDefinitionMap\u4E2D</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>reader<span class="token punctuation">.</span><span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span>configClasses<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u52A0\u5165\u5230\u5DF2\u7ECF\u89E3\u6790\u7684\u96C6\u5408\u4E2D</span>
    alreadyParsed<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>configClasses<span class="token punctuation">)</span><span class="token punctuation">;</span>

    candidates<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u5224\u65AD\u6211\u4EECioc\u5BB9\u5668\u4E2D\u7684\u662F\u4E0D\u662F&gt;\u5019\u9009\u539F\u59CB\u7684bean\u5B9A\u4E49\u7684\u4E2A\u6570</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>registry<span class="token punctuation">.</span><span class="token function">getBeanDefinitionCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> candidateNames<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//\u83B7\u53D6\u6240\u6709\u7684bean\u5B9A\u4E49</span>
      <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> newCandidateNames <span class="token operator">=</span> registry<span class="token punctuation">.</span><span class="token function">getBeanDefinitionNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">//\u539F\u59CB\u7684\u8001\u7684\u5019\u9009\u7684bean\u5B9A\u4E49</span>
      <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> oldCandidateNames <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>candidateNames<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> alreadyParsedClasses <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">//\u8D4B\u503C\u5DF2\u7ECF\u89E3\u6790\u7684</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">ConfigurationClass</span> configurationClass <span class="token operator">:</span> alreadyParsed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        alreadyParsedClasses<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>configurationClass<span class="token punctuation">.</span><span class="token function">getMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClassName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> candidateName <span class="token operator">:</span> newCandidateNames<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u8868\u793A\u5F53\u524D\u5FAA\u73AF\u7684\u8FD8\u6CA1\u6709\u88AB\u89E3\u6790\u8FC7</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>oldCandidateNames<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>candidateName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token class-name">BeanDefinition</span> bd <span class="token operator">=</span> registry<span class="token punctuation">.</span><span class="token function">getBeanDefinition</span><span class="token punctuation">(</span>candidateName<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token comment">//\u5224\u65AD\u6709\u6CA1\u6709\u88AB\u89E3\u6790\u8FC7</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ConfigurationClassUtils</span><span class="token punctuation">.</span><span class="token function">checkConfigurationClassCandidate</span><span class="token punctuation">(</span>bd<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>metadataReaderFactory<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
              <span class="token operator">!</span>alreadyParsedClasses<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>bd<span class="token punctuation">.</span><span class="token function">getBeanClassName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            candidates<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BeanDefinitionHolder</span><span class="token punctuation">(</span>bd<span class="token punctuation">,</span> candidateName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      candidateNames <span class="token operator">=</span> newCandidateNames<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">//\u5B58\u5728\u6CA1\u6709\u89E3\u6790\u8FC7\u7684 \u9700\u8981\u5FAA\u73AF\u89E3\u6790</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>candidates<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Register the ImportRegistry as a bean in order to support ImportAware @Configuration classes</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>sbr <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>sbr<span class="token punctuation">.</span><span class="token function">containsSingleton</span><span class="token punctuation">(</span>IMPORT_REGISTRY_BEAN_NAME<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sbr<span class="token punctuation">.</span><span class="token function">registerSingleton</span><span class="token punctuation">(</span>IMPORT_REGISTRY_BEAN_NAME<span class="token punctuation">,</span> parser<span class="token punctuation">.</span><span class="token function">getImportRegistry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>metadataReaderFactory <span class="token keyword">instanceof</span> <span class="token class-name">CachingMetadataReaderFactory</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Clear cache in externally provided MetadataReaderFactory; this is a no-op</span>
    <span class="token comment">// for a shared cache since it&#39;ll be cleared by the ApplicationContext.</span>
    <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">CachingMetadataReaderFactory</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span>metadataReaderFactory<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">clearCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
	 * Post-processes a BeanFactory in search of Configuration class BeanDefinitions;
	 * any candidates are then enhanced by a <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">ConfigurationClassEnhancer</span></span><span class="token punctuation">}</span>.
	 * Candidate status is determined by BeanDefinition attribute metadata.
	 * <span class="token keyword">@see</span> <span class="token reference"><span class="token class-name">ConfigurationClassEnhancer</span></span>
	 */</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">enhanceConfigurationClasses</span><span class="token punctuation">(</span><span class="token class-name">ConfigurableListableBeanFactory</span> beanFactory<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">AbstractBeanDefinition</span><span class="token punctuation">&gt;</span></span> configBeanDefs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> beanName <span class="token operator">:</span> beanFactory<span class="token punctuation">.</span><span class="token function">getBeanDefinitionNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">BeanDefinition</span> beanDef <span class="token operator">=</span> beanFactory<span class="token punctuation">.</span><span class="token function">getBeanDefinition</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">/*
			 \u53EA\u6709full\u7248\u914D\u7F6E\u7C7B\u624D\u4F1A\u521B\u5EFAcglib\u4EE3\u7406
			 \u867D\u7136\u6211\u4EEC\u5728\u6307\u5B9A\u914D\u7F6E\u7684\u65F6\u5019\u4E0D\u6807\u6CE8@Configuration\u4E5F\u884C\uFF0C\u6240\u4EE5\u52A0\u4E0D\u52A0\u6CE8\u89E3\u7684\u533A\u522B\u5C31\u5728\u8FD9\u91CC
			 \u90A3\u4E48\u52A0\u4E86@Configuration\u548C\u4E0D\u52A0\u6709\u672C\u8D28\u4E0A\u6709\u4EC0\u4E48\u533A\u522B\u7684\uFF1F
			 \u5F53\u5728\u914D\u7F6E\u7C7B\u4E2D\u4E00\u4E2A@Bean \u4F7F\u7528\u65B9\u6CD5\u7684\u65B9\u5F0F\u5F15\u7528\u53E6\u4E00\u4E2ABean\u5982\u679C\u4E0D\u52A0\u6CE8\u89E3\u5C31\u4F1A\u91CD\u590D\u52A0\u8F7DBean
			 \u5982\u679C\u52A0\u4E86@Configuration  \u5219\u4F1A\u5728\u8FD9\u91CC\u521B\u5EFAcglib\u4EE3\u7406\uFF0C\u5F53\u8C03\u7528@Bean\u65B9\u6CD5\u65F6\u4F1A\u5148\u68C0\u6D4B\u5BB9\u5668\u4E2D\u662F\u5426\u5B58\u5728*/</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ConfigurationClassUtils</span><span class="token punctuation">.</span><span class="token function">isFullConfigurationClass</span><span class="token punctuation">(</span>beanDef<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>beanDef <span class="token keyword">instanceof</span> <span class="token class-name">AbstractBeanDefinition</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanDefinitionStoreException</span><span class="token punctuation">(</span><span class="token string">&quot;Cannot enhance @Configuration bean definition &#39;&quot;</span> <span class="token operator">+</span>
                                               beanName <span class="token operator">+</span> <span class="token string">&quot;&#39; since it is not stored in an AbstractBeanDefinition subclass&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isWarnEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> beanFactory<span class="token punctuation">.</span><span class="token function">containsSingleton</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;Cannot enhance @Configuration bean definition &#39;&quot;</span> <span class="token operator">+</span> beanName <span class="token operator">+</span>
                    <span class="token string">&quot;&#39; since its singleton instance has been created too early. The typical cause &quot;</span> <span class="token operator">+</span>
                    <span class="token string">&quot;is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor &quot;</span> <span class="token operator">+</span>
                    <span class="token string">&quot;return type: Consider declaring such methods as &#39;static&#39;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      configBeanDefs<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">AbstractBeanDefinition</span><span class="token punctuation">)</span> beanDef<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>configBeanDefs<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// nothing to enhance -&gt; return immediately</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token class-name">ConfigurationClassEnhancer</span> enhancer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConfigurationClassEnhancer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">AbstractBeanDefinition</span><span class="token punctuation">&gt;</span></span> entry <span class="token operator">:</span> configBeanDefs<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">AbstractBeanDefinition</span> beanDef <span class="token operator">=</span> entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// If a @Configuration class gets proxied, always proxy the target class</span>
    beanDef<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token class-name">AutoProxyUtils</span><span class="token punctuation">.</span>PRESERVE_TARGET_CLASS_ATTRIBUTE<span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">.</span>TRUE<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token comment">// Set enhanced subclass of the user-specified bean class</span>
      <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> configClass <span class="token operator">=</span> beanDef<span class="token punctuation">.</span><span class="token function">resolveBeanClass</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>beanClassLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>configClass <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> enhancedClass <span class="token operator">=</span> enhancer<span class="token punctuation">.</span><span class="token function">enhance</span><span class="token punctuation">(</span>configClass<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>beanClassLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>configClass <span class="token operator">!=</span> enhancedClass<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;Replacing bean definition &#39;%s&#39; existing class &#39;%s&#39; with &quot;</span> <span class="token operator">+</span>
                                       <span class="token string">&quot;enhanced class &#39;%s&#39;&quot;</span><span class="token punctuation">,</span> entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> configClass<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> enhancedClass<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token comment">// \u91CD\u65B0\u4FEE\u6539Bean\u5B9A\u4E49\u7684Class\uFF0C\u5728\u521B\u5EFABean\u7684\u5B9E\u4F8B\u65F6\u5C06\u4F1A\u5B9E\u4F8Bcglib\u7684\u7C7B</span>
          beanDef<span class="token punctuation">.</span><span class="token function">setBeanClass</span><span class="token punctuation">(</span>enhancedClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token string">&quot;Cannot load configuration class: &quot;</span> <span class="token operator">+</span> beanDef<span class="token punctuation">.</span><span class="token function">getBeanClassName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u53EA\u6709full\u7248\u914D\u7F6E\u7C7B\u624D\u4F1A\u521B\u5EFAcglib\u4EE3\u7406</span>
<span class="token title important"><span class="token punctuation">#</span> \u867D\u7136\u6211\u4EEC\u5728\u6307\u5B9A\u914D\u7F6E\u7684\u65F6\u5019\u4E0D\u6807\u6CE8@Configuration\u4E5F\u884C\uFF0C\u6240\u4EE5\u52A0\u4E0D\u52A0\u6CE8\u89E3\u7684\u533A\u522B\u5C31\u5728\u8FD9\u91CC</span>
<span class="token title important"><span class="token punctuation">#</span> \u90A3\u4E48\u52A0\u4E86@Configuration\u548C\u4E0D\u52A0\u6709\u672C\u8D28\u4E0A\u6709\u4EC0\u4E48\u533A\u522B\u7684\uFF1F</span>
\u5F53\u5728\u914D\u7F6E\u7C7B\u4E2D\u4E00\u4E2A@Bean \u4F7F\u7528\u65B9\u6CD5\u7684\u65B9\u5F0F\u5F15\u7528\u53E6\u4E00\u4E2ABean\u5982\u679C\u4E0D\u52A0\u6CE8\u89E3\u5C31\u4F1A\u91CD\u590D\u52A0\u8F7DBean
\u5982\u679C\u52A0\u4E86@Configuration  \u5219\u4F1A\u5728\u8FD9\u91CC\u521B\u5EFAcglib\u4EE3\u7406\uFF0C\u5F53\u8C03\u7528@Bean\u65B9\u6CD5\u65F6\u4F1A\u5148\u68C0\u6D4B\u5BB9\u5668\u4E2D\u662F\u5426\u5B58\u5728
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainConfig</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span><span class="token string">&quot;car&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Car</span> <span class="token function">car</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

        <span class="token class-name">Car</span> car <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Car</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        car<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;xushu&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        car<span class="token punctuation">.</span><span class="token function">setTank</span><span class="token punctuation">(</span><span class="token function">tank</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u5982\u679C\u4E0D\u53BBioc \u5BB9\u5668\u4E2D\u62FF   \u662F\u4E0D\u662F\u6BCF\u6B21\u90FD\u4F1A\u521B\u5EFA\u65B0\u7684</span>
        <span class="token comment">// \u5982\u679C\u6CE8\u89E3\u4E86@Configuration\uFF0C\u90FD\u4F1A\u5148\u6839\u636E\u65B9\u6CD5\u540D  getBean(&quot;car&quot;)</span>
        <span class="token keyword">return</span> car<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">Tank</span> <span class="token function">tank</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Tank</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u771F\u7684\u89E3\u6790\u7C7B\u662FConfigurationClassParser#doProcessConfigurationClass</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token class-name">SourceClass</span> <span class="token function">doProcessConfigurationClass</span><span class="token punctuation">(</span><span class="token class-name">ConfigurationClass</span> configClass<span class="token punctuation">,</span> <span class="token class-name">SourceClass</span> sourceClass<span class="token punctuation">)</span>
			<span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>

  <span class="token comment">// Recursively process any member (nested) classes first</span>
  <span class="token function">processMemberClasses</span><span class="token punctuation">(</span>configClass<span class="token punctuation">,</span> sourceClass<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">//\u5904\u7406\u6211\u4EEC\u7684@propertySource\u6CE8\u89E3\u7684</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">AnnotationAttributes</span> propertySource <span class="token operator">:</span> <span class="token class-name">AnnotationConfigUtils</span><span class="token punctuation">.</span><span class="token function">attributesForRepeatable</span><span class="token punctuation">(</span>
    sourceClass<span class="token punctuation">.</span><span class="token function">getMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">PropertySources</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>
    <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>PropertySource</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>environment <span class="token keyword">instanceof</span> <span class="token class-name">ConfigurableEnvironment</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">processPropertySource</span><span class="token punctuation">(</span>propertySource<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
      logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;Ignoring @PropertySource annotation on [&quot;</span> <span class="token operator">+</span> sourceClass<span class="token punctuation">.</span><span class="token function">getMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClassName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
                  <span class="token string">&quot;]. Reason: Environment must implement ConfigurableEnvironment&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">//\u89E3\u6790\u6211\u4EEC\u7684 @ComponentScan \u6CE8\u89E3</span>

  <span class="token comment">//\u4ECE\u6211\u4EEC\u7684\u914D\u7F6E\u7C7B\u4E0A\u89E3\u6790\u5904ComponentScans\u7684\u5BF9\u8C61\u96C6\u5408\u5C5E\u6027</span>
  <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AnnotationAttributes</span><span class="token punctuation">&gt;</span></span> componentScans <span class="token operator">=</span> <span class="token class-name">AnnotationConfigUtils</span><span class="token punctuation">.</span><span class="token function">attributesForRepeatable</span><span class="token punctuation">(</span>
    sourceClass<span class="token punctuation">.</span><span class="token function">getMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">ComponentScans</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">ComponentScan</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>componentScans<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
      <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>conditionEvaluator<span class="token punctuation">.</span><span class="token function">shouldSkip</span><span class="token punctuation">(</span>sourceClass<span class="token punctuation">.</span><span class="token function">getMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">ConfigurationPhase</span><span class="token punctuation">.</span>REGISTER_BEAN<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u5FAA\u73AF\u89E3\u6790 \u6211\u4EEC\u89E3\u6790\u51FA\u6765\u7684AnnotationAttributes</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">AnnotationAttributes</span> componentScan <span class="token operator">:</span> componentScans<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//\u628A\u6211\u4EEC\u626B\u63CF\u51FA\u6765\u7684\u7C7B\u53D8\u4E3Abean\u5B9A\u4E49\u7684\u96C6\u5408 \u771F\u6B63\u7684\u89E3\u6790</span>
      <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BeanDefinitionHolder</span><span class="token punctuation">&gt;</span></span> scannedBeanDefinitions <span class="token operator">=</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>componentScanParser<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>componentScan<span class="token punctuation">,</span> sourceClass<span class="token punctuation">.</span><span class="token function">getMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClassName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">//\u5FAA\u73AF\u5904\u7406\u6211\u4EEC\u5305\u626B\u63CF\u51FA\u6765\u7684bean\u5B9A\u4E49</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">BeanDefinitionHolder</span> holder <span class="token operator">:</span> scannedBeanDefinitions<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">BeanDefinition</span> bdCand <span class="token operator">=</span> holder<span class="token punctuation">.</span><span class="token function">getBeanDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getOriginatingBeanDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>bdCand <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          bdCand <span class="token operator">=</span> holder<span class="token punctuation">.</span><span class="token function">getBeanDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//\u5224\u65AD\u5F53\u524D\u626B\u63CF\u51FA\u6765\u7684bean\u5B9A\u4E49\u662F\u4E0D\u662F\u4E00\u4E2A\u914D\u7F6E\u7C7B,\u82E5\u662F\u7684\u8BDD \u76F4\u63A5\u8FDB\u884C\u9012\u5F52\u89E3\u6790</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ConfigurationClassUtils</span><span class="token punctuation">.</span><span class="token function">checkConfigurationClassCandidate</span><span class="token punctuation">(</span>bdCand<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>metadataReaderFactory<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">//\u9012\u5F52\u89E3\u6790 \u56E0\u4E3A@Component\u7B97\u662Flite\u914D\u7F6E\u7C7B</span>
          <span class="token function">parse</span><span class="token punctuation">(</span>bdCand<span class="token punctuation">.</span><span class="token function">getBeanClassName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> holder<span class="token punctuation">.</span><span class="token function">getBeanName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u5904\u7406 @Import annotations</span>
  <span class="token function">processImports</span><span class="token punctuation">(</span>configClass<span class="token punctuation">,</span> sourceClass<span class="token punctuation">,</span> <span class="token function">getImports</span><span class="token punctuation">(</span>sourceClass<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u5904\u7406 @ImportResource annotations</span>
  <span class="token class-name">AnnotationAttributes</span> importResource <span class="token operator">=</span>
    <span class="token class-name">AnnotationConfigUtils</span><span class="token punctuation">.</span><span class="token function">attributesFor</span><span class="token punctuation">(</span>sourceClass<span class="token punctuation">.</span><span class="token function">getMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">ImportResource</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>importResource <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> resources <span class="token operator">=</span> importResource<span class="token punctuation">.</span><span class="token function">getStringArray</span><span class="token punctuation">(</span><span class="token string">&quot;locations&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">BeanDefinitionReader</span><span class="token punctuation">&gt;</span></span> readerClass <span class="token operator">=</span> importResource<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token string">&quot;reader&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> resource <span class="token operator">:</span> resources<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">String</span> resolvedResource <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>environment<span class="token punctuation">.</span><span class="token function">resolveRequiredPlaceholders</span><span class="token punctuation">(</span>resource<span class="token punctuation">)</span><span class="token punctuation">;</span>
      configClass<span class="token punctuation">.</span><span class="token function">addImportedResource</span><span class="token punctuation">(</span>resolvedResource<span class="token punctuation">,</span> readerClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u5904\u7406 @Bean methods \u83B7\u53D6\u5230\u6211\u4EEC\u914D\u7F6E\u7C7B\u4E2D\u6240\u6709\u6807\u6CE8\u4E86@Bean\u7684\u65B9\u6CD5</span>
  <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MethodMetadata</span><span class="token punctuation">&gt;</span></span> beanMethods <span class="token operator">=</span> <span class="token function">retrieveBeanMethodMetadata</span><span class="token punctuation">(</span>sourceClass<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MethodMetadata</span> methodMetadata <span class="token operator">:</span> beanMethods<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    configClass<span class="token punctuation">.</span><span class="token function">addBeanMethod</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BeanMethod</span><span class="token punctuation">(</span>methodMetadata<span class="token punctuation">,</span> configClass<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u5904\u7406\u914D\u7F6E\u7C7B\u63A5\u53E3 \u9ED8\u8BA4\u65B9\u6CD5\u7684@Bean</span>
  <span class="token function">processInterfaces</span><span class="token punctuation">(</span>configClass<span class="token punctuation">,</span> sourceClass<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u5904\u7406\u914D\u7F6E\u7C7B\u7684\u7236\u7C7B\u7684 \uFF0C\u5FAA\u73AF\u518D\u89E3\u6790</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>sourceClass<span class="token punctuation">.</span><span class="token function">getMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasSuperClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> superclass <span class="token operator">=</span> sourceClass<span class="token punctuation">.</span><span class="token function">getMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSuperClassName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>superclass <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>superclass<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;java&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
        <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>knownSuperclasses<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>superclass<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>knownSuperclasses<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>superclass<span class="token punctuation">,</span> configClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// Superclass found, return its annotation metadata and recurse</span>
      <span class="token keyword">return</span> sourceClass<span class="token punctuation">.</span><span class="token function">getSuperClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u6CA1\u6709\u7236\u7C7B\u89E3\u6790\u5B8C\u6210</span>
  <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u662FMybatis\u7684\u8BDD\u5C31\u9700\u8981\u91CD\u5199ClassPathScanningCandidateComponentProvider\u7684\u65B9\u6CD5isCandidateComponent\uFF0C\u56E0\u4E3A\u9700\u8981\u5C06Mapper\u63A5\u53E3\u4E5F\u626B\u63CF\u8FDB\u6765</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">boolean</span> <span class="token function">isCandidateComponent</span><span class="token punctuation">(</span><span class="token class-name">AnnotatedBeanDefinition</span> beanDefinition<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">AnnotationMetadata</span> metadata <span class="token operator">=</span> beanDefinition<span class="token punctuation">.</span><span class="token function">getMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// metadata.isIndependent()=\u9876\u7EA7\u7C7B\u3001\u5D4C\u5957\u7C7B\u3001\u9759\u6001\u5185\u90E8\u7C7B</span>
  <span class="token comment">// metadata.isConcrete() =\u975E\u63A5\u53E3\u3001\u975E\u62BD\u8C61\u7C7B</span>
  <span class="token comment">// metadata.isAbstract() &amp;&amp; metadata.hasAnnotatedMethods(Lookup.class.getName() = \u62BD\u8C61\u7C7B\u5E76\u4E14\u5FC5\u987B\u65B9\u6CD5\u4E2D\u6709@LookUp</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>metadata<span class="token punctuation">.</span><span class="token function">isIndependent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>metadata<span class="token punctuation">.</span><span class="token function">isConcrete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span>
                                       <span class="token punctuation">(</span>metadata<span class="token punctuation">.</span><span class="token function">isAbstract</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> metadata<span class="token punctuation">.</span><span class="token function">hasAnnotatedMethods</span><span class="token punctuation">(</span><span class="token class-name">Lookup</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u6392\u9664\u548C\u8FC7\u6EE4\u7684\u4E00\u4E9B\u7EC6\u8282</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><h3 id="\u5FAA\u73AF\u4F9D\u8D56\u89E3\u6790"><a class="header-anchor" href="#\u5FAA\u73AF\u4F9D\u8D56\u89E3\u6790" aria-hidden="true">#</a> \u5FAA\u73AF\u4F9D\u8D56\u89E3\u6790</h3><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u8BFE\u7A0B\u5185\u5BB9</span>
<span class="token list punctuation">1.</span> \u624B\u5199spring\u5FAA\u73AF\u4F9D\u8D56\u7684\u6574\u4E2A\u8FC7\u7A0B
<span class="token list punctuation">2.</span> spring\u600E\u4E48\u89E3\u51B3\u5FAA\u73AF\u4F9D\u8D56
<span class="token list punctuation">3.</span> \u4E3A\u4EC0\u4E48\u8981\u4E8C\u7EA7\u7F13\u5B58\u548C\u4E09\u7EA7\u7F13\u5B58
<span class="token list punctuation">4.</span> spring\u6709\u6CA1\u6709\u89E3\u51B3\u6784\u9020\u51FD\u6570\u7684\u5FAA\u73AF\u4F9D\u8D56
<span class="token list punctuation">5.</span> spring\u6709\u6CA1\u6709\u89E3\u51B3\u591A\u4F8B\u4E0B\u7684\u5FAA\u73AF\u4F9D\u8D56
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6240\u8C13\u7684\u5FAA\u73AF\u4F9D\u8D56\u662F\u6307\uFF0CA \u4F9D\u8D56 B\uFF0CB \u53C8\u4F9D\u8D56 A\uFF0C\u5B83\u4EEC\u4E4B\u95F4\u5F62\u6210\u4E86\u5FAA\u73AF\u4F9D\u8D56\u3002\u6216\u8005\u662F A \u4F9D\u8D56 B\uFF0CB \u4F9D\u8D56 C\uFF0CC \u53C8\u4F9D\u8D56 A\u3002\u5B83\u4EEC\u4E4B\u95F4\u7684\u4F9D\u8D56\u5173\u7CFB\u5982\u4E0B\uFF1A</p><p><img src="`+L+`" alt="image-20220218154221998"></p><h4 id="\u624B\u5199spring\u6E90\u7801\u5230\u5E95\u662F\u600E\u4E48\u89E3\u51B3\u7684"><a class="header-anchor" href="#\u624B\u5199spring\u6E90\u7801\u5230\u5E95\u662F\u600E\u4E48\u89E3\u51B3\u7684" aria-hidden="true">#</a> \u624B\u5199spring\u6E90\u7801\u5230\u5E95\u662F\u600E\u4E48\u89E3\u51B3\u7684</h4><p>InstanceA\u548CInstanceB\u4E92\u76F8\u4F9D\u8D56</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span>
<span class="token annotation punctuation">@Scope</span><span class="token punctuation">(</span><span class="token string">&quot;prototype&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">InstanceA</span> <span class="token keyword">implements</span> <span class="token class-name">IApi</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">InstanceB</span> instanceB<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">InstanceB</span> <span class="token function">getInstanceB</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> instanceB<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setInstanceB</span><span class="token punctuation">(</span><span class="token class-name">InstanceB</span> instanceB<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>instanceB <span class="token operator">=</span> instanceB<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">InstanceA</span><span class="token punctuation">(</span><span class="token class-name">InstanceB</span> instanceB<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>instanceB <span class="token operator">=</span> instanceB<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> <span class="token class-name">InstanceA</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;InstanceA\u5B9E\u4F8B\u5316&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

	<span class="token annotation punctuation">@Override</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;I&#39;m A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">InstanceB</span>  <span class="token punctuation">{</span>


    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">InstanceA</span> instanceA<span class="token punctuation">;</span>


    <span class="token keyword">public</span> <span class="token class-name">InstanceA</span> <span class="token function">getInstanceA</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> instanceA<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setInstanceA</span><span class="token punctuation">(</span><span class="token class-name">InstanceA</span> instanceA<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>instanceA <span class="token operator">=</span> instanceA<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">InstanceB</span><span class="token punctuation">(</span><span class="token class-name">InstanceA</span> instanceA<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>instanceA <span class="token operator">=</span> instanceA<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> <span class="token class-name">InstanceB</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;InstanceB\u5B9E\u4F8B\u5316&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6309\u7167spring\u7684\u6B65\u9AA4\uFF0C\u5E94\u8BE5\u662F</p><ul><li>\u8BFB\u53D6BeanDefinition\u5E76\u6CE8\u518C\u5230BeanDefinitionRegistry</li><li>\u8C03\u7528getBean\u521B\u5EFA\u51FA\u5B9E\u4F8B\uFF0CgetBean\u7684\u8FC7\u7A0B\u5927\u6982\u6709\u51E0\u4E2A\u6B65\u9AA4 <ul><li>\u5B9E\u4F8B\u5316</li><li>\u5C5E\u6027\u8D4B\u503C</li><li>\u521D\u59CB\u5316</li><li>\u6DFB\u52A0\u5230\u5355\u4F8B\u6C60</li></ul></li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyMainStart</span> <span class="token punctuation">{</span>
	<span class="token comment">// beanDefinition\u96C6\u5408</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">BeanDefinition</span><span class="token punctuation">&gt;</span></span> beanDefinitionMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">loadBeanDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">final</span> <span class="token class-name">RootBeanDefinition</span> beanDefinition <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RootBeanDefinition</span><span class="token punctuation">(</span><span class="token class-name">InstanceA</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">final</span> <span class="token class-name">RootBeanDefinition</span> beanDefinition1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RootBeanDefinition</span><span class="token punctuation">(</span><span class="token class-name">InstanceB</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		beanDefinitionMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;instanceA&quot;</span><span class="token punctuation">,</span> beanDefinition<span class="token punctuation">)</span><span class="token punctuation">;</span>
		beanDefinitionMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;instanceB&quot;</span><span class="token punctuation">,</span> beanDefinition1<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u52A0\u8F7D\u4E86BeanDefinition</span>
		<span class="token function">loadBeanDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">// \u5FAA\u73AF\u521B\u5EFABean</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> beanName <span class="token operator">:</span> beanDefinitionMap<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

			<span class="token comment">// \u5148\u521B\u5EFAA</span>
			<span class="token function">getBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// \u4E00\u7EA7\u7F13\u5B58\uFF08\u5355\u4F8B\u6C60\uFF09</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> singletonObjects <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token doc-comment comment">/**
	 * \u83B7\u53D6Bean
	 *
	 * <span class="token keyword">@param</span> <span class="token parameter">beanName</span>
	 * <span class="token keyword">@return</span>
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Object</span> <span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u5B9E\u4F8B\u5316</span>
		<span class="token keyword">final</span> <span class="token class-name">RootBeanDefinition</span> beanDefinition <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">RootBeanDefinition</span><span class="token punctuation">)</span> beanDefinitionMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">final</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> beanClass <span class="token operator">=</span> beanDefinition<span class="token punctuation">.</span><span class="token function">getBeanClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">final</span> <span class="token class-name">Object</span> instanceBean <span class="token operator">=</span> beanClass<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u901A\u8FC7\u65E0\u53C2\u6784\u9020\u51FD\u6570</span>

		<span class="token comment">// \u5C5E\u6027\u8D4B\u503C</span>
		<span class="token keyword">final</span> <span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span> declaredFields <span class="token operator">=</span> beanClass<span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Field</span> declaredField <span class="token operator">:</span> declaredFields<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">final</span> <span class="token class-name">Autowired</span> annotation <span class="token operator">=</span> declaredField<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">Autowired</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>annotation <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// \u8BF4\u660E\u5C5E\u6027\u4E0A\u9762\u6709Autowired\u6CE8\u89E3</span>
				declaredField<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u6253\u5F00\u5C5E\u6027\u7684\u8BBF\u95EE\u6743\u9650</span>
				<span class="token comment">// \u9700\u8981\u5148\u521B\u5EFA\u51FAAutowired\u4F9D\u8D56\u7684\u5BF9\u8C61</span>
				<span class="token comment">// byname bytype byconstrator\u4E09\u79CD\u65B9\u5F0F</span>
				<span class="token comment">// \u8FD9\u91CC\u5199\u7B80\u5355\u4E00\u70B9\uFF0C\u901A\u8FC7byname\u7684\u65B9\u5F0F</span>
				<span class="token keyword">final</span> <span class="token class-name">String</span> name <span class="token operator">=</span> declaredField<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">final</span> <span class="token class-name">Object</span> fieldObject <span class="token operator">=</span> <span class="token function">getBean</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u62FF\u5230B\u7684Bean</span>
				declaredField<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>instanceBean<span class="token punctuation">,</span> fieldObject<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>

		<span class="token comment">// \u521D\u59CB\u5316</span>
		<span class="token comment">// \u5224\u65AD\u5F53\u524D\u7684Bean\u6709\u6CA1\u6709\u5B9E\u73B0\u521D\u59CB\u5316\u7684\u63A5\u53E3\uFF0C\u8FD9\u91CC\u5173\u6CE8\u7684\u662F\u5FAA\u73AF\u4F9D\u8D56\uFF0C\u5C31\u4E0D\u5199\u4E86</span>

		<span class="token comment">// \u6DFB\u52A0\u5230\u4E00\u7EA7\u7F13\u5B58\uFF08\u5355\u4F8B\u6C60\uFF09</span>
		singletonObjects<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> instanceBean<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">return</span> instanceBean<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u4E0A\u9762\u7684\u4EE3\u7801\u4F1A\u51FA\u73B0\u4EC0\u4E48\u95EE\u9898\u5462\uFF1F</span>
\u5FAA\u73AF\u4F9D\u8D56\u5BFC\u81F4getBean\u4E0D\u80FD\u9000\u51FA\uFF0C\u51FA\u73B0\u6B7B\u5FAA\u73AF
<span class="token blockquote punctuation">&gt;</span> \u6240\u4EE5\u6211\u4EEC\u8981\u52A0\u4E00\u4E2A\u51FA\u53E3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5047\u5982\u6211\u4EEC\u52A0\u4E00\u4E2A\u5224\u5B9A\uFF0C\u5982\u679C\u4E00\u7EA7\u7F13\u5B58\u4E2D\u5DF2\u7ECF\u5B58\u5728\u6211\u4EEC\u4F9D\u8D56\u7684Bean\uFF0C\u90A3\u4E48\u5C31\u9000\u51FA\uFF0C\u662F\u5426\u8FD8\u4F1A\u51FA\u73B0\u95EE\u9898\u5462\uFF1F</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u4F1A\u7684\uFF0C\u56E0\u4E3A\u6211\u4EEC\u4E00\u7EA7\u7F13\u5B58\u4E2D\u7684\u6DFB\u52A0\u8FDB\u53BB\u7684bean\u662F\u5728\u5FAA\u73AF\u4E4B\u540E\u52A0\u7684\uFF0C\u4E00\u7EA7\u7F13\u5B58\u5E76\u6CA1\u6709\u53C2\u4E0E\u5230\u5FAA\u73AF\u7EC8\u6B62</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Object</span> <span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>

  <span class="token comment">// \u5224\u5B9A\u52A0\u4E00\u4E2A\u51FA\u53E3\uFF0C\u9632\u6B62\u5FAA\u73AF\u4F9D\u8D56</span>
  <span class="token keyword">final</span> <span class="token class-name">Object</span> singleton <span class="token operator">=</span> <span class="token function">getSingleton</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>singleton <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> singleton<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// 1. A\u8FDB\u6765\uFF0C\u5355\u4F8B\u6C60\u4E2D\u6CA1\u6709\u627E\u5230\uFF0C\u8D70\u8FD9\u4E00\u6B65</span>
  <span class="token comment">// 3. B\u8FDB\u6765\uFF0C\u5355\u4F8B\u6C60\u4E2D\u6CA1\u6709\u627E\u5230\uFF0C\u8D70\u8FD9\u4E00\u6B65</span>
  <span class="token comment">// \u5B9E\u4F8B\u5316</span>
  <span class="token keyword">final</span> <span class="token class-name">RootBeanDefinition</span> beanDefinition <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">RootBeanDefinition</span><span class="token punctuation">)</span> beanDefinitionMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">final</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> beanClass <span class="token operator">=</span> beanDefinition<span class="token punctuation">.</span><span class="token function">getBeanClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">final</span> <span class="token class-name">Object</span> instanceBean <span class="token operator">=</span> beanClass<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u901A\u8FC7\u65E0\u53C2\u6784\u9020\u51FD\u6570</span>

  <span class="token comment">// \u5C5E\u6027\u8D4B\u503C</span>
  <span class="token keyword">final</span> <span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span> declaredFields <span class="token operator">=</span> beanClass<span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Field</span> declaredField <span class="token operator">:</span> declaredFields<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">Autowired</span> annotation <span class="token operator">=</span> declaredField<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">Autowired</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>annotation <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8BF4\u660E\u5C5E\u6027\u4E0A\u9762\u6709Autowired\u6CE8\u89E3</span>
      declaredField<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u6253\u5F00\u5C5E\u6027\u7684\u8BBF\u95EE\u6743\u9650</span>
      <span class="token comment">// \u9700\u8981\u5148\u521B\u5EFA\u51FAAutowired\u4F9D\u8D56\u7684\u5BF9\u8C61</span>
      <span class="token comment">// byname bytype byconstrator\u4E09\u79CD\u65B9\u5F0F</span>
      <span class="token comment">// \u8FD9\u91CC\u5199\u7B80\u5355\u4E00\u70B9\uFF0C\u901A\u8FC7byname\u7684\u65B9\u5F0F</span>
      <span class="token keyword">final</span> <span class="token class-name">String</span> name <span class="token operator">=</span> declaredField<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// 2. A\u4E2D\u5C5E\u6027\u4F9D\u8D56B\uFF0C\u9700\u8981getBean(B)</span>
      <span class="token comment">// 4. B\u4E2D\u5C5E\u6027\u4F9D\u8D56A\uFF0C\u9700\u8981getBean(A)</span>
      <span class="token keyword">final</span> <span class="token class-name">Object</span> fieldObject <span class="token operator">=</span> <span class="token function">getBean</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u62FF\u5230B\u7684Bean</span>
      declaredField<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>instanceBean<span class="token punctuation">,</span> fieldObject<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u521D\u59CB\u5316</span>
  <span class="token comment">// \u5224\u65AD\u5F53\u524D\u7684Bean\u6709\u6CA1\u6709\u5B9E\u73B0\u521D\u59CB\u5316\u7684\u63A5\u53E3\uFF0C\u8FD9\u91CC\u5173\u6CE8\u7684\u662F\u5FAA\u73AF\u4F9D\u8D56\uFF0C\u5C31\u4E0D\u5199\u4E86</span>

  <span class="token comment">// \u6DFB\u52A0\u5230\u4E00\u7EA7\u7F13\u5B58\uFF08\u5355\u4F8B\u6C60\uFF09</span>
  singletonObjects<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> instanceBean<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> instanceBean<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Object</span> <span class="token function">getSingleton</span><span class="token punctuation">(</span><span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>singletonObjects<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> singletonObjects<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E3A\u4E86\u8BA9\u4E00\u7EA7\u7F13\u5B58\u80FD\u53C2\u4E0E\u5230\u5FAA\u73AF\u7684\u5224\u5B9A\uFF0C\u6211\u4EEC\u5C06\u5BF9\u8C61\u653E\u5165\u4E00\u7EA7\u7F13\u5B58\u7684\u4EE3\u7801\u653E\u5230\u4F9D\u8D56\u4E4B\u524D</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyMainStart</span> <span class="token punctuation">{</span>
	<span class="token comment">// beanDefinition\u96C6\u5408</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">BeanDefinition</span><span class="token punctuation">&gt;</span></span> beanDefinitionMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">loadBeanDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">final</span> <span class="token class-name">RootBeanDefinition</span> beanDefinition <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RootBeanDefinition</span><span class="token punctuation">(</span><span class="token class-name">InstanceA</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">final</span> <span class="token class-name">RootBeanDefinition</span> beanDefinition1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RootBeanDefinition</span><span class="token punctuation">(</span><span class="token class-name">InstanceB</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		beanDefinitionMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;instanceA&quot;</span><span class="token punctuation">,</span> beanDefinition<span class="token punctuation">)</span><span class="token punctuation">;</span>
		beanDefinitionMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;instanceB&quot;</span><span class="token punctuation">,</span> beanDefinition1<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u52A0\u8F7D\u4E86BeanDefinition</span>
		<span class="token function">loadBeanDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">// \u5FAA\u73AF\u521B\u5EFABean</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> beanName <span class="token operator">:</span> beanDefinitionMap<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token function">getBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">final</span> <span class="token class-name">InstanceA</span> instanceA <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">InstanceA</span><span class="token punctuation">)</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">&quot;instanceA&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		instanceA<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// \u4E00\u7EA7\u7F13\u5B58\uFF08\u5355\u4F8B\u6C60\uFF09</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> singletonObjects <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token doc-comment comment">/**
	 * \u83B7\u53D6Bean
	 *
	 * <span class="token keyword">@param</span> <span class="token parameter">beanName</span>
	 * <span class="token keyword">@return</span>
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Object</span> <span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>

		<span class="token comment">// \u5224\u5B9A\u52A0\u4E00\u4E2A\u51FA\u53E3\uFF0C\u9632\u6B62\u5FAA\u73AF\u4F9D\u8D56</span>
		<span class="token keyword">final</span> <span class="token class-name">Object</span> singleton <span class="token operator">=</span> <span class="token function">getSingleton</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>singleton <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> singleton<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token comment">// 1. A\u8FDB\u6765\uFF0C\u5355\u4F8B\u6C60\u4E2D\u6CA1\u6709\u627E\u5230\uFF0C\u8D70\u8FD9\u4E00\u6B65</span>
		<span class="token comment">// 3. B\u8FDB\u6765\uFF0C\u5355\u4F8B\u6C60\u4E2D\u6CA1\u6709\u627E\u5230\uFF0C\u8D70\u8FD9\u4E00\u6B65</span>
		<span class="token comment">// \u5B9E\u4F8B\u5316</span>
		<span class="token keyword">final</span> <span class="token class-name">RootBeanDefinition</span> beanDefinition <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">RootBeanDefinition</span><span class="token punctuation">)</span> beanDefinitionMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">final</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> beanClass <span class="token operator">=</span> beanDefinition<span class="token punctuation">.</span><span class="token function">getBeanClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">final</span> <span class="token class-name">Object</span> instanceBean <span class="token operator">=</span> beanClass<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u901A\u8FC7\u65E0\u53C2\u6784\u9020\u51FD\u6570</span>

		<span class="token comment">// \u6DFB\u52A0\u5230\u4E00\u7EA7\u7F13\u5B58\uFF08\u5355\u4F8B\u6C60\uFF09</span>
    <span class="token comment">// \u8FD9\u91CC\u63D0\u524D\uFF0C\u5C31\u53EF\u4EE5\u5728\u4E0A\u9762\u5224\u65AD\u7684\u65F6\u5019\uFF0C\u80FD\u627E\u5230\u4F9D\u8D56\u7684\u5BF9\u8C61</span>
		singletonObjects<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> instanceBean<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">// \u5C5E\u6027\u8D4B\u503C</span>
		<span class="token keyword">final</span> <span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span> declaredFields <span class="token operator">=</span> beanClass<span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Field</span> declaredField <span class="token operator">:</span> declaredFields<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">final</span> <span class="token class-name">Autowired</span> annotation <span class="token operator">=</span> declaredField<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">Autowired</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>annotation <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// \u8BF4\u660E\u5C5E\u6027\u4E0A\u9762\u6709Autowired\u6CE8\u89E3</span>
				declaredField<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u6253\u5F00\u5C5E\u6027\u7684\u8BBF\u95EE\u6743\u9650</span>
				<span class="token comment">// \u9700\u8981\u5148\u521B\u5EFA\u51FAAutowired\u4F9D\u8D56\u7684\u5BF9\u8C61</span>
				<span class="token comment">// byname bytype byconstrator\u4E09\u79CD\u65B9\u5F0F</span>
				<span class="token comment">// \u8FD9\u91CC\u5199\u7B80\u5355\u4E00\u70B9\uFF0C\u901A\u8FC7byname\u7684\u65B9\u5F0F</span>
				<span class="token keyword">final</span> <span class="token class-name">String</span> name <span class="token operator">=</span> declaredField<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token comment">// 2. A\u4E2D\u5C5E\u6027\u4F9D\u8D56B\uFF0C\u9700\u8981getBean(B)</span>
				<span class="token comment">// 4. B\u4E2D\u5C5E\u6027\u4F9D\u8D56A\uFF0C\u9700\u8981getBean(A)</span>
				<span class="token keyword">final</span> <span class="token class-name">Object</span> fieldObject <span class="token operator">=</span> <span class="token function">getBean</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u62FF\u5230B\u7684Bean</span>
				declaredField<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>instanceBean<span class="token punctuation">,</span> fieldObject<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>

		<span class="token comment">// \u521D\u59CB\u5316</span>
		<span class="token comment">// \u5224\u65AD\u5F53\u524D\u7684Bean\u6709\u6CA1\u6709\u5B9E\u73B0\u521D\u59CB\u5316\u7684\u63A5\u53E3\uFF0C\u8FD9\u91CC\u5173\u6CE8\u7684\u662F\u5FAA\u73AF\u4F9D\u8D56\uFF0C\u5C31\u4E0D\u5199\u4E86</span>


		<span class="token keyword">return</span> instanceBean<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Object</span> <span class="token function">getSingleton</span><span class="token punctuation">(</span><span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>singletonObjects<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span>
			<span class="token keyword">return</span> singletonObjects<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u4E3A\u4EC0\u4E48\u4E00\u7EA7\u7F13\u5B58\u53EF\u4EE5\u89E3\u51B3\u5FAA\u73AF\u4F9D\u8D56\u7684\u95EE\u9898\uFF0C\u8FD8\u9700\u8981\u4E8C\u4E09\u7EA7\u7F13\u5B58\u5462\uFF1F</span>
\u5047\u5982\u8BF4\uFF0C\u6211\u4EEC\u5728\u521B\u5EFAbean\u7684\u65F6\u5019\u662F\u591A\u7EBF\u7A0B\uFF0C\u5F53\u4E00\u4E2A\u7EBF\u7A0B\u521B\u5EFABean A\u7684\u65F6\u5019\uFF0C\u5C06A\u5B9E\u4F8B\u653E\u5165\u5230\u4E00\u7EA7\u7F13\u5B58\u4E2D\uFF0C\u53E6\u5916\u4E00\u4E2A\u7EBF\u7A0BgetBean(A)\u7684\u65F6\u5019\uFF0C\u8FD9\u4E2A\u65F6\u5019A\u662F\u4E00\u4E2A\u4E0D\u5B8C\u6574\u7684Bean\uFF0C\u6240\u4EE5\u8BF4\u6211\u4EEC\u662F\u80AF\u5B9A\u8981\u6539\u8FDB\u7684
<span class="token title important"><span class="token punctuation">#</span> \u52A0\u5165\u4E8C\u7EA7\u7F13\u5B58\u6765\u5904\u7406\uFF0C\u7EAF\u51C0\u6001Bean (\u5B58\u50A8\u4E0D\u5B8C\u6574\u7684Bean\u7528\u4E8E\u89E3\u51B3\u5FAA\u73AF\u4F9D\u8D56\u4E2D\u591A\u7EBF\u7A0B\u8BFB\u53D6\u4E00\u7EA7\u7F13\u5B58\u7684\u810F\u6570\u636E)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EA\u8981\u662F\u662F\u5728\u4E00\u7EA7\u6216\u8005\u4E8C\u7EA7\u7F13\u5B58\u4E2D\u80FD\u627E\u5230bean\uFF0C\u5C31\u53EF\u4EE5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyMainStart</span> <span class="token punctuation">{</span>
	<span class="token comment">// beanDefinition\u96C6\u5408</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">BeanDefinition</span><span class="token punctuation">&gt;</span></span> beanDefinitionMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">loadBeanDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">final</span> <span class="token class-name">RootBeanDefinition</span> beanDefinition <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RootBeanDefinition</span><span class="token punctuation">(</span><span class="token class-name">InstanceA</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">final</span> <span class="token class-name">RootBeanDefinition</span> beanDefinition1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RootBeanDefinition</span><span class="token punctuation">(</span><span class="token class-name">InstanceB</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		beanDefinitionMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;instanceA&quot;</span><span class="token punctuation">,</span> beanDefinition<span class="token punctuation">)</span><span class="token punctuation">;</span>
		beanDefinitionMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;instanceB&quot;</span><span class="token punctuation">,</span> beanDefinition1<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u52A0\u8F7D\u4E86BeanDefinition</span>
		<span class="token function">loadBeanDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">// \u5FAA\u73AF\u521B\u5EFABean</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> beanName <span class="token operator">:</span> beanDefinitionMap<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token function">getBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">final</span> <span class="token class-name">InstanceA</span> instanceA <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">InstanceA</span><span class="token punctuation">)</span> <span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">&quot;instanceA&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		instanceA<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// \u4E00\u7EA7\u7F13\u5B58\uFF08\u5355\u4F8B\u6C60\uFF09</span>
	<span class="token comment">// \u5B8C\u6574\u7684Bean</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> singletonObjects <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// \u4E8C\u7EA7\u7F13\u5B58\uFF0C\u89E3\u51B3\u591A\u7EBF\u7A0B\u95EE\u9898\uFF0C\u7EAF\u51C0\u6001Bean (\u5B58\u50A8\u4E0D\u5B8C\u6574\u7684Bean\u7528\u4E8E\u89E3\u51B3\u5FAA\u73AF\u4F9D\u8D56\u4E2D\u591A\u7EBF\u7A0B\u8BFB\u53D6\u4E00\u7EA7\u7F13\u5B58\u7684\u810F\u6570\u636E)</span>
	<span class="token comment">// \u4E3A\u4E86\u5C06\u6210\u719FBean\u548C\u7EAF\u51C0Bean\u5206\u79BB\u5F00\u6765\uFF0C\u907F\u514D\u8BFB\u53D6\u5230\u4E0D\u5B8C\u6574\u7684Bean</span>
	<span class="token comment">// \u5047\u5982\u8BF4\uFF0C\u6211\u4EEC\u5728\u521B\u5EFAbean\u7684\u65F6\u5019\u662F\u591A\u7EBF\u7A0B\uFF0C\u5F53\u4E00\u4E2A\u7EBF\u7A0B\u521B\u5EFABean A\u7684\u65F6\u5019\uFF0C\u5C06A\u5B9E\u4F8B\u653E\u5165\u5230\u4E00\u7EA7\u7F13\u5B58\u4E2D\uFF0C\u53E6\u5916\u4E00\u4E2A\u7EBF\u7A0BgetBean(A)\u7684\u65F6\u5019\uFF0C\u8FD9\u4E2A\u65F6\u5019A\u662F\u4E00\u4E2A\u4E0D\u5B8C\u6574\u7684Bean\uFF0C\u6240\u4EE5\u8BF4\u6211\u4EEC\u662F\u80AF\u5B9A\u8981\u6539\u8FDB\u7684</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> earlySingletonObjects <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token doc-comment comment">/**
	 * \u83B7\u53D6Bean
	 *
	 * <span class="token keyword">@param</span> <span class="token parameter">beanName</span>
	 * <span class="token keyword">@return</span>
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Object</span> <span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>

		<span class="token comment">// \u5224\u5B9A\u52A0\u4E00\u4E2A\u51FA\u53E3\uFF0C\u9632\u6B62\u5FAA\u73AF\u4F9D\u8D56</span>
		<span class="token keyword">final</span> <span class="token class-name">Object</span> singleton <span class="token operator">=</span> <span class="token function">getSingleton</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>singleton <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> singleton<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token comment">// 1. A\u8FDB\u6765\uFF0C\u5355\u4F8B\u6C60\u4E2D\u6CA1\u6709\u627E\u5230\uFF0C\u8D70\u8FD9\u4E00\u6B65</span>
		<span class="token comment">// 3. B\u8FDB\u6765\uFF0C\u5355\u4F8B\u6C60\u4E2D\u6CA1\u6709\u627E\u5230\uFF0C\u8D70\u8FD9\u4E00\u6B65</span>
		<span class="token comment">// \u5B9E\u4F8B\u5316</span>
		<span class="token keyword">final</span> <span class="token class-name">RootBeanDefinition</span> beanDefinition <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">RootBeanDefinition</span><span class="token punctuation">)</span> beanDefinitionMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">final</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> beanClass <span class="token operator">=</span> beanDefinition<span class="token punctuation">.</span><span class="token function">getBeanClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">final</span> <span class="token class-name">Object</span> instanceBean <span class="token operator">=</span> beanClass<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u901A\u8FC7\u65E0\u53C2\u6784\u9020\u51FD\u6570</span>

		<span class="token comment">// \u6DFB\u52A0\u5230\u4E8C\u7EA7\u7F13\u5B58</span>
		earlySingletonObjects<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> instanceBean<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">// \u5C5E\u6027\u8D4B\u503C</span>
		<span class="token keyword">final</span> <span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span> declaredFields <span class="token operator">=</span> beanClass<span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Field</span> declaredField <span class="token operator">:</span> declaredFields<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">final</span> <span class="token class-name">Autowired</span> annotation <span class="token operator">=</span> declaredField<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">Autowired</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>annotation <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// \u8BF4\u660E\u5C5E\u6027\u4E0A\u9762\u6709Autowired\u6CE8\u89E3</span>
				declaredField<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u6253\u5F00\u5C5E\u6027\u7684\u8BBF\u95EE\u6743\u9650</span>
				<span class="token comment">// \u9700\u8981\u5148\u521B\u5EFA\u51FAAutowired\u4F9D\u8D56\u7684\u5BF9\u8C61</span>
				<span class="token comment">// byname bytype byconstrator\u4E09\u79CD\u65B9\u5F0F</span>
				<span class="token comment">// \u8FD9\u91CC\u5199\u7B80\u5355\u4E00\u70B9\uFF0C\u901A\u8FC7byname\u7684\u65B9\u5F0F</span>
				<span class="token keyword">final</span> <span class="token class-name">String</span> name <span class="token operator">=</span> declaredField<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token comment">// 2. A\u4E2D\u5C5E\u6027\u4F9D\u8D56B\uFF0C\u9700\u8981getBean(B)</span>
				<span class="token comment">// 4. B\u4E2D\u5C5E\u6027\u4F9D\u8D56A\uFF0C\u9700\u8981getBean(A)</span>
				<span class="token keyword">final</span> <span class="token class-name">Object</span> fieldObject <span class="token operator">=</span> <span class="token function">getBean</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u62FF\u5230B\u7684Bean</span>
				declaredField<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>instanceBean<span class="token punctuation">,</span> fieldObject<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>

		<span class="token comment">// \u521D\u59CB\u5316</span>
		<span class="token comment">// \u5224\u65AD\u5F53\u524D\u7684Bean\u6709\u6CA1\u6709\u5B9E\u73B0\u521D\u59CB\u5316\u7684\u63A5\u53E3\uFF0C\u8FD9\u91CC\u5173\u6CE8\u7684\u662F\u5FAA\u73AF\u4F9D\u8D56\uFF0C\u5C31\u4E0D\u5199\u4E86</span>

		<span class="token comment">// \u6DFB\u52A0\u5230\u4E00\u7EA7\u7F13\u5B58\uFF08\u5355\u4F8B\u6C60\uFF09</span>
		singletonObjects<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> instanceBean<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">return</span> instanceBean<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Object</span> <span class="token function">getSingleton</span><span class="token punctuation">(</span><span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>singletonObjects<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span>
			<span class="token keyword">return</span> singletonObjects<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>earlySingletonObjects<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span>
			<span class="token keyword">return</span> earlySingletonObjects<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u4E09\u7EA7\u7F13\u5B58</span>
\u5047\u8BBEA\u4F7F\u7528\u4E86AOP\uFF0C\u90A3\u4E48\u5C31\u9700\u8981\u7ED9A\u521B\u5EFA\u52A8\u6001\u4EE3\u7406\uFF0C\u9700\u8981\u5728\u5B9E\u4F8B\u5316\u4E4B\u540E\u521B\u5EFA\u52A8\u6001\u4EE3\u7406\uFF0C\u5C06A\u7684\u4EE3\u7406\u7C7B\u653E\u5165\u5230spring IOC\u5BB9\u5668\u4E2D

<span class="token title important"><span class="token punctuation">#</span> AOP\u7684\u52A8\u6001\u4EE3\u7406\u5728\u54EA\u91CC\u521B\u5EFA\uFF1F</span>
\u6709\u4E24\u4E2A\u4E2D\u65B9\u5F0F\uFF0C\u4E00\u79CD\u662F\u5728\u521D\u59CB\u5316\u4E4B\u540E\uFF1B\u4E00\u79CD\u662F\u5728\u5B9E\u4F8B\u5316\u4E4B\u540E\uFF0C\u5F53\u51FA\u73B0\u5FAA\u73AF\u4F9D\u8D56\u7684\u65F6\u5019\uFF0C\u5C31\u4F1A\u5728\u5B9E\u4F8B\u5316\u4E4B\u540E\u521B\u5EFA
<span class="token title important"><span class="token punctuation">#</span> \u90A3\u4E48\u600E\u4E48\u6837\uFF0C\u624D\u80FD\u5728\u51FA\u73B0\u5FAA\u73AF\u4F9D\u8D56\u7684\u65F6\u5019\u5728\u5B9E\u4F8B\u5316\u4E4B\u540E\u521B\u5EFA\u52A8\u6001\u4EE3\u7406\u5462\uFF1F</span>
\u8FD9\u91CC\u5C31\u9700\u8981\u4FEE\u6539\u4EE3\u7801\uFF0C\u53EF\u4EE5\u4F7F\u7528\u4E00\u4E8C\u7EA7\u7F13\u5B58\u89E3\u51B3AOP\u95EE\u9898\u6216\u8005\u4F7F\u7528\u4E09\u7EA7\u7F13\u5B58
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6240\u4EE5\u6211\u4EEC\u53EF\u4EE5\u5C06\u4EE3\u7801\u4FEE\u6539\u6210\uFF0C\u4E5F\u5C31\u662F\u4F7F\u7528\u4E00\u4E8C\u7EA7\u7F13\u5B58\u89E3\u51B3AOP\u7684\u95EE\u9898</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JdkDynimcProxy</span> <span class="token keyword">implements</span> <span class="token class-name">InvocationHandler</span> <span class="token punctuation">{</span>

	<span class="token keyword">private</span> <span class="token class-name">Object</span> target<span class="token punctuation">;</span>

	<span class="token keyword">public</span> <span class="token class-name">JdkDynimcProxy</span><span class="token punctuation">(</span><span class="token class-name">Object</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>target <span class="token operator">=</span> target<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">T</span> <span class="token function">getProxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">)</span> <span class="token class-name">Proxy</span><span class="token punctuation">.</span><span class="token function">newProxyInstance</span><span class="token punctuation">(</span>target<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> target<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInterfaces</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token annotation punctuation">@Override</span>
	<span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Object</span> proxy<span class="token punctuation">,</span> <span class="token class-name">Method</span> method<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6D4B\u8BD5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> method<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyMainStart</span> <span class="token punctuation">{</span>
	<span class="token comment">// beanDefinition\u96C6\u5408</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">BeanDefinition</span><span class="token punctuation">&gt;</span></span> beanDefinitionMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">loadBeanDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">final</span> <span class="token class-name">RootBeanDefinition</span> beanDefinition <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RootBeanDefinition</span><span class="token punctuation">(</span><span class="token class-name">InstanceA</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">final</span> <span class="token class-name">RootBeanDefinition</span> beanDefinition1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RootBeanDefinition</span><span class="token punctuation">(</span><span class="token class-name">InstanceB</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		beanDefinitionMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;instanceA&quot;</span><span class="token punctuation">,</span> beanDefinition<span class="token punctuation">)</span><span class="token punctuation">;</span>
		beanDefinitionMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;instanceB&quot;</span><span class="token punctuation">,</span> beanDefinition1<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u52A0\u8F7D\u4E86BeanDefinition</span>
		<span class="token function">loadBeanDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">//\u6CE8\u518Cbean\u7684\u540E\u7F6E\u5904\u7406\u5668</span>
		<span class="token comment">// ...</span>

		<span class="token comment">// \u5FAA\u73AF\u521B\u5EFABean</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> beanName <span class="token operator">:</span> beanDefinitionMap<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token function">getBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">final</span> <span class="token class-name">InstanceA</span> instanceA <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">InstanceA</span><span class="token punctuation">)</span> <span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">&quot;instanceA&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		instanceA<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// \u4E00\u7EA7\u7F13\u5B58\uFF08\u5355\u4F8B\u6C60\uFF09</span>
	<span class="token comment">// \u5B8C\u6574\u7684Bean</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> singletonObjects <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// \u4E8C\u7EA7\u7F13\u5B58\uFF0C\u89E3\u51B3\u591A\u7EBF\u7A0B\u95EE\u9898</span>
	<span class="token comment">// \u4E3A\u4E86\u5C06\u6210\u719FBean\u548C\u7EAF\u51C0Bean\u5206\u79BB\u5F00\u6765\uFF0C\u907F\u514D\u8BFB\u53D6\u5230\u4E0D\u5B8C\u6574\u7684Bean</span>
	<span class="token comment">// \u5047\u5982\u8BF4\uFF0C\u6211\u4EEC\u5728\u521B\u5EFAbean\u7684\u65F6\u5019\u662F\u591A\u7EBF\u7A0B\uFF0C\u5F53\u4E00\u4E2A\u7EBF\u7A0B\u521B\u5EFABean A\u7684\u65F6\u5019\uFF0C\u5C06A\u5B9E\u4F8B\u653E\u5165\u5230\u4E00\u7EA7\u7F13\u5B58\u4E2D\uFF0C\u53E6\u5916\u4E00\u4E2A\u7EBF\u7A0BgetBean(A)\u7684\u65F6\u5019\uFF0C\u8FD9\u4E2A\u65F6\u5019A\u662F\u4E00\u4E2A\u4E0D\u5B8C\u6574\u7684Bean\uFF0C\u6240\u4EE5\u8BF4\u6211\u4EEC\u662F\u80AF\u5B9A\u8981\u6539\u8FDB\u7684</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> earlySingletonObjects <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// \u4E09\u7EA7\u7F13\u5B58</span>
	<span class="token comment">//</span>

	<span class="token doc-comment comment">/**
	 * \u83B7\u53D6Bean
	 *
	 * <span class="token keyword">@param</span> <span class="token parameter">beanName</span>
	 * <span class="token keyword">@return</span>
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Object</span> <span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>

		<span class="token comment">// \u5224\u5B9A\u52A0\u4E00\u4E2A\u51FA\u53E3\uFF0C\u9632\u6B62\u5FAA\u73AF\u4F9D\u8D56</span>
		<span class="token keyword">final</span> <span class="token class-name">Object</span> singleton <span class="token operator">=</span> <span class="token function">getSingleton</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>singleton <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> singleton<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token comment">// \u5B9E\u4F8B\u5316</span>
		<span class="token keyword">final</span> <span class="token class-name">RootBeanDefinition</span> beanDefinition <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">RootBeanDefinition</span><span class="token punctuation">)</span> beanDefinitionMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">final</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> beanClass <span class="token operator">=</span> beanDefinition<span class="token punctuation">.</span><span class="token function">getBeanClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Object</span> instanceBean <span class="token operator">=</span> beanClass<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u901A\u8FC7\u65E0\u53C2\u6784\u9020\u51FD\u6570</span>

		<span class="token comment">// \u6DFB\u52A0\u5230\u4E8C\u7EA7\u7F13\u5B58</span>
		earlySingletonObjects<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> instanceBean<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">// \u521B\u5EFA\u52A8\u6001\u4EE3\u7406\uFF08\u8026\u5408\u3001BeanPostProcessor\uFF09</span>
		<span class="token comment">// spring\u8FD8\u662F\u5E0C\u671B\u6B63\u5E38\u7684Bean \u8FD8\u662F\u5728\u521D\u59CB\u5316\u540E\u521B\u5EFA</span>
		<span class="token comment">// \u53EA\u5728\u5FAA\u73AF\u4F9D\u8D56\u7684\u60C5\u51B5\u4E0B\u5728\u5B9E\u4F8B\u5316\u540E\u521B\u5EFA</span>
		<span class="token comment">// \u6240\u4EE5\u6211\u4EEC\u9700\u8981\u5224\u65AD\u5F53\u524D\u662F\u4E0D\u662F\u5FAA\u73AF\u4F9D\u8D56</span>
		<span class="token comment">//instanceBean = new JdkProxyBeanPostProcessor().getEarlyBeanReference(instanceBean, beanName);</span>

		<span class="token comment">// \u6DFB\u52A0\u5230\u4E8C\u7EA7\u7F13\u5B58</span>
		earlySingletonObjects<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> instanceBean<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">// \u5C5E\u6027\u8D4B\u503C</span>
		<span class="token keyword">final</span> <span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span> declaredFields <span class="token operator">=</span> beanClass<span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Field</span> declaredField <span class="token operator">:</span> declaredFields<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">final</span> <span class="token class-name">Autowired</span> annotation <span class="token operator">=</span> declaredField<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">Autowired</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>annotation <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// \u8BF4\u660E\u5C5E\u6027\u4E0A\u9762\u6709Autowired\u6CE8\u89E3</span>
				declaredField<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u6253\u5F00\u5C5E\u6027\u7684\u8BBF\u95EE\u6743\u9650</span>
				<span class="token comment">// \u9700\u8981\u5148\u521B\u5EFA\u51FAAutowired\u4F9D\u8D56\u7684\u5BF9\u8C61</span>
				<span class="token comment">// byname bytype byconstrator\u4E09\u79CD\u65B9\u5F0F</span>
				<span class="token comment">// \u8FD9\u91CC\u5199\u7B80\u5355\u4E00\u70B9\uFF0C\u901A\u8FC7byname\u7684\u65B9\u5F0F</span>
				<span class="token keyword">final</span> <span class="token class-name">String</span> name <span class="token operator">=</span> declaredField<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">final</span> <span class="token class-name">Object</span> fieldObject <span class="token operator">=</span> <span class="token function">getBean</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u62FF\u5230B\u7684Bean</span>
				declaredField<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>instanceBean<span class="token punctuation">,</span> fieldObject<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>

		<span class="token comment">// \u521D\u59CB\u5316</span>
		<span class="token comment">// \u5224\u65AD\u5F53\u524D\u7684Bean\u6709\u6CA1\u6709\u5B9E\u73B0\u521D\u59CB\u5316\u7684\u63A5\u53E3\uFF0C\u8FD9\u91CC\u5173\u6CE8\u7684\u662F\u5FAA\u73AF\u4F9D\u8D56\uFF0C\u5C31\u4E0D\u5199\u4E86</span>

		<span class="token comment">// \u5230\u8FD9\u91CC\u5DF2\u7ECF\u521B\u5EFA\u5B8C\u6210\u4E86</span>
		<span class="token comment">// \u6B63\u5E38\u60C5\u51B5\u4E0B\uFF0C\u662F\u5728\u521D\u59CB\u5316\u4E4B\u540E\u521B\u5EFA\u52A8\u6001\u4EE3\u7406</span>

		<span class="token comment">// \u6DFB\u52A0\u5230\u4E00\u7EA7\u7F13\u5B58\uFF08\u5355\u4F8B\u6C60\uFF09</span>
		singletonObjects<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> instanceBean<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">return</span> instanceBean<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Object</span> <span class="token function">getSingleton</span><span class="token punctuation">(</span><span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u5148\u4ECE\u4E00\u7EA7\u7F13\u5B58\u4E2D\u62FF</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>singletonObjects<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span>
			<span class="token keyword">return</span> singletonObjects<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">// \u518D\u53BB\u4E8C\u7EA7\u7F13\u5B58\u4E2D\u62FF</span>
		<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>earlySingletonObjects<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// \u5982\u679C\u8FDB\u5165\u8FD9\u4E2A\u5224\u5B9A\uFF0C\u8868\u793A\u4E00\u7EA7\u7F13\u5B58\u4E2D\u6CA1\u6709\uFF0C\u4E8C\u7EA7\u7F13\u5B58\u4E2D\u6709\uFF0C\u8868\u793A\u51FA\u73B0\u4E86\u4F9D\u8D56\uFF0C</span>
			<span class="token comment">// \u4E5F\u5C31\u662F\u5728\u6267\u884CgetBean\u7684\u8FC7\u7A0B\uFF0C\u4ECE\u5934\u5230\u5C3E\u51FA\u73B0\u4E86\u4E2D\u65AD\u5BFC\u81F4bean\u6CA1\u6709\u5B58\u5230\u4E00\u7EA7\u7F13\u5B58\u4E2D</span>
			<span class="token comment">// \u5C31\u8BF4\u660E\u662F\u5FAA\u73AF\u4F9D\u8D56</span>
			<span class="token keyword">final</span> <span class="token class-name">Object</span> o <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JdkProxyBeanPostProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEarlyBeanReference</span><span class="token punctuation">(</span>earlySingletonObjects<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
			earlySingletonObjects<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> o<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">return</span> o<span class="token punctuation">;</span>
			<span class="token comment">//return earlySingletonObjects.get(beanName);</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u65E2\u7136\u4E0A\u9762\u53EF\u4EE5\u89E3\u51B3AOP\u95EE\u9898\uFF0C\u4E3A\u4EC0\u4E48\u8FD8\u9700\u8981\u4E09\u7EA7\u7F13\u5B58\u5462\uFF1F</span>
\u5F53\u6211\u4EEC\u4F7F\u7528\u540E\u7F6E\u5904\u7406\u5668\u521B\u5EFA\u52A8\u6001\u4EE3\u7406\u7684\u65F6\u5019\uFF0C\u5982\u679C\u8BF4\u5728getBean\u7684\u65F6\u5019\u8C03\u7528\u540E\u7F6E\u5904\u7406\u5668\uFF0C\u662F\u5426\u89C9\u5F97\u4E0D\u662F\u5F88\u5408\u7406\uFF0C\u540E\u7F6E\u5904\u7406\u5668\u5E94\u8BE5\u662F\u5728\u521B\u5EFABean\u7684\u8FC7\u7A0B\u4E2D\u589E\u5F3ABean\u7684
private static Object getSingleton(String beanName) {
  // \u5148\u4ECE\u4E00\u7EA7\u7F13\u5B58\u4E2D\u62FF
  if (singletonObjects.containsKey(beanName))
  	return singletonObjects.get(beanName);
  // \u518D\u53BB\u4E8C\u7EA7\u7F13\u5B58\u4E2D\u62FF
  else if (earlySingletonObjects.containsKey(beanName)) {
    // \u5982\u679C\u8FDB\u5165\u8FD9\u4E2A\u5224\u5B9A\uFF0C\u8868\u793A\u4E00\u7EA7\u7F13\u5B58\u4E2D\u6CA1\u6709\uFF0C\u4E8C\u7EA7\u7F13\u5B58\u4E2D\u6709\uFF0C\u8868\u793A\u51FA\u73B0\u4E86\u4F9D\u8D56\uFF0C
    // \u4E5F\u5C31\u662F\u5728\u6267\u884CgetBean\u7684\u8FC7\u7A0B\uFF0C\u4ECE\u5934\u5230\u5C3E\u51FA\u73B0\u4E86\u4E2D\u65AD\u5BFC\u81F4bean\u6CA1\u6709\u5B58\u5230\u4E00\u7EA7\u7F13\u5B58\u4E2D
    // \u5C31\u8BF4\u660E\u662F\u5FAA\u73AF\u4F9D\u8D56
    final Object o = new JdkProxyBeanPostProcessor().getEarlyBeanReference(earlySingletonObjects.get(beanName), beanName);
    earlySingletonObjects.put(beanName, o);
    return o;
    //return earlySingletonObjects.get(beanName);
  }
  return null;
}
<span class="token blockquote punctuation">&gt;</span> \u4E5F\u5C31\u662F\u8BF4\uFF0C\u4E00\u4E2A\u65B9\u6CD5\u5C31\u5904\u7406\u4E00\u4E2A\u4E8B\u60C5\uFF0CgetSingleton\u53EA\u5904\u7406\u83B7\u53D6Bean\u5BF9\u8C61\u7684\u4E8B\uFF0C\u800C\u4E0D\u662F\u8C03\u7528\u540E\u7F6E\u5904\u7406\u5668\u6765\u589E\u5F3ABean
<span class="token title important"><span class="token punctuation">#</span> \u603B\u7ED3\uFF1A</span>
<span class="token list punctuation">-</span> \u5355\u4E00\u539F\u5219
<span class="token list punctuation">-</span> \u89E3\u8026

<span class="token title important"><span class="token punctuation">#</span> \u90A3\u4E48\u6211\u4EEC\u600E\u4E48\u5728getSingleton\u4E2D\u5224\u65AD\u7B26\u5408\u51FA\u73B0\u4F9D\u8D56\u7684\u60C5\u51B5\u7684\u65F6\u5019\u8C03\u7528getBean\u4E2D\u7684\`instanceBean = new JdkProxyBeanPostProcessor().getEarlyBeanReference(instanceBean, beanName);\`\u4EE3\u7801\u5462?</span>
\u8FD9\u4E2A\u65F6\u5019\u5C31\u53EF\u4EE5\u4F7F\u7528\u51FD\u6570\u63A5\u53E3\u56DE\u8C03\u4E86\uFF0C\u4E09\u7EA7\u7F13\u5B58\u5C31\u662F\u4E3A\u4E86\u4FDD\u5B58\u8FD9\u4E2A\u51FD\u6570\u63A5\u53E3\u7684
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JdkProxyBeanPostProcessor</span> <span class="token keyword">implements</span> <span class="token class-name">SmartInstantiationAwareBeanPostProcessor</span> <span class="token punctuation">{</span>

	<span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">getEarlyBeanReference</span><span class="token punctuation">(</span><span class="token class-name">Object</span> bean<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>

		<span class="token comment">// \u5047\u8BBEB \u88AB\u5207\u70B9\u547D\u4E2D \u9700\u8981\u521B\u5EFA\u4EE3\u7406</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>bean <span class="token keyword">instanceof</span> <span class="token class-name">InstanceA</span><span class="token comment">/*\u5224\u65AD\u662F\u4E0D\u662F\u88AB\u589E\u5F3A\u7684\u7C7B\uFF0C\u662F\u4E0D\u662F\u9700\u8981\u521B\u5EFA\u52A8\u6001\u4EE3\u7406*/</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">JdkDynimcProxy</span> jdkDynimcProxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JdkDynimcProxy</span><span class="token punctuation">(</span>bean<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">return</span>  jdkDynimcProxy<span class="token punctuation">.</span><span class="token function">getProxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> bean<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyMainStart</span> <span class="token punctuation">{</span>
	<span class="token comment">// beanDefinition\u96C6\u5408</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">BeanDefinition</span><span class="token punctuation">&gt;</span></span> beanDefinitionMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">loadBeanDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">final</span> <span class="token class-name">RootBeanDefinition</span> beanDefinition <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RootBeanDefinition</span><span class="token punctuation">(</span><span class="token class-name">InstanceA</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">final</span> <span class="token class-name">RootBeanDefinition</span> beanDefinition1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RootBeanDefinition</span><span class="token punctuation">(</span><span class="token class-name">InstanceB</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		beanDefinitionMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;instanceA&quot;</span><span class="token punctuation">,</span> beanDefinition<span class="token punctuation">)</span><span class="token punctuation">;</span>
		beanDefinitionMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;instanceB&quot;</span><span class="token punctuation">,</span> beanDefinition1<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u52A0\u8F7D\u4E86BeanDefinition</span>
		<span class="token function">loadBeanDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">//\u6CE8\u518Cbean\u7684\u540E\u7F6E\u5904\u7406\u5668</span>
		<span class="token comment">// ...</span>

		<span class="token comment">// \u5FAA\u73AF\u521B\u5EFABean</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> beanName <span class="token operator">:</span> beanDefinitionMap<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token function">getBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">final</span> <span class="token class-name">InstanceA</span> instanceA <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">InstanceA</span><span class="token punctuation">)</span> <span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">&quot;instanceA&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		instanceA<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// \u4E00\u7EA7\u7F13\u5B58\uFF08\u5355\u4F8B\u6C60\uFF09</span>
	<span class="token comment">// \u5B8C\u6574\u7684Bean</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> singletonObjects <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// \u4E8C\u7EA7\u7F13\u5B58\uFF0C\u89E3\u51B3\u591A\u7EBF\u7A0B\u95EE\u9898</span>
	<span class="token comment">// \u4E3A\u4E86\u5C06\u6210\u719FBean\u548C\u7EAF\u51C0Bean\u5206\u79BB\u5F00\u6765\uFF0C\u907F\u514D\u8BFB\u53D6\u5230\u4E0D\u5B8C\u6574\u7684Bean</span>
	<span class="token comment">// \u5047\u5982\u8BF4\uFF0C\u6211\u4EEC\u5728\u521B\u5EFAbean\u7684\u65F6\u5019\u662F\u591A\u7EBF\u7A0B\uFF0C\u5F53\u4E00\u4E2A\u7EBF\u7A0B\u521B\u5EFABean A\u7684\u65F6\u5019\uFF0C\u5C06A\u5B9E\u4F8B\u653E\u5165\u5230\u4E00\u7EA7\u7F13\u5B58\u4E2D\uFF0C\u53E6\u5916\u4E00\u4E2A\u7EBF\u7A0BgetBean(A)\u7684\u65F6\u5019\uFF0C\u8FD9\u4E2A\u65F6\u5019A\u662F\u4E00\u4E2A\u4E0D\u5B8C\u6574\u7684Bean\uFF0C\u6240\u4EE5\u8BF4\u6211\u4EEC\u662F\u80AF\u5B9A\u8981\u6539\u8FDB\u7684</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> earlySingletonObjects <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// \u4E09\u7EA7\u7F13\u5B58</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">ObjectFactory</span><span class="token punctuation">&gt;</span></span> singletonFactories <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// \u5FAA\u73AF\u4F9D\u8D56\u7684\u6807\u8BC6</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> singletonsCurrentlyInCreation <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token doc-comment comment">/**
	 * \u83B7\u53D6Bean
	 *
	 * <span class="token keyword">@param</span> <span class="token parameter">beanName</span>
	 * <span class="token keyword">@return</span>
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Object</span> <span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>

		<span class="token comment">// \u5224\u5B9A\u52A0\u4E00\u4E2A\u51FA\u53E3\uFF0C\u9632\u6B62\u5FAA\u73AF\u4F9D\u8D56</span>
		<span class="token keyword">final</span> <span class="token class-name">Object</span> singleton <span class="token operator">=</span> <span class="token function">getSingleton</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>singleton <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> singleton<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token comment">// \u6807\u8BB0\u6B63\u5728\u521B\u5EFA</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>singletonsCurrentlyInCreation<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			singletonsCurrentlyInCreation<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token comment">// \u5B9E\u4F8B\u5316</span>
		<span class="token keyword">final</span> <span class="token class-name">RootBeanDefinition</span> beanDefinition <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">RootBeanDefinition</span><span class="token punctuation">)</span> beanDefinitionMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">final</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> beanClass <span class="token operator">=</span> beanDefinition<span class="token punctuation">.</span><span class="token function">getBeanClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Object</span> instanceBean <span class="token operator">=</span> beanClass<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u901A\u8FC7\u65E0\u53C2\u6784\u9020\u51FD\u6570</span>

		<span class="token comment">// \u6DFB\u52A0\u5230\u4E8C\u7EA7\u7F13\u5B58</span>
		<span class="token comment">// earlySingletonObjects.put(beanName, instanceBean);</span>

		<span class="token comment">// \u521B\u5EFA\u52A8\u6001\u4EE3\u7406\uFF08\u8026\u5408\u3001BeanPostProcessor\uFF09</span>
		<span class="token comment">// spring\u8FD8\u662F\u5E0C\u671B\u6B63\u5E38\u7684Bean \u8FD8\u662F\u5728\u521D\u59CB\u5316\u540E\u521B\u5EFA</span>
		<span class="token comment">// \u53EA\u5728\u5FAA\u73AF\u4F9D\u8D56\u7684\u60C5\u51B5\u4E0B\u5728\u5B9E\u4F8B\u5316\u540E\u521B\u5EFA</span>
		<span class="token comment">// \u6240\u4EE5\u6211\u4EEC\u9700\u8981\u5224\u65AD\u5F53\u524D\u662F\u4E0D\u662F\u5FAA\u73AF\u4F9D\u8D56</span>
		<span class="token comment">//Object o = new JdkProxyBeanPostProcessor().getEarlyBeanReference(instanceBean, beanName);</span>
		singletonFactories<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">JdkProxyBeanPostProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEarlyBeanReference</span><span class="token punctuation">(</span>earlySingletonObjects<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">// \u6DFB\u52A0\u5230\u4E8C\u7EA7\u7F13\u5B58</span>
		<span class="token comment">// \u5982\u679C\u4F7F\u7528\u4E86\u4E09\u7EA7\u7F13\u5B58\uFF0C\u5C31\u8868\u793A\u662FAOP\u4E86\uFF0C\u90A3\u4E48\u8FD9\u91CC\u5B58\u4E00\u4E2A\u4E8C\u7EA7\u7F13\u5B58\u7684\u8BDD\uFF0C\u90A3\u4E48\u5B8C\u5168\u6CA1\u6709\u610F\u4E49</span>
		<span class="token comment">// \u5982\u679C\u51FA\u73B0\u52A8\u6001\u4EE3\u7406\uFF0C\u90A3\u4E48\u4E8C\u7EA7\u7F13\u5B58\u4E2D\u5B58\u50A8\u5C31\u5E94\u8BE5\u662F\u52A8\u6001\u4EE3\u7406\u51FA\u6765\u7684bean\uFF0C\u800C\u4E0D\u662F\u539F\u6765\u7684bean</span>
		<span class="token comment">// \u90A3\u4E48\u600E\u4E48\u901A\u8FC7\u4E8C\u7EA7\u7F13\u5B58\u5224\u5B9A\u662F\u5426\u662F\u5FAA\u73AF\u4F9D\u8D56\u5462</span>
		<span class="token comment">//earlySingletonObjects.put(beanName, instanceBean);</span>

		<span class="token comment">// \u5C5E\u6027\u8D4B\u503C</span>
		<span class="token keyword">final</span> <span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span> declaredFields <span class="token operator">=</span> beanClass<span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Field</span> declaredField <span class="token operator">:</span> declaredFields<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">final</span> <span class="token class-name">Autowired</span> annotation <span class="token operator">=</span> declaredField<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">Autowired</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>annotation <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// \u8BF4\u660E\u5C5E\u6027\u4E0A\u9762\u6709Autowired\u6CE8\u89E3</span>
				declaredField<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u6253\u5F00\u5C5E\u6027\u7684\u8BBF\u95EE\u6743\u9650</span>
				<span class="token comment">// \u9700\u8981\u5148\u521B\u5EFA\u51FAAutowired\u4F9D\u8D56\u7684\u5BF9\u8C61</span>
				<span class="token comment">// byname bytype byconstrator\u4E09\u79CD\u65B9\u5F0F</span>
				<span class="token comment">// \u8FD9\u91CC\u5199\u7B80\u5355\u4E00\u70B9\uFF0C\u901A\u8FC7byname\u7684\u65B9\u5F0F</span>
				<span class="token keyword">final</span> <span class="token class-name">String</span> name <span class="token operator">=</span> declaredField<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">final</span> <span class="token class-name">Object</span> fieldObject <span class="token operator">=</span> <span class="token function">getBean</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u62FF\u5230B\u7684Bean</span>
				declaredField<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>instanceBean<span class="token punctuation">,</span> fieldObject<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>

		<span class="token comment">// \u521D\u59CB\u5316</span>
		<span class="token comment">// \u5224\u65AD\u5F53\u524D\u7684Bean\u6709\u6CA1\u6709\u5B9E\u73B0\u521D\u59CB\u5316\u7684\u63A5\u53E3\uFF0C\u8FD9\u91CC\u5173\u6CE8\u7684\u662F\u5FAA\u73AF\u4F9D\u8D56\uFF0C\u5C31\u4E0D\u5199\u4E86</span>

		<span class="token comment">// \u5230\u8FD9\u91CC\u5DF2\u7ECF\u521B\u5EFA\u5B8C\u6210\u4E86</span>
		<span class="token comment">// \u6B63\u5E38\u60C5\u51B5\u4E0B\uFF0C\u662F\u5728\u521D\u59CB\u5316\u4E4B\u540E\u521B\u5EFA\u52A8\u6001\u4EE3\u7406</span>

		<span class="token comment">// \u5047\u5982A\u81EA\u5DF1\u4E5F\u662FAOP\uFF0C\u90A3\u4E48\u4E5F\u9700\u8981\u52A8\u6001\u4EE3\u7406</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>earlySingletonObjects<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			instanceBean <span class="token operator">=</span> earlySingletonObjects<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token comment">// \u6DFB\u52A0\u5230\u4E00\u7EA7\u7F13\u5B58\uFF08\u5355\u4F8B\u6C60\uFF09</span>
		singletonObjects<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> instanceBean<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">// remove \u4E8C\u7EA7\u7F13\u5B58\u548C\u4E09\u7EA7\u7F13\u5B58</span>
		earlySingletonObjects<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		singletonFactories<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">return</span> instanceBean<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Object</span> <span class="token function">getSingleton</span><span class="token punctuation">(</span><span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u5148\u4ECE\u4E00\u7EA7\u7F13\u5B58\u4E2D\u62FF</span>
		<span class="token keyword">final</span> <span class="token class-name">Object</span> bean <span class="token operator">=</span> singletonObjects<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// \u8BF4\u660E\u662F\u5FAA\u73AF\u4F9D\u8D56</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>bean <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> singletonsCurrentlyInCreation<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// \u5982\u679C\u4E8C\u7EA7\u7F13\u5B58\u4E2D\u5B58\u5728\uFF0C\u5148\u4ECE\u4E8C\u7EA7\u7F13\u5B58\u4E2D\u62FF</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>earlySingletonObjects<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">return</span> earlySingletonObjects<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>

			<span class="token comment">// \u4ECE\u4E09\u7EA7\u7F13\u5B58\u4E2D\u62FF</span>
			<span class="token keyword">final</span> <span class="token class-name">ObjectFactory</span> factory <span class="token operator">=</span> singletonFactories<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>factory <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">final</span> <span class="token class-name">Object</span> o <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">getObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				earlySingletonObjects<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> o<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">return</span> o<span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">return</span> bean<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u65F6\u5019\u6211\u4EEC\u5C31\u53EF\u4EE5\u6765\u770B\u4E00\u4E0Bspring\u662F\u5982\u4F55\u89E3\u51B3\u5FAA\u73AF\u4F9D\u8D56\u7684\uFF0C\u5728refresh\u7684finishBeanFactoryInitialization\u51FD\u6570\u8C03\u7528</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">preInstantiateSingletons</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Pre-instantiating singletons in &quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">//\u83B7\u53D6\u6211\u4EEC\u5BB9\u5668\u4E2D\u6240\u6709bean\u5B9A\u4E49\u7684\u540D\u79F0</span>
  <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> beanNames <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>beanDefinitionNames<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">//\u5FAA\u73AF\u6211\u4EEC\u6240\u6709\u7684bean\u5B9A\u4E49\u540D\u79F0</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> beanName <span class="token operator">:</span> beanNames<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u5408\u5E76\u6211\u4EEC\u7684bean\u5B9A\u4E49\uFF0C\u8F6C\u6362\u4E3A\u7EDF\u4E00\u7684RootBeanDefinition\u7C7B\u578B(\u5728)\uFF0C \u65B9\u4FBF\u540E\u7EED\u5904\u7406</span>
    <span class="token class-name">RootBeanDefinition</span> bd <span class="token operator">=</span> <span class="token function">getMergedLocalBeanDefinition</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
			 * \u6839\u636Ebean\u5B9A\u4E49\u5224\u65AD\u662F\u4E0D\u662F\u62BD\u8C61\u7684&amp;&amp; \u4E0D\u662F\u5355\u4F8B\u7684 &amp;&amp;\u4E0D\u662F\u61D2\u52A0\u8F7D\u7684
			 */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>bd<span class="token punctuation">.</span><span class="token function">isAbstract</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> bd<span class="token punctuation">.</span><span class="token function">isSingleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>bd<span class="token punctuation">.</span><span class="token function">isLazyInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//\u662F\u4E0D\u662F\u5DE5\u5382bean</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFactoryBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u662FfactoryBean\u4F1A\u5148\u751F\u6210\u5B9E\u9645\u7684bean  &amp;beanName \u662F\u7528\u6765\u83B7\u53D6\u5B9E\u9645bean\u7684</span>
        <span class="token class-name">Object</span> bean <span class="token operator">=</span> <span class="token function">getBean</span><span class="token punctuation">(</span>FACTORY_BEAN_PREFIX <span class="token operator">+</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>bean <span class="token keyword">instanceof</span> <span class="token class-name">FactoryBean</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">final</span> <span class="token class-name">FactoryBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> factory <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">FactoryBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> bean<span class="token punctuation">;</span>
          <span class="token keyword">boolean</span> isEagerInit<span class="token punctuation">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> factory <span class="token keyword">instanceof</span> <span class="token class-name">SmartFactoryBean</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            isEagerInit <span class="token operator">=</span> <span class="token class-name">AccessController</span><span class="token punctuation">.</span><span class="token function">doPrivileged</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">PrivilegedAction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>
                                                        <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">SmartFactoryBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> factory<span class="token punctuation">)</span><span class="token operator">::</span><span class="token function">isEagerInit</span><span class="token punctuation">,</span>
                                                        <span class="token function">getAccessControlContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">else</span> <span class="token punctuation">{</span>
            isEagerInit <span class="token operator">=</span> <span class="token punctuation">(</span>factory <span class="token keyword">instanceof</span> <span class="token class-name">SmartFactoryBean</span> <span class="token operator">&amp;&amp;</span>
                           <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">SmartFactoryBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> factory<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEagerInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token comment">//\u8C03\u7528\u771F\u6B63\u7684getBean\u7684\u6D41\u7A0B</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>isEagerInit<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">getBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token comment">//\u975E\u5DE5\u5382Bean \u5C31\u662F\u666E\u901A\u7684bean</span>
        <span class="token function">getBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">//\u6216\u6709\u7684bean\u7684\u540D\u79F0 ...........\u5230\u8FD9\u91CC\u6240\u6709\u7684\u5355\u5B9E\u4F8B\u7684bean\u5DF2\u7ECF\u8BB0\u8F7D\u5230\u5355\u5B9E\u4F8Bbean\u5230\u7F13\u5B58\u4E2D</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> beanName <span class="token operator">:</span> beanNames<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u4ECE\u5355\u4F8B\u7F13\u5B58\u6C60\u4E2D\u83B7\u53D6\u6240\u6709\u7684\u5BF9\u8C61</span>
    <span class="token class-name">Object</span> singletonInstance <span class="token operator">=</span> <span class="token function">getSingleton</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u5224\u65AD\u5F53\u524D\u7684bean\u662F\u5426\u5B9E\u73B0\u4E86SmartInitializingSingleton\u63A5\u53E3</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>singletonInstance <span class="token keyword">instanceof</span> <span class="token class-name">SmartInitializingSingleton</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">final</span> <span class="token class-name">SmartInitializingSingleton</span> smartSingleton <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">SmartInitializingSingleton</span><span class="token punctuation">)</span> singletonInstance<span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">AccessController</span><span class="token punctuation">.</span><span class="token function">doPrivileged</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">PrivilegedAction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
          smartSingleton<span class="token punctuation">.</span><span class="token function">afterSingletonsInstantiated</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token function">getAccessControlContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u89E6\u53D1\u5B9E\u4F8B\u5316\u4E4B\u540E\u7684\u65B9\u6CD5afterSingletonsInstantiated</span>
        smartSingleton<span class="token punctuation">.</span><span class="token function">afterSingletonsInstantiated</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u4E3A\u4EC0\u4E48\u4E09\u7EA7\u7F13\u5B58\uFF1F</span>
\u4E09\u7EA7\u7F13\u5B58\u5B58\u50A8\u7684\u63A5\u53E3\u51FD\u6570\uFF0C\u7ED9\u56DE\u8C03\u4F7F\u7528\uFF0C\u4E3A\u4E86\u89E3\u8026\uFF0C\u548C\u5355\u4E00\u804C\u8D23\u7684\u4F53\u73B0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>MainStart\u6D4B\u8BD5\u7C7B\uFF0C\u662F\u6559\u7A0B\u63D0\u4F9B\u7684\u4EE3\u7801</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainStart</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>

        <span class="token comment">// \u5DF2\u7ECF\u52A0\u8F7D\u5FAA\u73AF\u4F9D\u8D56</span>
        <span class="token class-name">String</span> beanName<span class="token operator">=</span><span class="token string">&quot;com.tuling.circulardependencies.InstanceA&quot;</span><span class="token punctuation">;</span>

        <span class="token function">getBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//ApplicationContext \u5DF2\u7ECF\u52A0\u8F7Dspring\u5BB9\u5668</span>

        <span class="token class-name">InstanceA</span> a<span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">InstanceA</span><span class="token punctuation">)</span> <span class="token function">getBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>

        a<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token comment">// \u4E00\u7EA7\u7F13\u5B58 \u5355\u4F8B\u6C60   \u6210\u719F\u6001Bean</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> singletonObjects <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u4E8C\u7EA7\u7F13\u5B58   \u7EAF\u51C0\u6001Bean (\u5B58\u50A8\u4E0D\u5B8C\u6574\u7684Bean\u7528\u4E8E\u89E3\u51B3\u5FAA\u73AF\u4F9D\u8D56\u4E2D\u591A\u7EBF\u7A0B\u8BFB\u53D6\u4E00\u7EA7\u7F13\u5B58\u7684\u810F\u6570\u636E)</span>
    <span class="token comment">// \u6240\u4EE5\u5F53\u6709\u4E86\u4E09\u7EA7\u7F13\u5B58\u540E\uFF0C\u5B83\u8FD8\u4E00\u5B9A\u8981\u5B58\u5728\uFF0C  \u56E0\u4E3A\u5B83\u8981\u5B58\u50A8\u7684 aop\u521B\u5EFA\u7684\u52A8\u6001\u4EE3\u7406\u5BF9\u8C61,  \u4E0D\u53EF\u80FD\u91CD\u590D\u521B\u5EFA</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> earlySingletonObjects <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u4E09\u7EA7\u7F13\u5B58</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">ObjectFactory</span><span class="token punctuation">&gt;</span></span> factoryEarlySingletonObjects <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token comment">// \u6807\u8BC6\u5F53\u524D\u662F\u4E0D\u662F\u5FAA\u73AF\u4F9D\u8D56   \u5982\u679C\u6B63\u5728\u521B\u5EFA\u5E76\u4E14\u4ECE\u4E00\u7EA7\u7F13\u5B58\u4E2D\u6CA1\u6709\u62FF\u5230\u662F\u4E0D\u662F\u8BF4\u660E\u662F\u4F9D\u8D56</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> singletonsCurrentlyInCreation <span class="token operator">=</span>
            <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">newSetFromMap</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * \u521B\u5EFABean
     * <span class="token keyword">@param</span> <span class="token parameter">beanName</span>
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Object</span> <span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>

        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> beanClass <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token class-name">Object</span> bean<span class="token operator">=</span><span class="token function">getSingleton</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span><span class="token punctuation">(</span>bean<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> bean<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>


        <span class="token comment">// \u5F00\u59CB\u521B\u5EFABean</span>

        singletonsCurrentlyInCreation<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 1.\u5B9E\u4F8B\u5316</span>
        <span class="token class-name">Object</span> beanInstanc <span class="token operator">=</span> beanClass<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">ObjectFactory</span> factory<span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">JdkProxyBeanPostProcessor</span> beanPostProcessor<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">JdkProxyBeanPostProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> beanPostProcessor<span class="token punctuation">.</span><span class="token function">getEarlyBeanReference</span><span class="token punctuation">(</span>bean<span class="token punctuation">,</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        factoryEarlySingletonObjects<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span>factory<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//  \u53EA\u662F\u5FAA\u73AF\u4F9D\u8D56\u624D\u521B\u5EFA\u52A8\u6001\u4EE3\u7406\uFF1F   //\u521B\u5EFA\u52A8\u6001\u4EE3\u7406</span>

        <span class="token comment">// Spring \u4E3A\u4E86\u89E3\u51B3 aop\u4E0B\u9762\u5FAA\u73AF\u4F9D\u8D56\u4F1A\u5728\u8FD9\u4E2A\u5730\u65B9\u521B\u5EFA\u52A8\u6001\u4EE3\u7406 Proxy.newProxyInstance</span>
        <span class="token comment">// Spring \u662F\u4E0D\u4F1A\u5C06aop\u7684\u4EE3\u7801\u8DDFioc\u5199\u5728\u4E00\u8D77</span>
        <span class="token comment">// \u4E0D\u80FD\u76F4\u63A5\u5C06Proxy\u5B58\u5165\u4E8C\u7EA7\u7F13\u5B58\u4E2D</span>
        <span class="token comment">// \u662F\u4E0D\u662F\u6240\u6709\u7684Bean\u90FD\u5B58\u5728\u5FAA\u73AF\u4F9D\u8D56  \u5F53\u5B58\u5728\u5FAA\u73AF\u4F9D\u8D56\u624D\u53BB\u8C03\u7528aop\u7684\u540E\u7F6E\u5904\u7406\u5668\u521B\u5EFA\u52A8\u6001\u4EE3\u7406</span>

        <span class="token comment">// \u5B58\u5165\u4E8C\u7EA7\u7F13\u5B58</span>
       <span class="token comment">// earlySingletonObjects.put(beanName,beanInstanc);</span>

        <span class="token comment">// 2.\u5C5E\u6027\u8D4B\u503C \u89E3\u6790Autowired</span>
        <span class="token comment">// \u62FF\u5230\u6240\u6709\u7684\u5C5E\u6027\u540D</span>
        <span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span> declaredFields <span class="token operator">=</span> beanClass<span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token comment">// \u5FAA\u73AF\u6240\u6709\u5C5E\u6027</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Field</span> declaredField <span class="token operator">:</span> declaredFields<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u4ECE\u5C5E\u6027\u4E0A\u62FF\u5230@Autowired</span>
            <span class="token class-name">Autowired</span> annotation <span class="token operator">=</span> declaredField<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">Autowired</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// \u8BF4\u660E\u5C5E\u6027\u4E0A\u9762\u6709@Autowired</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>annotation<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> type <span class="token operator">=</span> declaredField<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token comment">//com.tuling.circulardependencies.InstanceB</span>
                <span class="token function">getBean</span><span class="token punctuation">(</span>type<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

        <span class="token punctuation">}</span>


        <span class="token comment">// 3.\u521D\u59CB\u5316 (\u7701\u7565\uFF09</span>
        <span class="token comment">// \u521B\u5EFA\u52A8\u6001\u4EE3\u7406</span>

        <span class="token comment">// \u5B58\u5165\u5230\u4E00\u7EA7\u7F13\u5B58</span>
        singletonObjects<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span>beanInstanc<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> beanInstanc<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span>  <span class="token keyword">static</span> <span class="token class-name">Object</span> <span class="token function">getSingleton</span><span class="token punctuation">(</span><span class="token class-name">String</span> beanName<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">Object</span> bean <span class="token operator">=</span> singletonObjects<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u5982\u679C\u4E00\u7EA7\u7F13\u5B58\u6CA1\u6709\u62FF\u5230  \u662F\u4E0D\u662F\u5C31\u8BF4\u660E\u5F53\u524D\u662F\u5FAA\u73AF\u4F9D\u8D56\u521B\u5EFA</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>bean<span class="token operator">==</span><span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> singletonsCurrentlyInCreation<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
              <span class="token comment">// \u8C03\u7528bean\u7684\u540E\u7F6E\u5904\u7406\u5668\u521B\u5EFA\u52A8\u6001\u4EE3\u7406</span>


            bean<span class="token operator">=</span>earlySingletonObjects<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>bean<span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token class-name">ObjectFactory</span> factory <span class="token operator">=</span> factoryEarlySingletonObjects<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
                factory<span class="token punctuation">.</span><span class="token function">getObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token punctuation">}</span>

        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> bean<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span>  <span class="token keyword">static</span>  <span class="token class-name">Object</span> <span class="token function">getEarlyBeanReference</span><span class="token punctuation">(</span><span class="token class-name">String</span> beanName<span class="token punctuation">,</span> <span class="token class-name">Object</span> bean<span class="token punctuation">)</span><span class="token punctuation">{</span>

        <span class="token class-name">JdkProxyBeanPostProcessor</span> beanPostProcessor<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">JdkProxyBeanPostProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token keyword">return</span> beanPostProcessor<span class="token punctuation">.</span><span class="token function">getEarlyBeanReference</span><span class="token punctuation">(</span>bean<span class="token punctuation">,</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>spring\u6709\u6CA1\u6709\u89E3\u51B3\u6784\u9020\u51FD\u6570\u7684\u5FAA\u73AF\u4F9D\u8D56\uFF1F</strong></p><p>\u6CA1\u6709\uFF0C\u6784\u9020\u51FD\u6570\u5728\u6211\u4EEC\u7684\u5B9E\u4F8B\u5316\u7684\u8FC7\u7A0B\u4E2D\uFF0C<code>Object beanInstanc = beanClass.newInstance();</code>\uFF0C\u5047\u5982\u662F\u5B58\u5728\u6784\u9020\u51FD\u6570\u7684\u4F9D\u8D56\uFF0C\u90A3\u4E48spring\u662F\u4F1A\u62A5\u9519\u7684</p></blockquote><blockquote><p><strong>spring\u6709\u6CA1\u6709\u89E3\u51B3\u591A\u4F8B\u4E0B\u7684\u5FAA\u73AF\u4F9D\u8D56\uFF1F</strong></p><p>\u591A\u4F8B\u6839\u5355\u4F8B\u521B\u5EFA\u7684\u533A\u522B\u662F\uFF1A\u591A\u4F8B\u521B\u5EFA\u662F\u4E0D\u5B58\u5230\u7F13\u5B58\u4E2D\u7684</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 	* spring \u53EA\u80FD\u89E3\u51B3\u5355\u4F8B\u5BF9\u8C61\u7684setter \u6CE8\u5165\u7684\u5FAA\u73AF\u4F9D\u8D56,\u4E0D\u80FD\u89E3\u51B3\u6784\u9020\u5668\u6CE8\u5165
 	*/</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isPrototypeCurrentlyInCreation</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanCurrentlyInCreationException</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><h3 id="endgame"><a class="header-anchor" href="#endgame" aria-hidden="true">#</a> EndGame</h3><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u8BFE\u7A0B\u5185\u5BB9</span>
<span class="token list punctuation">1.</span> spring\u8BFB\u53D6\u4E0D\u5B8C\u6574Bean\u7684\u6700\u7EC8\u89E3\u51B3\u539F\u7406
<span class="token list punctuation">2.</span> \u76D1\u542C\u5668\u539F\u7406\u5B66\u4E60-Listener
<span class="token list punctuation">3.</span> \u5185\u7F6EBean\u7684\u540E\u7F6E\u5904\u7406\u5668
<span class="token list punctuation">4.</span> BeanDefinition\u7684\u4E00\u4E9B\u73A9\u6CD5
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u89E3\u51B3\u5FAA\u73AF\u4F9D\u8D56\u5C31\u662F\u4F7F\u7528\u4E09\u7EA7\u7F13\u5B58\uFF0C\u4E00\u7EA7\u7F13\u5B58\u5C31\u662F\u5B58\u50A8\u5B8C\u6574\u7684Bean\uFF0C\u4E8C\u7EA7\u7F13\u5B58\u7528\u6765\u5B58\u50A8\u65E9\u671F\u7684Bean\uFF0C\u4E5F\u5C31\u662F\u7EAF\u51C0\u7684Bean\uFF0C\u6CA1\u6709\u5B58\u5165\u5F15\u7528Bean\u7684Bean\uFF0C\u4E09\u7EA7\u7F13\u5B58\u5B58\u50A8\u7684\u51FD\u6570\u63A5\u53E3\uFF0C\u4E3B\u8981\u662F\u4E3A\u4E86\u89E3\u8026</p><p>\u4E8C\u7EA7\u7F13\u5B58+\u4E09\u7EA7\u7F13\u5B58\u89E3\u51B3\u4E86AOP\u7684\u52A8\u6001\u4EE3\u7406\u7684\u95EE\u9898</p><p><strong>spring\u8BFB\u53D6\u4E0D\u5B8C\u6574Bean\u7684\u6700\u7EC8\u89E3\u51B3\u539F\u7406</strong></p><p>\u5047\u5982\u8BF4spring\u5BB9\u5668\u5B8C\u5168\u521B\u5EFA\u5B8C\u4E4B\u540E\uFF0C\u901A\u8FC7getBean\u83B7\u53D6\u5230\u7684Bean\u90A3\u4E48\u90FD\u662F\u5B8C\u6574\u7684Bean</p><p>\u5047\u5982spring\u6B63\u5728\u521B\u5EFABean\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u591A\u7EBF\u7A0B\u8FDB\u6765\u8FDB\u884CgetBean\uFF0C\u6240\u51FA\u73B0\u7684\u4E0D\u5B8C\u6574\u7684Bean\uFF0C\u4E0A\u9762\u867D\u7136\u8BF4\u53EF\u4EE5\u4F7F\u7528\u4E8C\u7EA7\u7F13\u5B58\u6765\u89E3\u51B3\u591A\u7EBF\u7A0B\u83B7\u53D6Bean\u4E0D\u5B8C\u6574Bean\u7684\u95EE\u9898\uFF0C\u5176\u5B9E\u8FD8\u662F\u6709\u95EE\u9898</p><p><img src="`+T+`" alt="image-20220218225501087"></p><p>\u8981\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\uFF0C\u5176\u5B9E\u5F88\u7B80\u5355\uFF0C\u53EA\u8981\u4E24\u4E2A\u9501\u5C31\u53EF\u4EE5\u4E86</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyMainStart</span> <span class="token punctuation">{</span>
	<span class="token comment">// beanDefinition\u96C6\u5408</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">BeanDefinition</span><span class="token punctuation">&gt;</span></span> beanDefinitionMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">loadBeanDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">final</span> <span class="token class-name">RootBeanDefinition</span> beanDefinition <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RootBeanDefinition</span><span class="token punctuation">(</span><span class="token class-name">InstanceA</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">final</span> <span class="token class-name">RootBeanDefinition</span> beanDefinition1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RootBeanDefinition</span><span class="token punctuation">(</span><span class="token class-name">InstanceB</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		beanDefinitionMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;instanceA&quot;</span><span class="token punctuation">,</span> beanDefinition<span class="token punctuation">)</span><span class="token punctuation">;</span>
		beanDefinitionMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;instanceB&quot;</span><span class="token punctuation">,</span> beanDefinition1<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u52A0\u8F7D\u4E86BeanDefinition</span>
		<span class="token function">loadBeanDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">//\u6CE8\u518Cbean\u7684\u540E\u7F6E\u5904\u7406\u5668</span>
		<span class="token comment">// ...</span>

		<span class="token comment">// \u5FAA\u73AF\u521B\u5EFABean</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> beanName <span class="token operator">:</span> beanDefinitionMap<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token function">getBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">final</span> <span class="token class-name">InstanceA</span> instanceA <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">InstanceA</span><span class="token punctuation">)</span> <span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">&quot;instanceA&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		instanceA<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// \u4E00\u7EA7\u7F13\u5B58\uFF08\u5355\u4F8B\u6C60\uFF09</span>
	<span class="token comment">// \u5B8C\u6574\u7684Bean</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> singletonObjects <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// \u4E8C\u7EA7\u7F13\u5B58\uFF0C\u89E3\u51B3\u591A\u7EBF\u7A0B\u95EE\u9898</span>
	<span class="token comment">// \u4E3A\u4E86\u5C06\u6210\u719FBean\u548C\u7EAF\u51C0Bean\u5206\u79BB\u5F00\u6765\uFF0C\u907F\u514D\u8BFB\u53D6\u5230\u4E0D\u5B8C\u6574\u7684Bean</span>
	<span class="token comment">// \u5047\u5982\u8BF4\uFF0C\u6211\u4EEC\u5728\u521B\u5EFAbean\u7684\u65F6\u5019\u662F\u591A\u7EBF\u7A0B\uFF0C\u5F53\u4E00\u4E2A\u7EBF\u7A0B\u521B\u5EFABean A\u7684\u65F6\u5019\uFF0C\u5C06A\u5B9E\u4F8B\u653E\u5165\u5230\u4E00\u7EA7\u7F13\u5B58\u4E2D\uFF0C\u53E6\u5916\u4E00\u4E2A\u7EBF\u7A0BgetBean(A)\u7684\u65F6\u5019\uFF0C\u8FD9\u4E2A\u65F6\u5019A\u662F\u4E00\u4E2A\u4E0D\u5B8C\u6574\u7684Bean\uFF0C\u6240\u4EE5\u8BF4\u6211\u4EEC\u662F\u80AF\u5B9A\u8981\u6539\u8FDB\u7684</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> earlySingletonObjects <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// \u4E09\u7EA7\u7F13\u5B58</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">ObjectFactory</span><span class="token punctuation">&gt;</span></span> singletonFactories <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// \u5FAA\u73AF\u4F9D\u8D56\u7684\u6807\u8BC6</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> singletonsCurrentlyInCreation <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token doc-comment comment">/**
	 * \u83B7\u53D6Bean
	 *
	 * <span class="token keyword">@param</span> <span class="token parameter">beanName</span>
	 * <span class="token keyword">@return</span>
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Object</span> <span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>

		<span class="token comment">// \u5224\u5B9A\u52A0\u4E00\u4E2A\u51FA\u53E3\uFF0C\u9632\u6B62\u5FAA\u73AF\u4F9D\u8D56</span>
		<span class="token keyword">final</span> <span class="token class-name">Object</span> singleton <span class="token operator">=</span> <span class="token function">getSingleton</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>singleton <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> singleton<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token class-name">Object</span> instanceBean<span class="token punctuation">;</span>

		<span class="token comment">// \u5C06\u6574\u4E2Abean\u7684\u521B\u5EFA\u8FC7\u7A0B\u52A0\u4E00\u628A\u9501</span>
		<span class="token keyword">synchronized</span> <span class="token punctuation">(</span>earlySingletonObjects<span class="token punctuation">)</span> <span class="token punctuation">{</span>

			<span class="token keyword">if</span> <span class="token punctuation">(</span>singletonFactories<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">return</span> singletonObjects<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>

			<span class="token comment">// \u6807\u8BB0\u6B63\u5728\u521B\u5EFA</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>singletonsCurrentlyInCreation<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				singletonsCurrentlyInCreation<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>

			<span class="token comment">// \u5B9E\u4F8B\u5316</span>
			<span class="token keyword">final</span> <span class="token class-name">RootBeanDefinition</span> beanDefinition <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">RootBeanDefinition</span><span class="token punctuation">)</span> beanDefinitionMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">final</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> beanClass <span class="token operator">=</span> beanDefinition<span class="token punctuation">.</span><span class="token function">getBeanClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			instanceBean <span class="token operator">=</span> beanClass<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u901A\u8FC7\u65E0\u53C2\u6784\u9020\u51FD\u6570</span>

			<span class="token comment">// \u6DFB\u52A0\u5230\u4E8C\u7EA7\u7F13\u5B58</span>
			<span class="token comment">//earlySingletonObjects.put(beanName, instanceBean);</span>

			<span class="token comment">// \u521B\u5EFA\u52A8\u6001\u4EE3\u7406\uFF08\u8026\u5408\u3001BeanPostProcessor\uFF09</span>
			<span class="token comment">// spring\u8FD8\u662F\u5E0C\u671B\u6B63\u5E38\u7684Bean \u8FD8\u662F\u5728\u521D\u59CB\u5316\u540E\u521B\u5EFA</span>
			<span class="token comment">// \u53EA\u5728\u5FAA\u73AF\u4F9D\u8D56\u7684\u60C5\u51B5\u4E0B\u5728\u5B9E\u4F8B\u5316\u540E\u521B\u5EFA</span>
			<span class="token comment">// \u6240\u4EE5\u6211\u4EEC\u9700\u8981\u5224\u65AD\u5F53\u524D\u662F\u4E0D\u662F\u5FAA\u73AF\u4F9D\u8D56</span>
			<span class="token comment">//Object o = new JdkProxyBeanPostProcessor().getEarlyBeanReference(instanceBean, beanName);</span>
			singletonFactories<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">JdkProxyBeanPostProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEarlyBeanReference</span><span class="token punctuation">(</span>earlySingletonObjects<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token comment">// \u6DFB\u52A0\u5230\u4E8C\u7EA7\u7F13\u5B58</span>
			<span class="token comment">// \u5982\u679C\u4F7F\u7528\u4E86\u4E09\u7EA7\u7F13\u5B58\uFF0C\u5C31\u8868\u793A\u662FAOP\u4E86\uFF0C\u90A3\u4E48\u8FD9\u91CC\u5B58\u4E00\u4E2A\u4E8C\u7EA7\u7F13\u5B58\u7684\u8BDD\uFF0C\u90A3\u4E48\u5B8C\u5168\u6CA1\u6709\u610F\u4E49</span>
			<span class="token comment">// \u5982\u679C\u51FA\u73B0\u52A8\u6001\u4EE3\u7406\uFF0C\u90A3\u4E48\u4E8C\u7EA7\u7F13\u5B58\u4E2D\u5B58\u50A8\u5C31\u5E94\u8BE5\u662F\u52A8\u6001\u4EE3\u7406\u51FA\u6765\u7684bean\uFF0C\u800C\u4E0D\u662F\u539F\u6765\u7684bean</span>
			<span class="token comment">// \u90A3\u4E48\u600E\u4E48\u901A\u8FC7\u4E8C\u7EA7\u7F13\u5B58\u5224\u5B9A\u662F\u5426\u662F\u5FAA\u73AF\u4F9D\u8D56\u5462</span>
			<span class="token comment">//earlySingletonObjects.put(beanName, instanceBean);</span>

			<span class="token comment">// \u5C5E\u6027\u8D4B\u503C</span>
			<span class="token keyword">final</span> <span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span> declaredFields <span class="token operator">=</span> beanClass<span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Field</span> declaredField <span class="token operator">:</span> declaredFields<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">final</span> <span class="token class-name">Autowired</span> annotation <span class="token operator">=</span> declaredField<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">Autowired</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>annotation <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token comment">// \u8BF4\u660E\u5C5E\u6027\u4E0A\u9762\u6709Autowired\u6CE8\u89E3</span>
					declaredField<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u6253\u5F00\u5C5E\u6027\u7684\u8BBF\u95EE\u6743\u9650</span>
					<span class="token comment">// \u9700\u8981\u5148\u521B\u5EFA\u51FAAutowired\u4F9D\u8D56\u7684\u5BF9\u8C61</span>
					<span class="token comment">// byname bytype byconstrator\u4E09\u79CD\u65B9\u5F0F</span>
					<span class="token comment">// \u8FD9\u91CC\u5199\u7B80\u5355\u4E00\u70B9\uFF0C\u901A\u8FC7byname\u7684\u65B9\u5F0F</span>
					<span class="token keyword">final</span> <span class="token class-name">String</span> name <span class="token operator">=</span> declaredField<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token keyword">final</span> <span class="token class-name">Object</span> fieldObject <span class="token operator">=</span> <span class="token function">getBean</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u62FF\u5230B\u7684Bean</span>
					declaredField<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>instanceBean<span class="token punctuation">,</span> fieldObject<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>

			<span class="token comment">// \u521D\u59CB\u5316</span>
			<span class="token comment">// \u5224\u65AD\u5F53\u524D\u7684Bean\u6709\u6CA1\u6709\u5B9E\u73B0\u521D\u59CB\u5316\u7684\u63A5\u53E3\uFF0C\u8FD9\u91CC\u5173\u6CE8\u7684\u662F\u5FAA\u73AF\u4F9D\u8D56\uFF0C\u5C31\u4E0D\u5199\u4E86</span>

			<span class="token comment">// \u5230\u8FD9\u91CC\u5DF2\u7ECF\u521B\u5EFA\u5B8C\u6210\u4E86</span>
			<span class="token comment">// \u6B63\u5E38\u60C5\u51B5\u4E0B\uFF0C\u662F\u5728\u521D\u59CB\u5316\u4E4B\u540E\u521B\u5EFA\u52A8\u6001\u4EE3\u7406</span>

			<span class="token comment">// \u5047\u5982A\u81EA\u5DF1\u4E5F\u662FAOP\uFF0C\u90A3\u4E48\u4E5F\u9700\u8981\u52A8\u6001\u4EE3\u7406</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>earlySingletonObjects<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				instanceBean <span class="token operator">=</span> earlySingletonObjects<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token comment">// \u6DFB\u52A0\u5230\u4E00\u7EA7\u7F13\u5B58\uFF08\u5355\u4F8B\u6C60\uFF09</span>
			singletonObjects<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> instanceBean<span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token comment">// remove \u4E8C\u7EA7\u7F13\u5B58\u548C\u4E09\u7EA7\u7F13\u5B58</span>
			earlySingletonObjects<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
			singletonFactories<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">return</span> instanceBean<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Object</span> <span class="token function">getSingleton</span><span class="token punctuation">(</span><span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u5148\u4ECE\u4E00\u7EA7\u7F13\u5B58\u4E2D\u62FF</span>
		<span class="token keyword">final</span> <span class="token class-name">Object</span> bean <span class="token operator">=</span> singletonObjects<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// \u8BF4\u660E\u662F\u5FAA\u73AF\u4F9D\u8D56</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>bean <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> singletonsCurrentlyInCreation<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

			<span class="token keyword">synchronized</span> <span class="token punctuation">(</span>singletonObjects<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// \u5982\u679C\u4E8C\u7EA7\u7F13\u5B58\u4E2D\u5B58\u5728\uFF0C\u5148\u4ECE\u4E8C\u7EA7\u7F13\u5B58\u4E2D\u62FF</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>earlySingletonObjects<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token keyword">return</span> earlySingletonObjects<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>

				<span class="token comment">// \u4ECE\u4E09\u7EA7\u7F13\u5B58\u4E2D\u62FF</span>
				<span class="token keyword">final</span> <span class="token class-name">ObjectFactory</span> factory <span class="token operator">=</span> singletonFactories<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>factory <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token keyword">final</span> <span class="token class-name">Object</span> o <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">getObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					earlySingletonObjects<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> o<span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token keyword">return</span> o<span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">return</span> bean<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6E90\u7801\u4E2D\u4E5F\u662F\u901A\u8FC7\u52A0\u9501\u7684\u65B9\u5F0F</p><p>getSingleton</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token class-name">Object</span> <span class="token function">getSingleton</span><span class="token punctuation">(</span><span class="token class-name">String</span> beanName<span class="token punctuation">,</span> <span class="token keyword">boolean</span> allowEarlyReference<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token doc-comment comment">/**
		 * \u7B2C\u4E00\u6B65:\u6211\u4EEC\u5C1D\u8BD5\u53BB\u4E00\u7EA7\u7F13\u5B58(\u5355\u4F8B\u7F13\u5B58\u6C60\u4E2D\u53BB\u83B7\u53D6\u5BF9\u8C61,\u4E00\u822C\u60C5\u51B5\u4ECE\u8BE5map\u4E2D\u83B7\u53D6\u7684\u5BF9\u8C61\u662F\u76F4\u63A5\u53EF\u4EE5\u4F7F\u7528\u7684)
		 * IOC\u5BB9\u5668\u521D\u59CB\u5316\u52A0\u8F7D\u5355\u5B9E\u4F8Bbean\u7684\u65F6\u5019\u7B2C\u4E00\u6B21\u8FDB\u6765\u7684\u65F6\u5019 \u8BE5map\u4E2D\u4E00\u822C\u8FD4\u56DE\u7A7A
		 */</span>
  <span class="token class-name">Object</span> singletonObject <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>singletonObjects<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/**
		 * \u82E5\u5728\u7B2C\u4E00\u7EA7\u7F13\u5B58\u4E2D\u6CA1\u6709\u83B7\u53D6\u5230\u5BF9\u8C61,\u5E76\u4E14singletonsCurrentlyInCreation\u8FD9\u4E2Alist\u5305\u542B\u8BE5beanName
		 * IOC\u5BB9\u5668\u521D\u59CB\u5316\u52A0\u8F7D\u5355\u5B9E\u4F8Bbean\u7684\u65F6\u5019\u7B2C\u4E00\u6B21\u8FDB\u6765\u7684\u65F6\u5019 \u8BE5list\u4E2D\u4E00\u822C\u8FD4\u56DE\u7A7A,\u4F46\u662F\u5FAA\u73AF\u4F9D\u8D56\u7684\u65F6\u5019\u53EF\u4EE5\u6EE1\u8DB3\u8BE5\u6761\u4EF6
		 */</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>singletonObject <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isSingletonCurrentlyInCreation</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>singletonObjects<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token doc-comment comment">/**
				 * \u5C1D\u8BD5\u53BB\u4E8C\u7EA7\u7F13\u5B58\u4E2D\u83B7\u53D6\u5BF9\u8C61(\u4E8C\u7EA7\u7F13\u5B58\u4E2D\u7684\u5BF9\u8C61\u662F\u4E00\u4E2A\u65E9\u671F\u5BF9\u8C61)
				 * \u4F55\u4E3A\u65E9\u671F\u5BF9\u8C61:\u5C31\u662Fbean\u521A\u521A\u8C03\u7528\u4E86\u6784\u9020\u65B9\u6CD5\uFF0C\u8FD8\u6765\u4E0D\u53CA\u7ED9bean\u7684\u5C5E\u6027\u8FDB\u884C\u8D4B\u503C\u7684\u5BF9\u8C61(\u7EAF\u51C0\u6001)
				 * \u5C31\u662F\u65E9\u671F\u5BF9\u8C61
				 */</span>
      singletonObject <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>earlySingletonObjects<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token doc-comment comment">/**
				 * \u4E8C\u7EA7\u7F13\u5B58\u4E2D\u4E5F\u6CA1\u6709\u83B7\u53D6\u5230\u5BF9\u8C61,allowEarlyReference\u4E3Atrue(\u53C2\u6570\u662F\u6709\u4E0A\u4E00\u4E2A\u65B9\u6CD5\u4F20\u9012\u8FDB\u6765\u7684true)
				 */</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>singletonObject <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> allowEarlyReference<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token doc-comment comment">/**
					 * \u76F4\u63A5\u4ECE\u4E09\u7EA7\u7F13\u5B58\u4E2D\u83B7\u53D6 ObjectFactory\u5BF9\u8C61 \u8FD9\u4E2A\u5BF9\u63A5\u5C31\u662F\u7528\u6765\u89E3\u51B3\u5FAA\u73AF\u4F9D\u8D56\u7684\u5173\u952E\u6240\u5728
					 * \u5728ioc\u540E\u671F\u7684\u8FC7\u7A0B\u4E2D,\u5F53bean\u8C03\u7528\u4E86\u6784\u9020\u65B9\u6CD5\u7684\u65F6\u5019,\u628A\u65E9\u671F\u5BF9\u8C61\u5305\u88F9\u6210\u4E00\u4E2AObjectFactory
					 * \u66B4\u9732\u5230\u4E09\u7EA7\u7F13\u5B58\u4E2D
					 */</span>
        <span class="token class-name">ObjectFactory</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> singletonFactory <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>singletonFactories<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u4ECE\u4E09\u7EA7\u7F13\u5B58\u4E2D\u83B7\u53D6\u5230\u5BF9\u8C61\u4E0D\u4E3A\u7A7A</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>singletonFactory <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token doc-comment comment">/**
						 * \u5728\u8FD9\u91CC\u901A\u8FC7\u66B4\u9732\u7684ObjectFactory \u5305\u88C5\u5BF9\u8C61\u4E2D,\u901A\u8FC7\u8C03\u7528\u4ED6\u7684getObject()\u6765\u83B7\u53D6\u6211\u4EEC\u7684\u65E9\u671F\u5BF9\u8C61
						 * \u5728\u8FD9\u4E2A\u73AF\u8282\u4E2D\u4F1A\u8C03\u7528\u5230 getEarlyBeanReference()\u6765\u8FDB\u884C\u540E\u7F6E\u5904\u7406
						 */</span>
          singletonObject <span class="token operator">=</span> singletonFactory<span class="token punctuation">.</span><span class="token function">getObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token comment">//\u628A\u65E9\u671F\u5BF9\u8C61\u653E\u7F6E\u5728\u4E8C\u7EA7\u7F13\u5B58,</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span>earlySingletonObjects<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> singletonObject<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token comment">//ObjectFactory \u5305\u88C5\u5BF9\u8C61\u4ECE\u4E09\u7EA7\u7F13\u5B58\u4E2D\u5220\u9664\u6389</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span>singletonFactories<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> singletonObject<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u5047\u5982\u8BF4\u6CA1\u6709\u4E8C\u7EA7\u7F13\u5B58\u7684\u8BDD\uFF0C\u90A3\u4E48\u5C31\u5F97\u628A\u4E00\u7EA7\u7F13\u5B58\u9501\u4E0A\uFF0C\u4F1A\u5BFC\u81F4\u8BFB\u53D6Bean\u7684\u65F6\u5019\u6548\u7387\u4F4E\uFF0C\u7279\u522B\u662F\u5728\u591A\u7EBF\u7A0B\u7684\u65F6\u5019</span>
<span class="token title important"><span class="token punctuation">#</span> \u6CA1\u6709\u5FAA\u73AF\u4F9D\u8D56\uFF0C\u5C31\u4E0D\u4F1A\u8BBF\u95EE\u4E8C\u4E09\u7EA7\u7F13\u5B58\uFF0C\u53EA\u6709\u5FAA\u73AF\u4F9D\u8D56\u624D\u4F1A\u8BBF\u95EE\u4E8C\u4E09\u7EA7\u7F13\u5B58</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><h4 id="\u76D1\u542C\u5668"><a class="header-anchor" href="#\u76D1\u542C\u5668" aria-hidden="true">#</a> \u76D1\u542C\u5668</h4><p>Spring\u4E8B\u4EF6\u4F53\u7CFB\u5305\u62EC\u4E09\u4E2A\u7EC4\u4EF6\uFF1A\u4E8B\u4EF6\uFF0C\u4E8B\u4EF6\u76D1\u542C\u5668\uFF0C\u4E8B\u4EF6\u5E7F\u64AD\u5668</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>\u5728\u6211\u4EEC\u7684\u4F7F\u7528\u8FC7\u7A0B\u4E2D\u5F88\u5C11\u53BB\u4F7F\u7528\u5230\u8FD9\u4E2A\uFF0C\u4E3B\u8981\u662F\u5B66\u4E60\u4E00\u4E0B\u5B83\u7684\u8BBE\u8BA1\u601D\u60F3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5185\u7F6E\u4E8B\u4EF6\u4E2D\u7531\u7CFB\u7EDF\u5185\u90E8\u8FDB\u884C\u53D1\u5E03\uFF0C\u53EA\u9700\u6CE8\u5165\u76D1\u542C\u5668</p><p><img src="`+_+'" alt="image-20220219130912878"></p><p><img src="'+U+`" alt="image-20220219130931916"></p><p>\u6BD4\u5982\uFF0C\u5173\u95ED\u7684\u65F6\u5019\u53D1\u5E03ContextClosedEvent\u4E8B\u4EF6</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doClose</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Check whether an actual close attempt is necessary...</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>active<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>closed<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isInfoEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;Closing &quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token class-name">LiveBeansView</span><span class="token punctuation">.</span><span class="token function">unregisterApplicationContext</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token comment">// Publish shutdown event.</span>
      <span class="token function">publishEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ContextClosedEvent</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;Exception thrown from ApplicationListener handling ContextClosedEvent&quot;</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Stop all Lifecycle beans, to avoid delays during individual destruction.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>lifecycleProcessor <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>lifecycleProcessor<span class="token punctuation">.</span><span class="token function">onClose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;Exception thrown from LifecycleProcessor on context close&quot;</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Destroy all cached singletons in the context&#39;s BeanFactory.</span>
    <span class="token function">destroyBeans</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Close the state of this context itself.</span>
    <span class="token function">closeBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Let subclasses do some final clean-up if they wish...</span>
    <span class="token function">onClose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Reset local application listeners to pre-refresh state.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>earlyApplicationListeners <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>applicationListeners<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>applicationListeners<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>earlyApplicationListeners<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Switch to inactive.</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>active<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>\u81EA\u5B9A\u4E49\u76D1\u542C\u5668\u793A\u4F8B</strong></p><p>\u539F\u7406\u5C31\u662F\u89C2\u5BDF\u8005\u6A21\u5F0F</p><ol><li>\u7F16\u5199\u4E8B\u4EF6</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u4E8B\u4EF6
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderEvent</span> <span class="token keyword">extends</span> <span class="token class-name">ApplicationEvent</span> <span class="token punctuation">{</span>
	<span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>

	<span class="token doc-comment comment">/**
	 * Create a new ApplicationEvent.
	 *
	 * <span class="token keyword">@param</span> <span class="token parameter">source</span> the object on which the event initially occurred (never <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token keyword">null</span></span></span><span class="token punctuation">}</span>)
	 */</span>
	<span class="token keyword">public</span> <span class="token class-name">OrderEvent</span><span class="token punctuation">(</span><span class="token class-name">Object</span> source<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">super</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u7F16\u5199\u76D1\u542C\u5668</li></ol><p>\u57FA\u4E8E\u5B9E\u73B0\u63A5\u53E3</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u76D1\u542C\u5668
 */</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderEventListener</span> <span class="token keyword">implements</span> <span class="token class-name">ApplicationListener</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OrderEvent</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
	<span class="token annotation punctuation">@Override</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onApplicationEvent</span><span class="token punctuation">(</span><span class="token class-name">OrderEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;\u51CF\u5E93\u5B58&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u51CF\u5E93\u5B58....&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u57FA\u4E8E\u6CE8\u89E3</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderEventListener</span> <span class="token punctuation">{</span><span class="token comment">// implements ApplicationListener&lt;OrderEvent&gt;</span>
	<span class="token comment">//@Override</span>
	<span class="token comment">// \u57FA\u4E8E\u6CE8\u89E3\u7684</span>
	<span class="token annotation punctuation">@EventListener</span><span class="token punctuation">(</span><span class="token class-name">OrderEvent</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onApplicationEvent</span><span class="token punctuation">(</span><span class="token class-name">OrderEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;\u51CF\u5E93\u5B58&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u51CF\u5E93\u5B58....&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>\u8C03\u7528\u6D4B\u8BD5</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyMainClass</span> <span class="token punctuation">{</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">final</span> <span class="token class-name">AnnotationConfigApplicationContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">MainConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">// \u4E0B\u5355</span>
		<span class="token keyword">final</span> <span class="token class-name">Order</span> order <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Order</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		order<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E0B\u5355&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// \u53D1\u5E03\u8BA2\u5355\u4E8B\u4EF6\uFF0C\u5927\u7684\u5E94\u7528\u4F7F\u7528MQ\uFF0C\u5C0F\u7684\u5E94\u7528\u624D\u4F7F\u7528</span>
		context<span class="token punctuation">.</span><span class="token function">publishEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">OrderEvent</span><span class="token punctuation">(</span>order<span class="token punctuation">,</span> <span class="token string">&quot;\u51CF\u5E93\u5B58&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u65E5\u5FD7...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>Order</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Order</span> <span class="token punctuation">{</span>
	<span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>

	<span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> id<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setId</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>\u6D4B\u8BD5\u7ED3\u679C</li></ol><p>\u5982\u679C\u6211\u4EEC\u53D1\u5E03\u4E8B\u4EF6\uFF0C\u90A3\u4E48OrderListener\u5C31\u4F1A\u76D1\u542C\u5230\u6211\u4EEC\u53D1\u5E03\u7684\u4E8B\u4EF6\uFF0C\u89E6\u53D1\u5BF9\u5E94\u7684\u4E8B\u4EF6</p><p>\u8FD9\u4E9B\u4E8B\u4EF6\u5728refresh\u51FD\u6570\u4E2D\u8C03\u7528\u7684</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u6700\u540E\u5BB9\u5668\u5237\u65B0 \u53D1\u5E03\u5237\u65B0\u4E8B\u4EF6(Spring cloud\u4E5F\u662F\u4ECE\u8FD9\u91CC\u542F\u52A8\u7684)</span>
<span class="token function">finishRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">finishRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Clear context-level resource caches (such as ASM metadata from scanning).\u6E05\u9664\u4E0A\u4E0B\u6587\u7EA7\u522B\u7684\u8D44\u6E90\u7F13\u5B58\uFF08\u4F8B\u5982\u6765\u81EA\u626B\u63CF\u7684ASM\u5143\u6570\u636E\uFF09</span>
  <span class="token function">clearResourceCaches</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Initialize lifecycle processor for this context.</span>
  <span class="token comment">// \u6CE8\u518ClifecycleProcessor \u58F0\u660E\u5468\u671F\u5904\u7406\u5668</span>
  <span class="token comment">//  	\u4F5C\u7528\uFF1A\u5F53ApplicationContext\u542F\u52A8\u6216\u505C\u6B62\u65F6\uFF0C\u5B83\u4F1A\u901A\u8FC7LifecycleProcessor\u6765\u4E0E\u6240\u6709\u58F0\u660E\u7684bean\u7684\u5468\u671F\u505A\u72B6\u6001\u66F4\u65B0</span>
  <span class="token function">initLifecycleProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Propagate refresh to lifecycle processor first.</span>
  <span class="token comment">// \u4E3A\u5B9E\u73B0\u4E86SmartLifecycle\u5E76\u4E14isAutoStartup \u81EA\u52A8\u542F\u52A8\u7684Lifecycle\u8C03\u7528start()\u65B9\u6CD5</span>
  <span class="token function">getLifecycleProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Publish the final event.</span>
  <span class="token comment">// \u53D1\u5E03\u5BB9\u5668\u542F\u52A8\u5B8C\u6BD5\u4E8B\u4EF6</span>
  <span class="token function">publishEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ContextRefreshedEvent</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Participate in LiveBeansView MBean, if active.</span>
  <span class="token comment">//  \u6CE8\u518C\u5F53\u524Dspring\u5BB9\u5668\u5230LiveBeansView</span>
  <span class="token comment">//  \u63D0\u4F9Bservlet(LiveBeansViewServlet)\u5728\u7EBF\u67E5\u770B\u6240\u6709\u7684bean json \u3001 \u4E3A\u4E86\u652F\u6301Spring Tool Suite\u7684\u667A\u80FD\u63D0\u793A</span>
  <span class="token class-name">LiveBeansView</span><span class="token punctuation">.</span><span class="token function">registerApplicationContext</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u600E\u4E48\u6837\u53EF\u4EE5\u5728\u6240\u6709\u7684Bean\u521B\u5EFA\u5B8C\u540E\u505A\u6269\u5C55\u4EE3\u7801\uFF1F</span>
\u53EF\u4EE5\u5229\u7528\u76D1\u542C\u5668
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><p><strong>\u7591\u95EE</strong></p><ol><li><p>\u540C\u6837\u7684\u4E8B\u4EF6\u80FD\u6709\u591A\u4E2A\u76D1\u542C\u5668 -- \u53EF\u4EE5\u7684</p></li><li><p>\u4E8B\u4EF6\u76D1\u542C\u5668\u4E00\u5B9A\u8981\u5199\u4E00\u4E2A\u7C7B\u53BB\u5B9E\u73B0\u5417 -- \u5176\u5B9E\u662F\u53EF\u4EE5\u4E0D\u9700\u8981\u7684\uFF0Cspring\u6709\u4E2A\u6CE8\u89E3@EventListener\uFF0C\u4FEE\u9970\u5728\u65B9\u6CD5</p></li></ol><p>\u4E0A\uFF0C\u7A0D\u540E\u7ED9\u51FA\u4F7F\u7528\u65B9\u6CD5</p><ol start="3"><li><p>\u4E8B\u4EF6\u76D1\u542C\u64CD\u4F5C\u548C\u53D1\u5E03\u4E8B\u4EF6\u7684\u64CD\u4F5C\u662F\u540C\u6B65\u7684\u5417\uFF1F -- \u662F\u7684\uFF0C\u6240\u4EE5\u5982\u679C\u6709\u4E8B\u52A1\uFF0C\u76D1\u542C\u64CD\u4F5C\u4E5F\u5728\u4E8B\u52A1\u5185</p></li><li><p>\u53EF\u4EE5\u4F5C\u4E3A\u5F02\u6B65\u5904\u7406\u5417\uFF1F --\u53EF\u4EE5 \u770B\u6E90\u7801\u6709\u89E3\u91CA\u3002\uFF1A</p></li></ol><p><img src="`+H+'" alt="image-20220219131211605"></p><h5 id="\u76D1\u542C\u5668\u539F\u7406"><a class="header-anchor" href="#\u76D1\u542C\u5668\u539F\u7406" aria-hidden="true">#</a> \u76D1\u542C\u5668\u539F\u7406</h5><p>\u539F\u7406\uFF1A\u89C2\u5BDF\u8005\u6A21\u5F0F</p><p>spring\u7684\u4E8B\u4EF6\u76D1\u542C\u6709\u4E09\u4E2A\u90E8\u5206\u7EC4\u6210\uFF1A</p><ul><li><p><strong>\u4E8B\u4EF6</strong>\uFF08ApplicationEvent) \u8D1F\u8D23\u5BF9\u5E94\u76F8\u5E94\u76D1\u542C\u5668 \u4E8B\u4EF6\u6E90\u53D1\u751F\u67D0\u4E8B\u4EF6\u662F\u7279\u5B9A\u4E8B\u4EF6\u76D1\u542C\u5668\u88AB\u89E6\u53D1\u7684\u539F\u56E0\u3002</p></li><li><p><strong>\u76D1\u542C\u5668(<strong>ApplicationListener) \u5BF9\u5E94\u4E8E\u89C2\u5BDF\u8005\u6A21\u5F0F\u4E2D\u7684</strong>\u89C2\u5BDF\u8005</strong>\u3002\u76D1\u542C\u5668\u76D1\u542C\u7279\u5B9A\u4E8B\u4EF6,\u5E76\u5728\u5185\u90E8\u5B9A\u4E49\u4E86\u4E8B\u4EF6\u53D1\u751F\u540E\u7684\u54CD\u5E94\u903B\u8F91\u3002</p></li><li><p><strong>\u4E8B\u4EF6\u53D1\u5E03\u5668</strong>\uFF08ApplicationEventMulticaster \uFF09\u5BF9\u5E94\u4E8E\u89C2\u5BDF\u8005\u6A21\u5F0F\u4E2D\u7684<strong>\u88AB\u89C2\u5BDF\u8005/\u4E3B\u9898\uFF0C\u8D1F\u8D23\u901A\u77E5\u89C2\u5BDF\u8005</strong> \u5BF9\u5916\u63D0\u4F9B\u53D1\u5E03\u4E8B\u4EF6\u548C\u589E\u5220\u4E8B\u4EF6\u76D1\u542C\u5668\u7684\u63A5\u53E3,\u7EF4\u62A4\u4E8B\u4EF6\u548C\u4E8B\u4EF6\u76D1\u542C\u5668\u4E4B\u95F4\u7684\u6620\u5C04\u5173\u7CFB,\u5E76\u5728\u4E8B\u4EF6\u53D1\u751F\u65F6\u8D1F\u8D23\u901A\u77E5\u76F8\u5173\u76D1\u542C\u5668\u3002</p></li></ul><p><strong>Spring\u4E8B\u4EF6\u673A\u5236\u662F\u89C2\u5BDF\u8005\u6A21\u5F0F\u7684\u4E00\u79CD\u5B9E\u73B0\uFF0C\u4F46\u662F\u9664\u4E86\u53D1\u5E03\u8005\u548C\u76D1\u542C\u8005\u8005\u4E24\u4E2A\u89D2\u8272\u4E4B\u5916\uFF0C\u8FD8\u6709\u4E00\u4E2AEventMultiCaster\u7684\u89D2\u8272\u8D1F\u8D23\u628A\u4E8B\u4EF6\u8F6C\u53D1\u7ED9\u76D1\u542C\u8005\uFF0C\u5DE5\u4F5C\u6D41\u7A0B\u5982\u4E0B\uFF1A</strong></p><p><img src="'+z+'" alt="image-20220219133901219"></p><p><strong>\u4E5F\u5C31\u662F\u8BF4\u4E0A\u9762\u4EE3\u7801\u4E2D\u53D1\u5E03\u8005\u8C03\u7528<code>applicationEventPublisher.publishEvent(msg); </code>\u662F\u4F1A\u5C06\u4E8B\u4EF6\u53D1\u9001\u7ED9\u4E86EventMultiCaster\uFF0C \u800C\u540E\u7531EventMultiCaster\u6CE8\u518C\u7740\u6240\u6709\u7684Listener\uFF0C\u7136\u540E\u6839\u636E\u4E8B\u4EF6\u7C7B\u578B\u51B3\u5B9A\u8F6C\u53D1\u7ED9\u90A3\u4E2AListener\u3002</strong></p><h5 id="\u6E90\u7801\u6D41\u7A0B"><a class="header-anchor" href="#\u6E90\u7801\u6D41\u7A0B" aria-hidden="true">#</a> \u6E90\u7801\u6D41\u7A0B</h5><p><img src="'+X+`" alt="image-20220219134022029"></p><h4 id="refresh\u51FD\u6570\u89E3\u6790"><a class="header-anchor" href="#refresh\u51FD\u6570\u89E3\u6790" aria-hidden="true">#</a> refresh\u51FD\u6570\u89E3\u6790</h4><p>\u4E3B\u8981\u662F\u901A\u8FC7\u8FD9\u4E2A\u51FD\u6570\uFF0C\u6765\u8BB2\u89E3\u76D1\u542C\u5668\uFF0C\u4F46\u662F\u4E5F\u4F1A\u6D89\u53CA\u5230\u4E0D\u662F\u76D1\u542C\u5668\u7684\u5185\u5BB9</p><p>Spring\u5728ApplicationContext\u63A5\u53E3\u7684\u62BD\u8C61\u5B9E\u73B0\u7C7BAbstractApplicationContext\u4E2D\u5B8C\u6210\u4E86\u4E8B\u4EF6\u4F53\u7CFB\u7684\u642D\u5EFA\u3002</p><p>AbstractApplicationContext\u62E5\u6709\u4E00\u4E2AapplicationEventMulticaster\u6210\u5458\u53D8\u91CF\uFF0C applicationEventMulticaster\u63D0\u4F9B\u4E86\u5BB9\u5668\u76D1\u542C\u5668\u7684\u6CE8\u518C\u8868\u3002</p><p>AbstractApplicationContext\u5728refresh()\u8FD9\u4E2A\u5BB9\u5668\u542F\u52A8\u65B9\u6CD5\u4E2D\u642D\u5EFA\u4E86\u4E8B\u4EF6\u7684\u57FA\u7840\u8BBE\u65BD,\u5176\u4E2DAbstractApplicationContext\u7684refresh\u65B9\u6CD5\u5B9E\u73B0\u5982\u4E0B:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span><span class="token punctuation">,</span> <span class="token class-name">IllegalStateException</span> <span class="token punctuation">{</span>
  <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>startupShutdownMonitor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//1:\u51C6\u5907\u5237\u65B0\u4E0A\u4E0B\u6587\u73AF\u5883</span>
    <span class="token function">prepareRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//2:\u83B7\u53D6\u544A\u8BC9\u5B50\u7C7B\u521D\u59CB\u5316Bean\u5DE5\u5382  \u4E0D\u540C\u5DE5\u5382\u4E0D\u540C\u5B9E\u73B0</span>
    <span class="token class-name">ConfigurableListableBeanFactory</span> beanFactory <span class="token operator">=</span> <span class="token function">obtainFreshBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//3:\u5BF9bean\u5DE5\u5382\u8FDB\u884C\u586B\u5145\u5C5E\u6027</span>
    <span class="token function">prepareBeanFactory</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u7B2C\u56DB:\u7559\u4E2A\u5B50\u7C7B\u53BB\u5B9E\u73B0\u8BE5\u63A5\u53E3</span>
      <span class="token function">postProcessBeanFactory</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// \u8C03\u7528\u6211\u4EEC\u7684bean\u5DE5\u5382\u7684\u540E\u7F6E\u5904\u7406\u5668. 1. \u4F1A\u5728\u6B64\u5C06class\u626B\u63CF\u6210beanDefinition  2.bean\u5DE5\u5382\u7684\u540E\u7F6E\u5904\u7406\u5668\u8C03\u7528</span>
      <span class="token function">invokeBeanFactoryPostProcessors</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// \u6CE8\u518C\u6211\u4EECbean\u7684\u540E\u7F6E\u5904\u7406\u5668</span>
      <span class="token function">registerBeanPostProcessors</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// \u521D\u59CB\u5316\u56FD\u9645\u5316\u8D44\u6E90\u5904\u7406\u5668.</span>
      <span class="token function">initMessageSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// \u521B\u5EFA\u4E8B\u4EF6\u591A\u64AD\u5668</span>
      <span class="token function">initApplicationEventMulticaster</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// \u8FD9\u4E2A\u65B9\u6CD5\u540C\u6837\u4E5F\u662F\u7559\u4E2A\u5B50\u7C7B\u5B9E\u73B0\u7684springboot\u4E5F\u662F\u4ECE\u8FD9\u4E2A\u65B9\u6CD5\u8FDB\u884C\u542F\u52A8tomcat\u7684.</span>
      <span class="token function">onRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">//\u628A\u6211\u4EEC\u7684\u4E8B\u4EF6\u76D1\u542C\u5668\u6CE8\u518C\u5230\u591A\u64AD\u5668\u4E0A</span>
      <span class="token function">registerListeners</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// \u5B9E\u4F8B\u5316\u6211\u4EEC\u5269\u4F59\u7684\u5355\u5B9E\u4F8Bbean.</span>
      <span class="token function">finishBeanFactoryInitialization</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// \u6700\u540E\u5BB9\u5668\u5237\u65B0 \u53D1\u5E03\u5237\u65B0\u4E8B\u4EF6(Spring cloud\u4E5F\u662F\u4ECE\u8FD9\u91CC\u542F\u52A8\u7684)</span>
      <span class="token function">finishRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">BeansException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isWarnEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;Exception  encountered during context initialization - &quot;</span> <span class="token operator">+</span>
                    <span class="token string">&quot;cancelling refresh attempt: &quot;</span> <span class="token operator">+</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token comment">// Destroy already created singletons to avoid dangling resources.</span>
      <span class="token function">destroyBeans</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// Reset &#39;active&#39; flag.</span>
      <span class="token function">cancelRefresh</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// Propagate exception to caller.</span>
      <span class="token keyword">throw</span> ex<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">finally</span> <span class="token punctuation">{</span>
      <span class="token comment">// Reset common introspection caches in Spring&#39;s core, since we</span>
      <span class="token comment">// might not ever need metadata for singleton beans anymore...</span>
      <span class="token function">resetCommonCaches</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7528\u6237\u53EF\u4EE5\u5728\u914D\u7F6E\u6587\u4EF6\u4E2D\u4E3A\u5BB9\u5668\u5B9A\u4E49\u4E00\u4E2A\u81EA\u5B9A\u4E49\u7684\u4E8B\u4EF6\u5E7F\u64AD\u5668\uFF0C\u53EA\u8981\u5B9E\u73B0ApplicationEventMulticaster\u5C31\u53EF\u4EE5\u4E86\uFF0CSpring\u4F1A\u901A\u8FC7 \u53CD\u5C04\u7684\u673A\u5236\u5C06\u5176\u6CE8\u518C\u6210\u5BB9\u5668\u7684\u4E8B\u4EF6\u5E7F\u64AD\u5668\uFF0C\u5982\u679C\u6CA1\u6709\u627E\u5230\u914D\u7F6E\u7684\u5916\u90E8\u4E8B\u4EF6\u5E7F\u64AD\u5668\uFF0CSpring\u81EA\u52A8\u4F7F\u7528 SimpleApplicationEventMulticaster\u4F5C\u4E3A\u4E8B\u4EF6\u5E7F\u64AD\u5668\u3002</p><ol><li>prepareRefresh</li></ol><p>\u51C6\u5907\u5237\u65B0\u4E0A\u4E0B\u6587\u73AF\u5883</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">prepareRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Switch to active.</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>startupDate <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>closed<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u9700\u8981\u6FC0\u6D3B\u5B83\u624D\u80FD\u4F7F\u7528\uFF0C\u5982\u679C\u6CA1\u6709\u6FC0\u6D3B\u7684\u8BDD\uFF0C\u90A3\u4E48\u5C31\u4E0D\u80FD\u83B7\u53D6getBean\u548C\u521B\u5EFABean</span>
  <span class="token comment">// \u53EA\u6709\u8FD9\u4E2A\u5730\u65B9\u8BBE\u7F6E\u4E3Atrue\uFF0C\u6FC0\u6D3B\u5BB9\u5668</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>active<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isInfoEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;Refreshing &quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
		 * \u76F8\u4F20\u8BE5\u65B9\u6CD5\u5728\u7F51\u4E0A\u5F88\u591A\u4EBA\u8BF4\u8BE5\u65B9\u6CD5\u6CA1\u6709\u7528,\u56E0\u4E3A\u8FD9\u4E2A\u65B9\u6CD5\u662F\u7559\u4E2A\u5B50\u7C7B\u5B9E\u73B0\u7684,\u7531\u4E8E\u662F\u5BF9spring\u6E90\u7801\u7684\u6838\u5FC3
		 * \u8BBE\u8BA1\u7406\u5FF5\u6CA1\u6709\u5F04\u6E05\u695A,\u6B63\u5F0F\u7531\u4E8Espring\u63D0\u4F9B\u4E86\u5927\u91CF\u7684\u53EF\u6269\u5C55\u7684\u63A5\u53E3\u63D0\u4F9B\u7ED9\u6211\u4EEC\u81EA\u5DF1\u6765\u5B9E\u73B0
		 * \u6BD4\u5982\u6211\u4EEC\u81EA\u5DF1\u5199\u4E00\u4E2A\u7C7B\u91CD\u5199\u4E86initPropertySources\u65B9\u6CD5\uFF0C\u5728\u8BE5\u65B9\u6CD5\u4E2D\u8BBE\u7F6E\u4E86\u4E00\u4E2A\u73AF\u5883\u53D8\u91CF\u7684\u503C\u4E3AA
		 * \u542F\u52A8\u7684\u65F6\u5019\uFF0C\u6211\u7684\u73AF\u5883\u53D8\u91CF\u4E2D\u6CA1\u6709\u8BE5\u503C\u5C31\u4F1A\u542F\u52A8\u629B\u51FA\u5F02\u5E38
		 */</span>
  <span class="token function">initPropertySources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token doc-comment comment">/**
		 * \u7528\u6765\u6821\u9A8C\u6211\u4EEC\u5BB9\u5668\u542F\u52A8\u5FC5\u987B\u4F9D\u8D56\u7684\u73AF\u5883\u53D8\u91CF\u7684\u503C
		 */</span>
  <span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">validateRequiredProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token doc-comment comment">/**
		 * \u521B\u5EFA\u4E00\u4E2A\u65E9\u671F\u4E8B\u4EF6\u76D1\u542C\u5668\u5BF9\u8C61
		 */</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>earlyApplicationListeners <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>earlyApplicationListeners <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>applicationListeners<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// Reset local application listeners to pre-refresh state.</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>applicationListeners<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>applicationListeners<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>earlyApplicationListeners<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
		 * \u521B\u5EFA\u4E00\u4E2A\u5BB9\u5668\u7528\u4E8E\u4FDD\u5B58\u65E9\u671F\u5F85\u53D1\u5E03\u7684\u4E8B\u4EF6\u96C6\u5408
		 * \u4EC0\u4E48\u662F\u65E9\u671F\u4E8B\u4EF6?
		 * \u5C31\u662F\u6211\u4EEC\u7684\u4E8B\u4EF6\u76D1\u542C\u5668\u8FD8\u6CA1\u6709\u6CE8\u518C\u5230\u591A\u64AD\u5668\u4E0A\u7684\u65F6\u5019\u90FD\u79F0\u4E3A\u65E9\u671F\u4E8B\u4EF6
		 * \u65E9\u671F\u4E8B\u4EF6\u4E0D\u9700\u8981\u624B\u52A8publishEvent\u53D1\u5E03\uFF0C \u5728registerListeners\u4E2D\u4F1A\u81EA\u52A8\u53D1\u5E03\uFF0C \u53D1\u5E03\u5B8C\u65E9\u671F\u4E8B\u4EF6\u5C31\u4E0D\u5B58\u5728\u4E86\u3002
		 */</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>earlyApplicationEvents <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>obtainFreshBeanFactory</li></ol><p>xml\u52A0\u8F7Dspring\u4F1A\u5728\u8FD9\u91CC\u52A0\u8F7DbeanDefinition\uFF0Cjavaconfig\u53EA\u662F\u5237\u65B0\u4E86beanFactory</p><ul><li>javaconfig\u4F7F\u7528\u7684\u6269\u5C55\u70B9\u7684\u65B9\u5F0F</li><li>xml\u4F7F\u7528\u7684\u76F4\u63A5\u8026\u5408\u5230\u4EE3\u7801\u4E2D</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token class-name">ConfigurableListableBeanFactory</span> <span class="token function">obtainFreshBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token doc-comment comment">/**
		 *  xml\u52A0\u8F7Dspring\u4F1A\u5728\u8FD9\u91CC\u52A0\u8F7DbeanDefinition ClassPathXmlApplicationContext
		 *  javaconfig\u53EA\u662F\u5237\u65B0\u4E86beanFactory\uFF0C\u8BBE\u7F6E\u4E86\u5E8F\u5217\u5316ID
		 */</span>
  <span class="token function">refreshBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//\u8FD4\u56DE\u6211\u4EEC\u7684bean\u5DE5\u5382</span>
  <span class="token class-name">ConfigurableListableBeanFactory</span> beanFactory <span class="token operator">=</span> <span class="token function">getBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Bean factory for &quot;</span> <span class="token operator">+</span> <span class="token function">getDisplayName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;: &quot;</span> <span class="token operator">+</span> beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> beanFactory<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>prepareBeanFactory</li></ol><p>\u5BF9bean\u5DE5\u5382\u8FDB\u884C\u586B\u5145\u5C5E\u6027\uFF0C\u6CE8\u518C\u89E3\u6790\u63A5\u53E3\u65B9\u5F0F\u7684\u76D1\u542C\u5668\u7684BeanPostProcessor</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
	 * \u4E3A\u6211\u4EEC\u7684bean\u5DE5\u5382\u586B\u5145\u5185\u90E8\u5C5E\u6027
	 * <span class="token keyword">@param</span> <span class="token parameter">beanFactory</span> the BeanFactory to configure
	 */</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">prepareBeanFactory</span><span class="token punctuation">(</span><span class="token class-name">ConfigurableListableBeanFactory</span> beanFactory<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//\u8BBE\u7F6Ebean\u5DE5\u5382\u7684\u7C7B\u52A0\u8F7D\u5668\u4E3A\u5F53\u524Dapplication\u5E94\u7528\u7684\u52A0\u8F7D\u5668</span>
  beanFactory<span class="token punctuation">.</span><span class="token function">setBeanClassLoader</span><span class="token punctuation">(</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//\u4E3Abean\u5DE5\u5382\u8BBE\u7F6E\u6211\u4EEC\u6807\u51C6\u7684SPEL\u8868\u8FBE\u5F0F\u89E3\u6790\u5668\u5BF9\u8C61StandardBeanExpressionResolver</span>
  beanFactory<span class="token punctuation">.</span><span class="token function">setBeanExpressionResolver</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StandardBeanExpressionResolver</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">.</span><span class="token function">getBeanClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//\u4E3A\u6211\u4EEC\u7684bean\u5DE5\u5382\u8BBE\u7F6E\u4E86\u4E00\u4E2ApropertityEditor \u5C5E\u6027\u8D44\u6E90\u7F16\u8F91\u5668\u5BF9\u8C61(\u7528\u4E8E\u540E\u9762\u7684\u7ED9bean\u5BF9\u8C61\u8D4B\u503C\u4F7F\u7528)</span>
  beanFactory<span class="token punctuation">.</span><span class="token function">addPropertyEditorRegistrar</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ResourceEditorRegistrar</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">//\u6CE8\u518C\u4E86\u4E00\u4E2A\u5B8C\u6574\u7684ApplicationContextAwareProcessor \u540E\u7F6E\u5904\u7406\u5668\u7528\u6765\u5904\u7406ApplicationContextAware\u63A5\u53E3\u7684\u56DE\u8C03\u65B9\u6CD5</span>
  beanFactory<span class="token punctuation">.</span><span class="token function">addBeanPostProcessor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ApplicationContextAwareProcessor</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


  <span class="token doc-comment comment">/**
		 *
		 * \u5FFD\u7565\u4EE5\u4E0B\u63A5\u53E3\u7684bean\u7684 \u63A5\u53E3\u51FD\u6570\u65B9\u6CD5\u3002 \u5728populateBean\u65F6
		 * \u56E0\u4E3A\u4EE5\u4E0B\u63A5\u53E3\u90FD\u6709setXXX\u65B9\u6CD5\uFF0C \u8FD9\u4E9B\u65B9\u6CD5\u4E0D\u7279\u6B8A\u5904\u7406\u5C06\u4F1A\u81EA\u52A8\u6CE8\u5165\u5BB9\u5668\u4E2D\u7684bean
		 * \u56E0\u4E3Aspring bean\u6709\u4E00\u4E2A\u81EA\u52A8\u88C5\u914D\u7684\u8BBE\u7F6E\uFF0Cauto-wired byname bytype
		 */</span>
  beanFactory<span class="token punctuation">.</span><span class="token function">ignoreDependencyInterface</span><span class="token punctuation">(</span><span class="token class-name">EnvironmentAware</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  beanFactory<span class="token punctuation">.</span><span class="token function">ignoreDependencyInterface</span><span class="token punctuation">(</span><span class="token class-name">EmbeddedValueResolverAware</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  beanFactory<span class="token punctuation">.</span><span class="token function">ignoreDependencyInterface</span><span class="token punctuation">(</span><span class="token class-name">ResourceLoaderAware</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  beanFactory<span class="token punctuation">.</span><span class="token function">ignoreDependencyInterface</span><span class="token punctuation">(</span><span class="token class-name">ApplicationEventPublisherAware</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  beanFactory<span class="token punctuation">.</span><span class="token function">ignoreDependencyInterface</span><span class="token punctuation">(</span><span class="token class-name">MessageSourceAware</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  beanFactory<span class="token punctuation">.</span><span class="token function">ignoreDependencyInterface</span><span class="token punctuation">(</span><span class="token class-name">ApplicationContextAware</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token doc-comment comment">/**
		 * \u5F53\u6CE8\u518C\u4E86\u4F9D\u8D56\u89E3\u6790\u540E\uFF0C\u4F8B\u5982\u5F53\u6CE8\u518C\u4E86\u5BF9 BeanFactory.class \u7684\u89E3\u6790\u4F9D\u8D56\u540E\uFF0C
		 * \u5F53 bean \u7684\u5C5E\u6027\u6CE8 \u5165\u7684\u65F6\u5019\uFF0C \u4E00\u65E6\u68C0\u6D4B\u5230\u5C5E\u6027\u4E3A BeanFactory \u7C7B\u578B\u4FBF\u4F1A\u5C06 beanFactory \u7684\u5B9E\u4F8B\u6CE8\u5165\u8FDB\u53BB\u3002
		 * \u77E5\u9053\u4E3A\u4EC0\u4E48\u53EF\u4EE5
		 * @Autowired
		 * ApplicationContext  applicationContext  \u5C31\u662F\u56E0\u4E3A\u8FD9\u91CC\u8BBE\u7F6E\u4E86
		 */</span>
  beanFactory<span class="token punctuation">.</span><span class="token function">registerResolvableDependency</span><span class="token punctuation">(</span><span class="token class-name">BeanFactory</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
  beanFactory<span class="token punctuation">.</span><span class="token function">registerResolvableDependency</span><span class="token punctuation">(</span><span class="token class-name">ResourceLoader</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  beanFactory<span class="token punctuation">.</span><span class="token function">registerResolvableDependency</span><span class="token punctuation">(</span><span class="token class-name">ApplicationEventPublisher</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  beanFactory<span class="token punctuation">.</span><span class="token function">registerResolvableDependency</span><span class="token punctuation">(</span><span class="token class-name">ApplicationContext</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">//\u6CE8\u518C\u4E86\u4E00\u4E2A\u4E8B\u4EF6\u76D1\u542C\u5668\u63A2\u6D4B\u5668\u540E\u7F6E\u5904\u7406\u5668\u63A5\u53E3</span>
  beanFactory<span class="token punctuation">.</span><span class="token function">addBeanPostProcessor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ApplicationListenerDetector</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u5904\u7406aspectj\u7684</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>beanFactory<span class="token punctuation">.</span><span class="token function">containsBean</span><span class="token punctuation">(</span>LOAD_TIME_WEAVER_BEAN_NAME<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    beanFactory<span class="token punctuation">.</span><span class="token function">addBeanPostProcessor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LoadTimeWeaverAwareProcessor</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Set a temporary ClassLoader for type matching.</span>
    beanFactory<span class="token punctuation">.</span><span class="token function">setTempClassLoader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ContextTypeMatchClassLoader</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">.</span><span class="token function">getBeanClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">//\u6CE8\u518C\u4E86bean\u5DE5\u5382\u7684\u5185\u90E8\u7684bean</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>beanFactory<span class="token punctuation">.</span><span class="token function">containsLocalBean</span><span class="token punctuation">(</span>ENVIRONMENT_BEAN_NAME<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u73AF\u5883</span>
    beanFactory<span class="token punctuation">.</span><span class="token function">registerSingleton</span><span class="token punctuation">(</span>ENVIRONMENT_BEAN_NAME<span class="token punctuation">,</span> <span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>beanFactory<span class="token punctuation">.</span><span class="token function">containsLocalBean</span><span class="token punctuation">(</span>SYSTEM_PROPERTIES_BEAN_NAME<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u73AF\u5883\u7CFB\u7EDF\u5C5E\u6027</span>
    beanFactory<span class="token punctuation">.</span><span class="token function">registerSingleton</span><span class="token punctuation">(</span>SYSTEM_PROPERTIES_BEAN_NAME<span class="token punctuation">,</span> <span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSystemProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>beanFactory<span class="token punctuation">.</span><span class="token function">containsLocalBean</span><span class="token punctuation">(</span>SYSTEM_ENVIRONMENT_BEAN_NAME<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u7CFB\u7EDF\u73AF\u5883</span>
    beanFactory<span class="token punctuation">.</span><span class="token function">registerSingleton</span><span class="token punctuation">(</span>SYSTEM_ENVIRONMENT_BEAN_NAME<span class="token punctuation">,</span> <span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSystemEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>ApplicationContextAwareProcessor\uFF0CBean\u7684\u540E\u7F6E\u5904\u7406\u5668\uFF0C\u6CE8\u518C\u4E86\u4E00\u4E2A\u5B8C\u6574\u7684ApplicationContextAwareProcessor \u540E\u7F6E\u5904\u7406\u5668\u7528\u6765\u5904\u7406ApplicationContextAware\u63A5\u53E3\u7684\u56DE\u8C03\u65B9\u6CD5</li></ul><ol start="4"><li>initApplicationEventMulticaster</li></ol><p>\u591A\u64AD\u5668\u4F5C\u4E3A\u7684\u662F\u4E00\u4E2A\u88AB\u89C2\u5BDF\u8005</p><p>\u7528\u6237\u53EF\u4EE5\u5728\u914D\u7F6E\u6587\u4EF6\u4E2D\u4E3A\u5BB9\u5668\u5B9A\u4E49\u4E00\u4E2A\u81EA\u5B9A\u4E49\u7684\u4E8B\u4EF6\u5E7F\u64AD\u5668\uFF0C\u53EA\u8981\u5B9E\u73B0ApplicationEventMulticaster\u5C31\u53EF\u4EE5\u4E86\uFF0CSpring\u4F1A\u901A\u8FC7 \u53CD\u5C04\u7684\u673A\u5236\u5C06\u5176\u6CE8\u518C\u6210\u5BB9\u5668\u7684\u4E8B\u4EF6\u5E7F\u64AD\u5668\uFF0C\u5982\u679C\u6CA1\u6709\u627E\u5230\u914D\u7F6E\u7684\u5916\u90E8\u4E8B\u4EF6\u5E7F\u64AD\u5668\uFF0CSpring\u81EA\u52A8\u4F7F\u7528 SimpleApplicationEventMulticaster\u4F5C\u4E3A\u4E8B\u4EF6\u5E7F\u64AD\u5668\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
	 * \u4ECEbean\u5DE5\u5382\u4E2D\u83B7\u53D6\u6216\u8005\u76F4\u63A5\u663E\u793A\u7684new\u4E00\u4E2A\u591A\u64AD\u5668\u8D4B\u503C\u7ED9\u6211\u4EEC\u7684applicatoinContext\u5BF9\u8C61
	 * \u91C7\u7528\u5178\u578B\u7684\u8BBE\u8BA1\u6A21\u5F0F\u5C31\u662F\u89C2\u5BDF\u8005\u6A21\u5F0F  \u591A\u64AD\u5668\u4F5C\u4E3A\u7684\u662F\u4E00\u4E2A\u88AB\u89C2\u5BDF\u8005
	 * <span class="token keyword">@see</span> <span class="token reference"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">SimpleApplicationEventMulticaster</span></span>
	 */</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">initApplicationEventMulticaster</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//\u83B7\u53D6\u6211\u4EEC\u7684bean\u5DE5\u5382\u5BF9\u8C61</span>
  <span class="token class-name">ConfigurableListableBeanFactory</span> beanFactory <span class="token operator">=</span> <span class="token function">getBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//\u5224\u65AD\u5BB9\u5668\u4E2D\u662F\u6CA1\u6709\u6709\u6211\u4EEC\u7684applicationEventMulticaster \u5E94\u7528\u591A\u64AD\u5668\u7EC4\u4EF6</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>beanFactory<span class="token punctuation">.</span><span class="token function">containsLocalBean</span><span class="token punctuation">(</span>APPLICATION_EVENT_MULTICASTER_BEAN_NAME<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u76F4\u63A5\u663E\u793A\u7684\u8C03\u7528\u6211\u4EEC\u7684getBean\u83B7\u53D6\u51FA\u6765\u8D4B\u503C\u7ED9\u6211\u4EEC\u7684applicationContext\u5BF9\u8C61</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>applicationEventMulticaster <span class="token operator">=</span>
      beanFactory<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>APPLICATION_EVENT_MULTICASTER_BEAN_NAME<span class="token punctuation">,</span> <span class="token class-name">ApplicationEventMulticaster</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Using ApplicationEventMulticaster [&quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>applicationEventMulticaster <span class="token operator">+</span> <span class="token string">&quot;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">//\u5BB9\u5668\u4E2D\u6CA1\u6709\u7684\u8BDD</span>
  <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">//spring ioc\u663E\u793A\u7684new \u4E00\u4E2ASimpleApplicationEventMulticaster\u5BF9\u8C61\u4FDD\u5B58\u5728applicatoinContext\u5BF9\u8C61\u4E2D</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>applicationEventMulticaster <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleApplicationEventMulticaster</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u5E76\u4E14\u6CE8\u5165\u5230\u5BB9\u5668\u4E2D</span>
    beanFactory<span class="token punctuation">.</span><span class="token function">registerSingleton</span><span class="token punctuation">(</span>APPLICATION_EVENT_MULTICASTER_BEAN_NAME<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>applicationEventMulticaster<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Unable to locate ApplicationEventMulticaster with name &#39;&quot;</span> <span class="token operator">+</span>
                   APPLICATION_EVENT_MULTICASTER_BEAN_NAME <span class="token operator">+</span>
                   <span class="token string">&quot;&#39;: using default [&quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>applicationEventMulticaster <span class="token operator">+</span> <span class="token string">&quot;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u518C\u4E8B\u4EF6\u76D1\u542C\u5668</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">registerListeners</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//\u83B7\u53D6\u5BB9\u5668\u4E2D\u6240\u6709\u7684\u76D1\u542C\u5668\u5BF9\u8C61</span>
  <span class="token comment">// \u8FD9\u4E2A\u65F6\u5019\u6B63\u5E38\u6D41\u7A0B\u662F\u4E0D\u4F1A\u6709\u76D1\u542C\u5668\u7684</span>
  <span class="token comment">// \uFF08\u56E0\u4E3A\u76D1\u542C\u5668\u4E0D\u4F1A\u5728\u8FD9\u4E4B\u524D\u6CE8\u518C\uFF0C\u5728initApplicationEventMulticaster\u540E\u5728registerListeners\u4E4B\u524D\uFF0C\u53EA\u6709\u4E00\u4E2A\u53EF\u80FD\u5728\uFF1A\u5728onRefresh\u91CC\u9762\u6CE8\u518C\u4E86\u76D1\u542C\u5668\uFF09</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">ApplicationListener</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> listener <span class="token operator">:</span> <span class="token function">getApplicationListeners</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u628A\u76D1\u542C\u5668\u6328\u4E2A\u7684\u6CE8\u518C\u5230\u6211\u4EEC\u7684\u591A\u64AD\u5668\u4E0A\u53BB</span>
    <span class="token function">getApplicationEventMulticaster</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addApplicationListener</span><span class="token punctuation">(</span>listener<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">//\u83B7\u53D6bean\u5B9A\u4E49\u4E2D\u7684\u76D1\u542C\u5668\u5BF9\u8C61</span>
  <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> listenerBeanNames <span class="token operator">=</span> <span class="token function">getBeanNamesForType</span><span class="token punctuation">(</span><span class="token class-name">ApplicationListener</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//\u628A\u76D1\u542C\u5668\u7684\u540D\u79F0\u6CE8\u518C\u5230\u6211\u4EEC\u7684\u591A\u64AD\u5668\u4E0A</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> listenerBeanName <span class="token operator">:</span> listenerBeanNames<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">getApplicationEventMulticaster</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addApplicationListenerBean</span><span class="token punctuation">(</span>listenerBeanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">//\u5728\u8FD9\u91CC\u83B7\u53D6\u6211\u4EEC\u7684\u65E9\u671F\u4E8B\u4EF6</span>
  <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ApplicationEvent</span><span class="token punctuation">&gt;</span></span> earlyEventsToProcess <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>earlyApplicationEvents<span class="token punctuation">;</span>
  <span class="token comment">// \u5728\u8FD9\u91CC\u8D4Bnull\u3002  \u4E5F\u5C31\u662F\u503C\u6B64\u4E4B\u540E\u90FD\u5C06\u6CA1\u6709\u65E9\u671F\u4E8B\u4EF6\u4E86</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>earlyApplicationEvents <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>earlyEventsToProcess <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u901A\u8FC7\u591A\u64AD\u5668\u8FDB\u884C\u64AD\u53D1\u65E9\u671F\u4E8B\u4EF6</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">ApplicationEvent</span> earlyEvent <span class="token operator">:</span> earlyEventsToProcess<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">getApplicationEventMulticaster</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">multicastEvent</span><span class="token punctuation">(</span>earlyEvent<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Spring\u6839\u636E\u53CD\u5C04\u673A\u5236\uFF0C\u4F7F\u7528ListableBeanFactory\u7684getBeansOfType\u65B9\u6CD5\uFF0C\u4ECEBeanDefinitionRegistry\u4E2D\u627E\u51FA\u6240\u6709\u5B9E\u73B0 org.springframework.context.ApplicationListener\u7684Bean\uFF0C\u5C06\u5B83\u4EEC\u6CE8\u518C\u4E3A\u5BB9\u5668\u7684\u4E8B\u4EF6\u76D1\u542C\u5668\uFF0C\u5B9E\u9645\u7684\u64CD\u4F5C\u5C31\u662F\u5C06\u5176\u6DFB\u52A0\u5230\u4E8B\u4EF6\u5E7F\u64AD\u5668\u6240\u63D0\u4F9B\u7684\u76D1\u542C\u5668\u6CE8\u518C\u8868\u4E2D\u3002</p><p>\u53D1\u5E03\u4E8B\u4EF6</p><p>\u8DDF\u7740 finishRefresh();\u65B9\u6CD5\u8FDB\u5165publishEvent(new ContextRefreshedEvent(this));\u65B9\u6CD5\u5982\u4E0B:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">publishEvent</span><span class="token punctuation">(</span><span class="token class-name">Object</span> event<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">ResolvableType</span> eventType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> <span class="token string">&quot;Event must not be null&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isTraceEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    logger<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">&quot;Publishing event in &quot;</span> <span class="token operator">+</span> <span class="token function">getDisplayName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;: &quot;</span> <span class="token operator">+</span> event<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Decorate event as an ApplicationEvent if necessary</span>
  <span class="token class-name">ApplicationEvent</span> applicationEvent<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>event <span class="token keyword">instanceof</span> <span class="token class-name">ApplicationEvent</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    applicationEvent <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ApplicationEvent</span><span class="token punctuation">)</span> event<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">else</span> <span class="token punctuation">{</span>
    applicationEvent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PayloadApplicationEvent</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>eventType <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      eventType <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">PayloadApplicationEvent</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> applicationEvent<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getResolvableType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Multicast right now if possible - or lazily once the multicaster is initialized</span>
  <span class="token comment">// \u8FD9\u91CC\u662F\u552F\u4E00\u6DFB\u52A0\u65E9\u671F\u4E8B\u4EF6\u7684\u5730\u65B9\u3002\u6240\u4EE5\u4E00\u5B9A\u8981\u53D1\u5E03\u4E8B\u4EF6\u624D\u80FD\u6DFB\u52A0\u65E9\u671F\u4E8B\u4EF6</span>
  <span class="token comment">// \u53EA\u6709\u5F53\u6267\u884C\u529Brefresh--&gt;registerListeners \u624D\u4F1A\u5C06earlyApplicationEvents\u8D4B\u4E3Anull,\u6240\u4EE5registerListeners\u4E4B\u524D\u53D1\u5E03\u7684\u4E8B\u4EF6\u90FD\u662F\u65E9\u671F\u4E8B\u4EF6</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>earlyApplicationEvents <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>earlyApplicationEvents<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>applicationEvent<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">getApplicationEventMulticaster</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">multicastEvent</span><span class="token punctuation">(</span>applicationEvent<span class="token punctuation">,</span> eventType<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Publish event via parent context as well...</span>
  <span class="token comment">// \u5982\u679C\u662F\u7236\u5BB9\u5668\uFF0C\u4E5F\u4F1A\u5411\u7236\u5BB9\u5668\u91CC\u5E7F\u64AD\u4E00\u4EFD</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>parent <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>parent <span class="token keyword">instanceof</span> <span class="token class-name">AbstractApplicationContext</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">AbstractApplicationContext</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span>parent<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">publishEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> eventType<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>parent<span class="token punctuation">.</span><span class="token function">publishEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728AbstractApplicationContext\u7684publishEvent\u65B9\u6CD5\u4E2D\uFF0C Spring\u59D4\u6258ApplicationEventMulticaster\u5C06\u4E8B\u4EF6\u901A\u77E5\u7ED9\u6240\u6709\u7684\u4E8B\u4EF6\u76D1\u542C\u5668</p><p><strong>Spring\u9ED8\u8BA4\u7684\u4E8B\u4EF6\u5E7F\u64AD\u5668SimpleApplicationEventMulticaster</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">multicastEvent</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ApplicationEvent</span> event<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">ResolvableType</span> eventType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">ResolvableType</span> type <span class="token operator">=</span> <span class="token punctuation">(</span>eventType <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> eventType <span class="token operator">:</span> <span class="token function">resolveDefaultEventType</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//\u4ECE\u591A\u64AD\u5668\u4E2D\u83B7\u53D6\u51FA\u6240\u6709\u7684\u76D1\u542C\u5668</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ApplicationListener</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> listener <span class="token operator">:</span> <span class="token function">getApplicationListeners</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> type<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u5224\u65AD\u591A\u64AD\u5668\u4E2D\u662F\u5426\u652F\u6301\u5F02\u6B65\u591A\u64AD\u7684</span>
    <span class="token class-name">Executor</span> executor <span class="token operator">=</span> <span class="token function">getTaskExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>executor <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//\u5F02\u6B65\u64AD\u53D1\u4E8B\u4EF6</span>
      executor<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token function">invokeListener</span><span class="token punctuation">(</span>listener<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token comment">//\u540C\u6B65\u64AD\u53D1</span>
      <span class="token function">invokeListener</span><span class="token punctuation">(</span>listener<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">invokeListener</span><span class="token punctuation">(</span><span class="token class-name">ApplicationListener</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> listener<span class="token punctuation">,</span> <span class="token class-name">ApplicationEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">ErrorHandler</span> errorHandler <span class="token operator">=</span> <span class="token function">getErrorHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>errorHandler <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token function">doInvokeListener</span><span class="token punctuation">(</span>listener<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      errorHandler<span class="token punctuation">.</span><span class="token function">handleError</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">doInvokeListener</span><span class="token punctuation">(</span>listener<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u904D\u5386\u6CE8\u518C\u7684\u6BCF\u4E2A\u76D1\u542C\u5668\uFF0C\u5E76\u542F\u52A8\u6765\u8C03\u7528\u6BCF\u4E2A\u76D1\u542C\u5668\u7684onApplicationEvent\u65B9\u6CD5\u3002\u7531\u4E8ESimpleApplicationEventMulticaster\u7684taskExecutor\u7684\u5B9E\u73B0\u7C7B\u662FSyncTaskExecutor\uFF0C\u56E0\u6B64\uFF0C\u4E8B\u4EF6\u76D1\u542C\u5668\u5BF9\u4E8B\u4EF6\u7684\u5904\u7406\uFF0C\u662F\u540C\u6B65\u8FDB\u884C\u7684\u3002</p><p>\u4ECE\u4EE3\u7801\u53EF\u4EE5\u770B\u51FA\uFF0CapplicationContext.publishEvent()\u65B9\u6CD5\uFF0C\u9700\u8981\u540C\u6B65\u7B49\u5F85\u5404\u4E2A\u76D1\u542C\u5668\u5904\u7406\u5B8C\u4E4B\u540E\uFF0C\u624D\u8FD4\u56DE\u3002</p><p>\u4E5F\u5C31\u662F\u8BF4\uFF0CSpring\u63D0\u4F9B\u7684\u4E8B\u4EF6\u673A\u5236\uFF0C\u9ED8\u8BA4\u662F\u540C\u6B65\u7684\u3002\u5982\u679C\u60F3\u7528\u5F02\u6B65\u7684\uFF0C\u53EF\u4EE5\u81EA\u5DF1\u5B9E\u73B0ApplicationEventMulticaster\u63A5\u53E3\uFF0C\u5E76\u5728Spring\u5BB9\u5668\u4E2D\u6CE8\u518Cid\u4E3AapplicationEventMulticaster\u7684Bean\u3002\u4F8B\u5982\u4E0B\u9762\u6240\u793A:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AsyncApplicationEventMulticaster</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractApplicationEventMulticaster</span> <span class="token punctuation">{</span>
	<span class="token keyword">private</span> <span class="token class-name">TaskExecutor</span> taskExecutor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleAsyncTaskExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setTaskExecutor</span><span class="token punctuation">(</span><span class="token class-name">TaskExecutor</span> taskExecutor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>taskExecutor <span class="token operator">=</span> <span class="token punctuation">(</span>taskExecutor <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> taskExecutor <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">SimpleAsyncTaskExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> 

	<span class="token keyword">protected</span> <span class="token class-name">TaskExecutor</span> <span class="token function">getTaskExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>taskExecutor<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">multicastEvent</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ApplicationEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ApplicationListener</span><span class="token punctuation">&gt;</span></span> it <span class="token operator">=</span> <span class="token function">getApplicationListeners</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> it<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">final</span> <span class="token class-name">ApplicationListener</span> listener <span class="token operator">=</span> it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">getTaskExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					listener<span class="token punctuation">.</span><span class="token function">onApplicationEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>spring\u914D\u7F6E\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;applicationEventMulticaster&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">ApplicationEventMulticaster</span> <span class="token function">simpleApplicationEventMulticaster</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">SimpleApplicationEventMulticaster</span> eventMulticaster <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleApplicationEventMulticaster</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//ThreadPoolTaskExecutor  </span>
  eventMulticaster<span class="token punctuation">.</span><span class="token function">setTaskExecutor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SimpleAsyncTaskExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> eventMulticaster<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Spring\u53D1\u5E03\u4E8B\u4EF6\u4E4B\u540E\uFF0C\u6240\u6709\u6CE8\u518C\u7684\u4E8B\u4EF6\u76D1\u542C\u5668\uFF0C\u90FD\u4F1A\u6536\u5230\u8BE5\u4E8B\u4EF6\uFF0C\u56E0\u6B64\uFF0C\u4E8B\u4EF6\u76D1\u542C\u5668\u5728\u5904\u7406\u4E8B\u4EF6\u65F6\uFF0C\u9700\u8981\u5148\u5224\u65AD\u8BE5\u4E8B\u4EF6\u662F\u5426\u662F\u81EA\u5DF1\u5173\u5FC3\u7684\u3002</p><p>Sping\u4E8B\u4EF6\u4F53\u7CFB\u6240\u4F7F\u7528\u7684\u8BBE\u8BA1\u6A21\u5F0F\u662F\uFF1A\u89C2\u5BDF\u8005\u6A21\u5F0F\u3002ApplicationListener\u662F\u89C2\u5BDF\u8005\u63A5\u53E3\uFF0C\u63A5\u53E3\u4E2D\u5B9A\u4E49\u4E86onApplicationEvent\u65B9\u6CD5\uFF0C\u8BE5\u65B9\u6CD5\u7684\u4F5C\u7528\u662F\u5BF9ApplicationEvent\u4E8B\u4EF6\u8FDB\u884C\u5904\u7406\u3002</p><h2 id="aop\u89E3\u6790"><a class="header-anchor" href="#aop\u89E3\u6790" aria-hidden="true">#</a> AOP\u89E3\u6790</h2>`,152);function an(tn,en){const t=p("ExternalLinkIcon");return o(),c(l,null,[G,n("blockquote",null,[J,n("p",null,[W,n("a",K,[Y,Q,Z,$,i(t)])]),nn]),sn],64)}var on=e(V,[["render",an],["__file","spring\u6838\u5FC3.html.vue"]]);export{on as default};
